from Drizzle.Runtime import *## Behavior script: exportAllBitmaps#class exportAllBitmaps(LingoBehaviorScript):     def __init__(self):         super().__init__()            def saveimages(self, savepath):         retval = LingoNumber(1)        if (not LingoGlobal.ToBool(LingoGlobal.strp(savepath)) and not LingoGlobal.ToBool(LingoGlobal.contains(savepath,self._global.the_dirSeparator))):             retval = -LingoNumber(1)            return retval                    elif LingoGlobal.ToBool(LingoGlobal.last_char(LingoGlobal.op_ne(savepath,self._global.the_dirSeparator))):             savepath = LingoGlobal.concat(savepath,self._global.the_dirSeparator)                    imgobj = self._global.xtra("ImgXtra").new()        m = self._global.castlib(LingoNumber(4)).member.count        tmp_i = LingoNumber(1)        while tmp_i.IntValue < m:             i = tmp_i            if LingoGlobal.op_eq_b(self._global.member(i,LingoNumber(4)).type, LingoSymbol("bitmap")):                 fname = LingoGlobal.concat(self._global.member(i,LingoNumber(4)).name,".bmp")                if LingoGlobal.op_eq_b(fname, ".bmp"):                     fname = LingoGlobal.concat("member_",i,".bmp")                                    self._global.put(LingoGlobal.concat("savePath: ",savepath,fname))
                ixerr = imgobj.ix_saveimage(LingoPropertyList("image", self._global.member(i,LingoNumber(4)).image,"filename", LingoGlobal.concat(savepath,fname),"format", "BMP"))                if LingoGlobal.op_eq_b(ixerr, LingoNumber(0)):                     retval = -LingoNumber(2)                                                tmp_i = i            tmp_i += LingoNumber(1)                    imgxtra = LingoNumber(0)        return retval                    