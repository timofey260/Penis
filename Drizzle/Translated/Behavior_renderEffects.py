from Drizzle.Runtime import *## Behavior script: renderEffects#class renderEffects(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         if ((LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(56))) and LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(48)))) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             self._global._player.appminimize()        if LingoGlobal.ToBool(self._movieScript.checkexit()):             self._global._player.quit()        if LingoGlobal.ToBool(self._movieScript.gViewRender):             if LingoGlobal.ToBool(self._movieScript.checkexitrender()):                 self._global._movie.go(LingoNumber(9))            self.newframe()
            if LingoGlobal.ToBool(self._movieScript.keepLooping):                 self._global.go(self._global.the_frame)                    else:            while LingoGlobal.ToBool(self._movieScript.keepLooping):                 self.newframe()                            return None            def newframe(self):         self._movieScript.vertRepeater = LingoGlobal.op_add(self._movieScript.vertRepeater,LingoNumber(1))        if LingoGlobal.op_eq_b(self._movieScript.gEEprops.effects.count, LingoNumber(0)):             self._movieScript.keepLooping = LingoNumber(0)            return None                    elif LingoGlobal.op_eq_b(self._movieScript.r, LingoNumber(0)):             self._movieScript.vertRepeater = LingoNumber(1)            self._movieScript.r = LingoNumber(1)            self.initeffect()        if ((self._movieScript.vertRepeater > LingoNumber(60) and LingoGlobal.op_eq_b(self._movieScript.gEEprops.effects[self._movieScript.r].crossscreen, LingoNumber(0))) or (self._movieScript.vertRepeater > self._movieScript.gLOprops.size.locv and LingoGlobal.op_eq_b(self._movieScript.gEEprops.effects[self._movieScript.r].crossscreen, LingoNumber(1)))):             self.exiteffect()
            self._movieScript.r = LingoGlobal.op_add(self._movieScript.r,LingoNumber(1))            if self._movieScript.r > self._movieScript.gEEprops.effects.count:                 self._movieScript.keepLooping = LingoNumber(0)                return None                            else:                self.initeffect()
                self._movieScript.vertRepeater = LingoNumber(1)                                    if LingoGlobal.op_eq_b(self._movieScript.gEEprops.effects[self._movieScript.r].crossscreen, LingoNumber(0)):             self._global.sprite(LingoNumber(59)).locv = LingoGlobal.op_mul(self._movieScript.vertRepeater,LingoNumber(20))            tmp_q = LingoNumber(1)            while tmp_q < LingoNumber(100):                 q = tmp_q                q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)                c2 = LingoGlobal.op_add(self._movieScript.vertRepeater,self._movieScript.gRenderCameraTilePos.locv)                if (((q2 > LingoNumber(0) and q2 <= self._movieScript.gLOprops.size.loch) and c2 > LingoNumber(0)) and c2 <= self._movieScript.gLOprops.size.locv):                     self.effectontile(q,self._movieScript.vertRepeater,q2,c2)                tmp_q = q                tmp_q += LingoNumber(1)                                    else:            self._global.sprite(LingoNumber(59)).locv = LingoGlobal.op_mul(LingoGlobal.op_sub(self._movieScript.vertRepeater,self._movieScript.gRenderCameraTilePos.locv),LingoNumber(20))            tmp_q2 = LingoNumber(1)            while tmp_q2 < self._movieScript.gLOprops.size.loch:                 q2 = tmp_q2                self.effectontile(LingoGlobal.op_sub(q2,self._movieScript.gRenderCameraTilePos.loch),LingoGlobal.op_sub(self._movieScript.vertRepeater,self._movieScript.gRenderCameraTilePos.locv),q2,self._movieScript.vertRepeater)
                tmp_q2 = q2                tmp_q2 += LingoNumber(1)                                            return None            def effectontile(self, q, c, q2, c2):         if self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):             savseed = self._global.the_randomSeed            self._global.the_randomSeed = self._movieScript.seedfortile(LingoGlobal.point(q2,c2),self._movieScript.effectSeed)            match self._movieScript.gEEprops.effects[self._movieScript.r].nm.lower():                 case "slime" | "rust" | "barnacles" | "erode" | "melt" | "roughen" | "slimex3" | "destructive melt" | "super melt" | "super erode" | "decalsonlyslime" | "ultra super erode" | "colored barnacles" | "sand" | "impacts" | "fat slime":                    self.applystandarderosion(q,c,LingoNumber(0),self._movieScript.gEEprops.effects[self._movieScript.r].nm)                case "root grass" | "cacti" | "rubble" | "rain moss" | "seed pods" | "grass" | "horse tails" | "circuit plants" | "feather plants" | "colored rubble" | "reeds" | "lavenders":                    self.applystandardplant(q,c,LingoNumber(0),self._movieScript.gEEprops.effects[self._movieScript.r].nm)                case "lslime":                    self._movieScript.drfslimeapply(q,c)                case "dense mold":                    self.applywlplant(q,c)                case "growers":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                         self.applyhugeflower(q,c,LingoNumber(0))                                    case "mini growers":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                         self.applyminigrowers(q,c,LingoNumber(0))                                    case "arm growers":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                         self.applyarmgrower(q,c,LingoNumber(0))                                    case "fungi flowers":                    if self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                         self.applyfungiflower(q,c)                                    case "colored fungi flowers":                    if LingoGlobal.op_eq_b(self._movieScript.gdLayer, "C"):                         if self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                             self.applyfungiflower(q,c)                                            elif self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                         self.applycoloredfungiflower(q,c)                                    case "lighthouse flowers":                    if self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                         self.applylhflower(q,c)                                    case "colored lighthouse flowers":                    if LingoGlobal.op_eq_b(self._movieScript.gdLayer, "C"):                         if self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                             self.applylhflower(q,c)                                            elif self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                         self.applycoloredlhflower(q,c)                                    case "foliage":                    if self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                         self.applyfoliage(q,c)                                    case "assorted trash":                    if self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                         self.applyassortedtrash(q,c)                                    case "high grass":                    if self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                         self.applyhighgrass(q,c)                                    case "small springs":                    if self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                         self.applysmallsprings(q,c)                                    case "high fern":                    if self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                         self.applyhighfern(q,c)                                    case "mistletoe":                    if self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                         self.applymistletoe(q,c)                                    case "fern" | "giant mushroom":                    if self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                         self.applybigplant(q,c)                                    case "sprawlbush" | "featherfern" | "fungus tree":                    if self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] > LingoNumber(0):                         self.apply3dsprawler(q,c,self._movieScript.gEEprops.effects[self._movieScript.r].nm)                                    case "hang roots":                    tmp_r2 = LingoNumber(1)                    while tmp_r2 < LingoNumber(3):                         r2 = tmp_r2                        if self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2]:                             self.applyhangroots(q,c,LingoNumber(0))                        tmp_r2 = r2                        tmp_r2 += LingoNumber(1)                                                            case "colored hang roots":                    if LingoGlobal.op_eq_b(self._movieScript.gdLayer, "C"):                         tmp_r2 = LingoNumber(1)                        while tmp_r2 < LingoNumber(3):                             r2 = tmp_r2                            if self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2]:                                 self.applyhangroots(q,c,LingoNumber(0))                            tmp_r2 = r2                            tmp_r2 += LingoNumber(1)                                                                        else:                        tmp_r2 = LingoNumber(1)                        while tmp_r2 < LingoNumber(3):                             r2 = tmp_r2                            if self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2]:                                 self.applycoloredhangroots(q,c,LingoNumber(0))                            tmp_r2 = r2                            tmp_r2 += LingoNumber(1)                                                                                        case "ivy":                    tmp_r2 = LingoNumber(1)                    while tmp_r2 < LingoNumber(3):                         r2 = tmp_r2                        if self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2]:                             self.applyivy(q,c,LingoNumber(0))                        tmp_r2 = r2                        tmp_r2 += LingoNumber(1)                                                            case "clovers":                    self.applyresroots(q,c)
                    self.applystandarderosion(q,c,LingoNumber(0),self._movieScript.gEEprops.effects[self._movieScript.r].nm)                case "wires":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                         self.applywire(q,c,LingoNumber(0))                                    case "chains":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                         self.applychain(q,c,LingoNumber(0))                                    case "colored wires":                    if LingoGlobal.op_eq_b(self._movieScript.gdIndLayer, "C"):                         if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                             self.applywire(q,c,LingoNumber(0))                                            elif (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                         self.applycoloredwires(q,c,LingoNumber(0))                                    case "colored chains":                    if LingoGlobal.op_eq_b(self._movieScript.gdIndLayer, "C"):                         if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                             self.applychain(q,c,LingoNumber(0))                                            elif (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                         self.applycoloredchains(q,c,LingoNumber(0))                                    case "ring chains":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                         self.applyringchains(q,c,LingoNumber(0))                                    case "blackgoo":                    self.applyblackgoo(q,c,LingoNumber(0))                case "darkslime":                    self.applydarkslime(q,c,self._movieScript.gEEprops.effects[self._movieScript.r].nm)                case "restore as scaffolding" | "restore as pipes":                    self.applyrestoreeffect(q,c,q2,c2,self._movieScript.gEEprops.effects[self._movieScript.r].nm)                case "rollers":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(5)), LingoNumber(1))):                         self.applyroller(q,c,LingoNumber(0))                                    case "thorn growers":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and self._global.random(LingoNumber(3)) > LingoNumber(1)):                         self.applythorngrower(q,c,LingoNumber(0))                                    case "spinets":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and self._global.random(LingoNumber(3)) > LingoNumber(1)):                         self.applyspinets(q,c,LingoNumber(0))                                    case "garbage spirals":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(6)), LingoNumber(1))):                         self.applygarbagespiral(q,c,LingoNumber(0))                                    case "thick roots":                    if self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2]:                         self.applythickroots(q,c,LingoNumber(0))                                    case "colored thick roots":                    if LingoGlobal.op_eq_b(self._movieScript.gdLayer, "C"):                         if self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2]:                             self.applythickroots(q,c,LingoNumber(0))                                            elif self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2]:                         self.applycoloredthickroots(q,c,LingoNumber(0))                                    case "shadow plants":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(3)), LingoNumber(1))):                         self.applyshadowplants(q,c,LingoNumber(0))                                    case "colored shadow plants":                    if LingoGlobal.op_eq_b(self._movieScript.gdLayer, "C"):                         if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(3)), LingoNumber(1))):                             self.applyshadowplants(q,c,LingoNumber(0))                                            elif (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(3)), LingoNumber(1))):                         self.applycoloredshadowplants(q,c,LingoNumber(0))                                    case "root plants":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(3)), LingoNumber(1))):                         self.applyrootplants(q,c,LingoNumber(0))                                    case "daddycorruption":                    self.applydaddycorruption(q,c,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2])                case "corruption no eye":                    self.applycorruptionnoeye(q,c,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2])                case "slag":                    self.applycorruptionnoeye(q,c,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2])                case "wastewater mold":                    if LingoGlobal.op_eq_b(self._movieScript.gdLayer, "C"):                         self.applycorruptionnoeye(q,c,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2])                    else:                        self.applywastewatermold(q,c,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2])                                    case "little flowers":                    self.applyflowers(q,c,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2])                case "left facing kelp":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                         self.applysidekelp(q,c)                                    case "right facing kelp":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                         self.applyflipsidekelp(q,c)                                    case "mixed facing kelp":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                         self.applymixkelp(q,c)                                    case "bubble grower":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                         self.applybubblegrower(q,c)                                    case "moss wall":                    self.applymosswall(q,c,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2])                case "club moss":                    self.applyclubmoss(q,c,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2])                case "fuzzy growers":                    if (self._global.random(LingoNumber(100)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] and self._global.random(LingoNumber(3)) > LingoNumber(1)):                         self.applyfuzzygrower(q,c)                                                self._global.the_randomSeed = savseed                            return None            def initeffect(self):         self._movieScript.effectSeed = LingoNumber(0)        tmp_a = LingoNumber(1)        while tmp_a < self._movieScript.gEEprops.effects[self._movieScript.r].options.count:             a = tmp_a            if LingoGlobal.op_eq_b(self._movieScript.gEEprops.effects[self._movieScript.r].options[a][LingoNumber(1)], "Seed"):                 self._movieScript.effectSeed = self._movieScript.gEEprops.effects[self._movieScript.r].options[a][LingoNumber(3)]                break                            tmp_a = a            tmp_a += LingoNumber(1)                    self._movieScript.effectIn3D = LingoGlobal.FALSE        self._movieScript.gRotOp = LingoGlobal.FALSE        for tmp_op in self._movieScript.gEEprops.effects[self._movieScript.r].options:             op = tmp_op            match op[LingoNumber(1)].lower():                 case "layers":                    self._movieScript.lrSup = LingoList("All","1","2","3","1:st and 2:nd","2:nd and 3:rd")[LingoList("All","1","2","3","1:st and 2:nd","2:nd and 3:rd").getpos(op[LingoNumber(3)])]                                    case "color":                    self._movieScript.colr = LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(255)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(255)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))[LingoList("Color1","Color2","Dead").getpos(op[LingoNumber(3)])]                    self._movieScript.gdLayer = LingoList("A","B","C")[LingoList("Color1","Color2","Dead").getpos(op[LingoNumber(3)])]                                    case "detail color":                    self._movieScript.colrDetail = LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(255)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(255)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))[LingoList("Color1","Color2","Dead").getpos(op[LingoNumber(3)])]                    self._movieScript.gdDetailLayer = LingoList("A","B","C")[LingoList("Color1","Color2","Dead").getpos(op[LingoNumber(3)])]                                    case "effect color":                    self._movieScript.colrInd = LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(255)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(255)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))[LingoList("EffectColor1","EffectColor2","None").getpos(op[LingoNumber(3)])]                    self._movieScript.gdIndLayer = LingoList("A","B","C")[LingoList("EffectColor1","EffectColor2","None").getpos(op[LingoNumber(3)])]                                    case "seed":                    self._global.the_randomSeed = op[LingoNumber(3)]                                    case "3d":                    self._movieScript.effectIn3D = LingoGlobal.op_eq(op[LingoNumber(3)],"On")                                    case "rotate":                    self._movieScript.gRotOp = LingoGlobal.op_eq(op[LingoNumber(3)],"On")                                    case "fatness":                    self._movieScript.fatOp = LingoList("1px","2px","3px","random")[LingoList("1px","2px","3px","random").getpos(op[LingoNumber(3)])]                                    case "size":                    self._movieScript.chOp = LingoList("Small","FAT")[LingoList("Small","FAT").getpos(op[LingoNumber(3)])]                                    case "affect gradients and decals":                    self._movieScript.gradAf = LingoGlobal.op_eq(op[LingoNumber(3)],"Yes")                                    case "color intensity":                    self._movieScript.colrIntensity = LingoList("H","M","L","N","R")[LingoList("High","Medium","Low","None","Random").getpos(op[LingoNumber(3)])]                                    case "fruit density":                    self._movieScript.fruitDensity = LingoList("H","M","L","N")[LingoList("High","Medium","Low","None").getpos(op[LingoNumber(3)])]                                    case "leaf density":                    self._movieScript.leafDensity = op[LingoNumber(3)]                                                        match self._movieScript.gEEprops.effects[self._movieScript.r].nm.lower():             case "blackgoo":                cols = LingoNumber(100)                rows = LingoNumber(60)                self._global.member("blackOutImg1").image = self._global.image(LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(rows,LingoNumber(20)),LingoNumber(32))                self._global.member("blackOutImg1").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(rows,LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), LingoNumber(255)))
                self._global.member("blackOutImg2").image = self._global.image(LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(rows,LingoNumber(20)),LingoNumber(32))                self._global.member("blackOutImg2").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(rows,LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), LingoNumber(255)))
                self._global.sprite(LingoNumber(57)).visibility = LingoNumber(1)                self._global.sprite(LingoNumber(58)).visibility = LingoNumber(1)                tmp_q = LingoNumber(1)                while tmp_q < LingoNumber(100):                     q = tmp_q                    tmp_c = LingoNumber(1)                    while tmp_c < LingoNumber(60):                         c = tmp_c                        q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)                        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)                        if (((q2 < LingoNumber(1) or q2 > self._movieScript.gLOprops.size.loch) or c2 < LingoNumber(1)) or c2 > self._movieScript.gLOprops.size.locv):                             self._global.member("blackOutImg1").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))))
                            self._global.member("blackOutImg2").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))))                        tmp_c = c                        tmp_c += LingoNumber(1)                                            tmp_q = q                    tmp_q += LingoNumber(1)                                    rct = self._global.member("blob").image.rect                tmp_q2 = LingoNumber(1)                while tmp_q2 < cols:                     q2 = tmp_q2                    tmp_c2 = LingoNumber(1)                    while tmp_c2 < rows:                         c2 = tmp_c2                        if (((LingoGlobal.op_add(q2,self._movieScript.gRenderCameraTilePos.loch) > LingoNumber(0) and LingoGlobal.op_add(q2,self._movieScript.gRenderCameraTilePos.loch) <= self._movieScript.gLOprops.size.loch) and LingoGlobal.op_add(c2,self._movieScript.gRenderCameraTilePos.locv) > LingoNumber(0)) and LingoGlobal.op_add(c2,self._movieScript.gRenderCameraTilePos.locv) <= self._movieScript.gLOprops.size.locv):                             tile = LingoGlobal.op_add(LingoGlobal.point(q2,c2),self._movieScript.gRenderCameraTilePos)                            if LingoGlobal.op_eq_b(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[tile.loch][tile.locv], LingoNumber(0)):                                 spnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q2,c2)),LingoGlobal.point(-LingoNumber(10),-LingoNumber(10)))                                tmp_d = LingoNumber(1)                                while tmp_d < LingoNumber(10):                                     d = tmp_d                                    tmp_e = LingoNumber(1)                                    while tmp_e < LingoNumber(10):                                         e = tmp_e                                        ps = LingoGlobal.point(LingoGlobal.op_add(spnt.loch,LingoGlobal.op_mul(d,LingoNumber(2))),LingoGlobal.op_add(spnt.locv,LingoGlobal.op_mul(e,LingoNumber(2))))                                        self._global.member("blackOutImg1").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(6)),self._global.random(self._global.random(LingoNumber(11)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(6)),self._global.random(self._global.random(LingoNumber(11)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(6)),self._global.random(self._global.random(LingoNumber(11)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(6)),self._global.random(self._global.random(LingoNumber(11))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))
                                        self._global.member("blackOutImg2").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(14)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(14)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(14)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(14))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))
                                        tmp_e = e                                        tmp_e += LingoNumber(1)                                                                            tmp_d = d                                    tmp_d += LingoNumber(1)                                                                                                elif ((self._movieScript.gLEProps.matrix[tile.loch][tile.locv][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(5)) > LingoNumber(0) or self._movieScript.gLEProps.matrix[tile.loch][tile.locv][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(4)) > LingoNumber(0)) and LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[tile.loch][tile.locv][LingoNumber(2)][LingoNumber(1)], LingoNumber(1))):                                 ps = self._movieScript.givemiddleoftile(LingoGlobal.point(q2,c2))                                self._global.member("blackOutImg1").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))
                                self._global.member("blackOutImg2").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))
                                self._global.member("blackOutImg1").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))
                                self._global.member("blackOutImg2").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))                                                    tmp_c2 = c2                        tmp_c2 += LingoNumber(1)                                            tmp_q2 = q2                    tmp_q2 += LingoNumber(1)                                                case "super blackgoo":                cols = LingoNumber(100)                rows = LingoNumber(60)                self._global.member("blackOutImg1").image = self._global.image(LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(rows,LingoNumber(20)),LingoNumber(32))                self._global.member("blackOutImg1").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(rows,LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), LingoNumber(255)))
                self._global.member("blackOutImg2").image = self._global.image(LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(rows,LingoNumber(20)),LingoNumber(32))                self._global.member("blackOutImg2").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(rows,LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), LingoNumber(255)))
                self._global.sprite(LingoNumber(57)).visibility = LingoNumber(1)                self._global.sprite(LingoNumber(58)).visibility = LingoNumber(1)                tmp_q = LingoNumber(1)                while tmp_q < LingoNumber(100):                     q = tmp_q                    tmp_c = LingoNumber(1)                    while tmp_c < LingoNumber(60):                         c = tmp_c                        q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)                        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)                        if (((q2 < LingoNumber(1) or q2 > self._movieScript.gLOprops.size.loch) or c2 < LingoNumber(1)) or c2 > self._movieScript.gLOprops.size.locv):                             self._global.member("blackOutImg1").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))))
                            self._global.member("blackOutImg2").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))))                        tmp_c = c                        tmp_c += LingoNumber(1)                                            tmp_q = q                    tmp_q += LingoNumber(1)                                    rct = self._global.member("blob").image.rect                tmp_q2 = LingoNumber(1)                while tmp_q2 < cols:                     q2 = tmp_q2                    tmp_c2 = LingoNumber(1)                    while tmp_c2 < rows:                         c2 = tmp_c2                        if (((LingoGlobal.op_add(q2,self._movieScript.gRenderCameraTilePos.loch) > LingoNumber(0) and LingoGlobal.op_add(q2,self._movieScript.gRenderCameraTilePos.loch) <= self._movieScript.gLOprops.size.loch) and LingoGlobal.op_add(c2,self._movieScript.gRenderCameraTilePos.locv) > LingoNumber(0)) and LingoGlobal.op_add(c2,self._movieScript.gRenderCameraTilePos.locv) <= self._movieScript.gLOprops.size.locv):                             tile = LingoGlobal.op_add(LingoGlobal.point(q2,c2),self._movieScript.gRenderCameraTilePos)                            if LingoGlobal.op_eq_b(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[tile.loch][tile.locv], LingoNumber(0)):                                 spnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q2,c2)),LingoGlobal.point(-LingoNumber(10),-LingoNumber(10)))                                tmp_d = LingoNumber(1)                                while tmp_d < LingoNumber(10):                                     d = tmp_d                                    tmp_e = LingoNumber(1)                                    while tmp_e < LingoNumber(10):                                         e = tmp_e                                        ps = LingoGlobal.point(LingoGlobal.op_add(spnt.loch,LingoGlobal.op_mul(d,LingoNumber(2))),LingoGlobal.op_add(spnt.locv,LingoGlobal.op_mul(e,LingoNumber(2))))                                        self._global.member("blackOutImg1").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(6)),self._global.random(self._global.random(LingoNumber(11)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(6)),self._global.random(self._global.random(LingoNumber(11)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(6)),self._global.random(self._global.random(LingoNumber(11)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(6)),self._global.random(self._global.random(LingoNumber(11))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))
                                        self._global.member("blackOutImg2").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(14)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(14)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(14)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(14))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))
                                        tmp_e = e                                        tmp_e += LingoNumber(1)                                                                            tmp_d = d                                    tmp_d += LingoNumber(1)                                                                                                elif ((self._movieScript.gLEProps.matrix[tile.loch][tile.locv][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(5)) > LingoNumber(0) or self._movieScript.gLEProps.matrix[tile.loch][tile.locv][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(4)) > LingoNumber(0)) and LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[tile.loch][tile.locv][LingoNumber(2)][LingoNumber(1)], LingoNumber(1))):                                 ps = self._movieScript.givemiddleoftile(LingoGlobal.point(q2,c2))                                self._global.member("blackOutImg1").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))
                                self._global.member("blackOutImg2").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))
                                self._global.member("blackOutImg1").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(4)),self._global.random(self._global.random(LingoNumber(9))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))
                                self._global.member("blackOutImg2").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(9))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))                                                    tmp_c2 = c2                        tmp_c2 += LingoNumber(1)                                            tmp_q2 = q2                    tmp_q2 += LingoNumber(1)                                                case "fungi flowers":                l = LingoList(LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5))                l2 = LingoList()                tmp_a = LingoNumber(1)                while tmp_a < LingoNumber(4):                     a = tmp_a                    val = l[self._global.random(l.count)]                    l2.add(val)
                    l.deleteone(val)
                    tmp_a = a                    tmp_a += LingoNumber(1)                                    self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            case "colored fungi flowers":                l = LingoList(LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5))                l2 = LingoList()                tmp_a = LingoNumber(1)                while tmp_a < LingoNumber(4):                     a = tmp_a                    val = l[self._global.random(l.count)]                    l2.add(val)
                    l.deleteone(val)
                    tmp_a = a                    tmp_a += LingoNumber(1)                                    self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            case "lighthouse flowers":                l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6),LingoNumber(7),LingoNumber(8))                l2 = LingoList()                tmp_a = LingoNumber(1)                while tmp_a < LingoNumber(8):                     a = tmp_a                    val = l[self._global.random(l.count)]                    l2.add(val)
                    l.deleteone(val)
                    tmp_a = a                    tmp_a += LingoNumber(1)                                    self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            case "colored lighthouse flowers":                l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6),LingoNumber(7),LingoNumber(8))                l2 = LingoList()                tmp_a = LingoNumber(1)                while tmp_a < LingoNumber(8):                     a = tmp_a                    val = l[self._global.random(l.count)]                    l2.add(val)
                    l.deleteone(val)
                    tmp_a = a                    tmp_a += LingoNumber(1)                                    self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            case "foliage":                l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6),LingoNumber(7),LingoNumber(8),LingoNumber(9),LingoNumber(10),LingoNumber(11),LingoNumber(12),LingoNumber(13),LingoNumber(14),LingoNumber(15),LingoNumber(16),LingoNumber(17),LingoNumber(18),LingoNumber(19),LingoNumber(20),LingoNumber(21),LingoNumber(22),LingoNumber(23),LingoNumber(24),LingoNumber(25),LingoNumber(26),LingoNumber(27),LingoNumber(28))                l2 = LingoList()                tmp_a = LingoNumber(1)                while tmp_a < LingoNumber(28):                     a = tmp_a                    val = l[self._global.random(l.count)]                    l2.add(val)
                    l.deleteone(val)
                    tmp_a = a                    tmp_a += LingoNumber(1)                                    self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            case "assorted trash":                l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6),LingoNumber(7),LingoNumber(8),LingoNumber(9),LingoNumber(10),LingoNumber(11),LingoNumber(12),LingoNumber(13),LingoNumber(14),LingoNumber(15),LingoNumber(16),LingoNumber(17),LingoNumber(18),LingoNumber(19),LingoNumber(20),LingoNumber(21),LingoNumber(22),LingoNumber(23),LingoNumber(24),LingoNumber(25),LingoNumber(26),LingoNumber(27),LingoNumber(28),LingoNumber(29),LingoNumber(30),LingoNumber(31),LingoNumber(32),LingoNumber(33),LingoNumber(34),LingoNumber(35),LingoNumber(36),LingoNumber(37),LingoNumber(38),LingoNumber(39),LingoNumber(40),LingoNumber(41),LingoNumber(42),LingoNumber(43),LingoNumber(44),LingoNumber(45),LingoNumber(46),LingoNumber(47),LingoNumber(48))                l2 = LingoList()                tmp_a = LingoNumber(1)                while tmp_a < LingoNumber(48):                     a = tmp_a                    val = l[self._global.random(l.count)]                    l2.add(val)
                    l.deleteone(val)
                    tmp_a = a                    tmp_a += LingoNumber(1)                                    self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            case "high grass":                l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4))                l2 = LingoList()                tmp_a = LingoNumber(1)                while tmp_a < LingoNumber(4):                     a = tmp_a                    val = l[self._global.random(l.count)]                    l2.add(val)
                    l.deleteone(val)
                    tmp_a = a                    tmp_a += LingoNumber(1)                                    self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            case "small springs":                l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6),LingoNumber(7))                l2 = LingoList()                tmp_a = LingoNumber(1)                while tmp_a < LingoNumber(7):                     a = tmp_a                    val = l[self._global.random(l.count)]                    l2.add(val)
                    l.deleteone(val)
                    tmp_a = a                    tmp_a += LingoNumber(1)                                    self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            case "high fern":                l = LingoList(LingoNumber(1),LingoNumber(2))                l2 = LingoList()                tmp_a = LingoNumber(1)                while tmp_a < LingoNumber(2):                     a = tmp_a                    val = l[self._global.random(l.count)]                    l2.add(val)
                    l.deleteone(val)
                    tmp_a = a                    tmp_a += LingoNumber(1)                                    self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            case "mistletoe":                l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6))                l2 = LingoList()                tmp_a = LingoNumber(1)                while tmp_a < LingoNumber(6):                     a = tmp_a                    val = l[self._global.random(l.count)]                    l2.add(val)
                    l.deleteone(val)
                    tmp_a = a                    tmp_a += LingoNumber(1)                                    self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            case "fern" | "giant mushroom" | "springs":                l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6),LingoNumber(7))                l2 = LingoList()                tmp_a = LingoNumber(1)                while tmp_a < LingoNumber(7):                     a = tmp_a                    val = l[self._global.random(l.count)]                    l2.add(val)
                    l.deleteone(val)
                    tmp_a = a                    tmp_a += LingoNumber(1)                                    self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            case "daddycorruption":                self._movieScript.daddyCorruptionHoles = LingoList()                                    txt = ""        txt += str("<APPLYING EFFECTS>                                                Press TAB (VANILLA) / TAB + Z + R (DROUGHT) / TAB + X + C (DRY) to abort")        txt += str(LingoGlobal.RETURN)        tmp_ef = LingoNumber(1)        while tmp_ef < self._movieScript.gEEprops.effects.count:             ef = tmp_ef            if LingoGlobal.op_eq_b(ef, self._movieScript.r):                 txt += str(LingoGlobal.concat(self._global.str(ef),". ->",self._movieScript.gEEprops.effects[ef].nm))                            else:                txt += str(LingoGlobal.concat(self._global.str(ef),". ",self._movieScript.gEEprops.effects[ef].nm))                            txt += str(LingoGlobal.RETURN)            tmp_ef = ef            tmp_ef += LingoNumber(1)                    self._global.member("effectsL").text = txt                return None            def exiteffect(self):         match self._movieScript.gEEprops.effects[self._movieScript.r].nm.lower():             case "blackgoo":                self._global.member("layer0").image.copypixels(self._global.member("blackOutImg1").image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(LingoNumber(100),LingoNumber(20)),LingoGlobal.op_mul(LingoNumber(60),LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(LingoNumber(100),LingoNumber(20)),LingoGlobal.op_mul(LingoNumber(60),LingoNumber(20))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))))
                self._global.member("layer0").image.copypixels(self._global.member("blackOutImg2").image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(LingoNumber(100),LingoNumber(20)),LingoGlobal.op_mul(LingoNumber(60),LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(LingoNumber(100),LingoNumber(20)),LingoGlobal.op_mul(LingoNumber(60),LingoNumber(20))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))))
                self._global.member("blackOutImg1").image = self._global.image(LingoNumber(1),LingoNumber(1),LingoNumber(1))                self._global.sprite(LingoNumber(58)).visibility = LingoNumber(0)                self._global.sprite(LingoNumber(57)).visibility = LingoNumber(0)                            case "super blackgoo":                self._global.member("layer0").image.copypixels(self._global.member("blackOutImg1").image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(LingoNumber(100),LingoNumber(20)),LingoGlobal.op_mul(LingoNumber(60),LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(LingoNumber(100),LingoNumber(20)),LingoGlobal.op_mul(LingoNumber(60),LingoNumber(20))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))))
                self._global.member("layer0").image.copypixels(self._global.member("blackOutImg2").image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(LingoNumber(100),LingoNumber(20)),LingoGlobal.op_mul(LingoNumber(60),LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(LingoNumber(100),LingoNumber(20)),LingoGlobal.op_mul(LingoNumber(60),LingoNumber(20))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))))
                self._global.member("blackOutImg1").image = self._global.image(LingoNumber(1),LingoNumber(1),LingoNumber(1))                self._global.sprite(LingoNumber(58)).visibility = LingoNumber(0)                self._global.sprite(LingoNumber(57)).visibility = LingoNumber(0)                            case "daddycorruption":                tmp_i = LingoNumber(1)                while tmp_i < self._movieScript.daddyCorruptionHoles.count:                     i = tmp_i                    qd = self._movieScript.rotatetoquad(LingoGlobal.op_add(LingoGlobal.rect(self._movieScript.daddyCorruptionHoles[i][LingoNumber(1)],self._movieScript.daddyCorruptionHoles[i][LingoNumber(1)]),LingoGlobal.rect(-self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],-self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)])),self._movieScript.daddyCorruptionHoles[i][LingoNumber(3)])                    tmp_d = LingoNumber(0)                    while tmp_d < LingoNumber(1):                         d = tmp_d                        self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(self._movieScript.daddyCorruptionHoles[i][LingoNumber(4)],d)))).image.copypixels(self._global.member("DaddyBulb").image,qd,LingoGlobal.rect(LingoNumber(60),LingoNumber(1),LingoNumber(134),LingoNumber(74)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),LingoSymbol("ink"), LingoNumber(36)))
                        tmp_d = d                        tmp_d += LingoNumber(1)                                            if (LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)) and self._global.random(LingoNumber(100)) > self._movieScript.daddyCorruptionHoles[i][LingoNumber(5)]):                         self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(self._movieScript.daddyCorruptionHoles[i][LingoNumber(4)],LingoNumber(2))))).image.copypixels(self._global.member("DaddyBulb").image,qd,LingoGlobal.rect(LingoNumber(60),LingoNumber(1),LingoNumber(134),LingoNumber(74)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),LingoSymbol("ink"), LingoNumber(36)))                    else:                        match self._movieScript.gdLayer.lower():                             case "a":                                self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(self._movieScript.daddyCorruptionHoles[i][LingoNumber(4)],LingoNumber(2))))).image.copypixels(self._global.member("DaddyBulb").image,qd,LingoGlobal.rect(LingoNumber(60),LingoNumber(1),LingoNumber(134),LingoNumber(74)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(255)),LingoSymbol("ink"), LingoNumber(36)))
                                self._movieScript.copypixelstoeffectcolor("A",LingoGlobal.op_add(self._movieScript.daddyCorruptionHoles[i][LingoNumber(4)],LingoNumber(2)),LingoGlobal.op_add(LingoGlobal.rect(self._movieScript.daddyCorruptionHoles[i][LingoNumber(1)],self._movieScript.daddyCorruptionHoles[i][LingoNumber(1)]),LingoGlobal.rect(LingoGlobal.op_mul(-self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],LingoNumber(1.5000)),LingoGlobal.op_mul(-self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],LingoNumber(1.5000)),LingoGlobal.op_mul(self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],LingoNumber(1.5000)),LingoGlobal.op_mul(self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],LingoNumber(1.5000)))),"softBrush1",self._global.member("softBrush1").rect,LingoNumber(0.5000),self._movieScript.lerp(LingoGlobal.op_mul(self._global.random(LingoNumber(50)),LingoNumber(0.0100)),LingoNumber(1.0000),LingoGlobal.op_mul(self._global.random(self._movieScript.daddyCorruptionHoles[i][LingoNumber(5)]),LingoNumber(0.0100))))                            case "b":                                self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(self._movieScript.daddyCorruptionHoles[i][LingoNumber(4)],LingoNumber(2))))).image.copypixels(self._global.member("DaddyBulb").image,qd,LingoGlobal.rect(LingoNumber(60),LingoNumber(1),LingoNumber(134),LingoNumber(74)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(255)),LingoSymbol("ink"), LingoNumber(36)))
                                self._movieScript.copypixelstoeffectcolor("B",LingoGlobal.op_add(self._movieScript.daddyCorruptionHoles[i][LingoNumber(4)],LingoNumber(2)),LingoGlobal.op_add(LingoGlobal.rect(self._movieScript.daddyCorruptionHoles[i][LingoNumber(1)],self._movieScript.daddyCorruptionHoles[i][LingoNumber(1)]),LingoGlobal.rect(LingoGlobal.op_mul(-self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],LingoNumber(1.5000)),LingoGlobal.op_mul(-self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],LingoNumber(1.5000)),LingoGlobal.op_mul(self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],LingoNumber(1.5000)),LingoGlobal.op_mul(self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],LingoNumber(1.5000)))),"softBrush1",self._global.member("softBrush1").rect,LingoNumber(0.5000),self._movieScript.lerp(LingoGlobal.op_mul(self._global.random(LingoNumber(50)),LingoNumber(0.0100)),LingoNumber(1.0000),LingoGlobal.op_mul(self._global.random(self._movieScript.daddyCorruptionHoles[i][LingoNumber(5)]),LingoNumber(0.0100))))                            case _:                                 self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(self._movieScript.daddyCorruptionHoles[i][LingoNumber(4)],LingoNumber(2))))).image.copypixels(self._global.member("DaddyBulb").image,qd,LingoGlobal.rect(LingoNumber(60),LingoNumber(1),LingoNumber(134),LingoNumber(74)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(255)),LingoSymbol("ink"), LingoNumber(36)))
                                self._movieScript.copypixelstoeffectcolor("B",LingoGlobal.op_add(self._movieScript.daddyCorruptionHoles[i][LingoNumber(4)],LingoNumber(2)),LingoGlobal.op_add(LingoGlobal.rect(self._movieScript.daddyCorruptionHoles[i][LingoNumber(1)],self._movieScript.daddyCorruptionHoles[i][LingoNumber(1)]),LingoGlobal.rect(LingoGlobal.op_mul(-self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],LingoNumber(1.5000)),LingoGlobal.op_mul(-self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],LingoNumber(1.5000)),LingoGlobal.op_mul(self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],LingoNumber(1.5000)),LingoGlobal.op_mul(self._movieScript.daddyCorruptionHoles[i][LingoNumber(2)],LingoNumber(1.5000)))),"softBrush1",self._global.member("softBrush1").rect,LingoNumber(0.5000),self._movieScript.lerp(LingoGlobal.op_mul(self._global.random(LingoNumber(50)),LingoNumber(0.0100)),LingoNumber(1.0000),LingoGlobal.op_mul(self._global.random(self._movieScript.daddyCorruptionHoles[i][LingoNumber(5)]),LingoNumber(0.0100))))                                                                        tmp_i = i                    tmp_i += LingoNumber(1)                                    self._movieScript.daddyCorruptionHoles = LingoList()                                            return None            def applystandarderosion(self, q, c, eftc, tp):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        fc = LingoGlobal.op_add(self._movieScript.gEEprops.effects[self._movieScript.r].affectopenareas,LingoGlobal.op_mul(LingoGlobal.op_sub(LingoNumber(1.0000),self._movieScript.gEEprops.effects[self._movieScript.r].affectopenareas),self._movieScript.solidafamv(LingoGlobal.point(q2,c2),LingoNumber(3))))        tmp_d = LingoNumber(1)        while tmp_d < LingoNumber(30):             d = tmp_d            lr = LingoGlobal.op_sub(LingoNumber(30),d)            match self._movieScript.lrSup.lower():                 case "all":                    dmin = LingoNumber(0)                    dmax = LingoNumber(29)                                    case "1":                    dmin = LingoNumber(0)                    dmax = LingoNumber(9)                                    case "2":                    dmin = LingoNumber(10)                    dmax = LingoNumber(19)                                    case "3":                    dmin = LingoNumber(20)                    dmax = LingoNumber(29)                                    case "1:st and 2:nd":                    dmin = LingoNumber(0)                    dmax = LingoNumber(19)                                    case "2:nd and 3:rd":                    dmin = LingoNumber(10)                    dmax = LingoNumber(29)                                    case _:                     dmin = LingoNumber(0)                    dmax = LingoNumber(29)                                                if (LingoGlobal.op_eq_b(lr, LingoNumber(9)) or LingoGlobal.op_eq_b(lr, LingoNumber(19))):                 sld = self._movieScript.solidMtrx[q2][c2][LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))]                fc = LingoGlobal.op_add(self._movieScript.gEEprops.effects[self._movieScript.r].affectopenareas,LingoGlobal.op_mul(LingoGlobal.op_sub(LingoNumber(1.0000),self._movieScript.gEEprops.effects[self._movieScript.r].affectopenareas),self._movieScript.solidafamv(LingoGlobal.point(q2,c2),LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19))))))                            deepeffect = LingoNumber(0)            if (((LingoGlobal.op_eq_b(lr, LingoNumber(0)) or LingoGlobal.op_eq_b(lr, LingoNumber(10))) or LingoGlobal.op_eq_b(lr, LingoNumber(20))) or LingoGlobal.op_eq_b(sld, LingoNumber(0))):                 deepeffect = LingoNumber(1)                            tmp_cntr = LingoNumber(1)            while tmp_cntr < LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoGlobal.op_add(LingoNumber(0.2000),LingoGlobal.op_mul(LingoNumber(0.8000),deepeffect))),LingoNumber(0.0100)),self._movieScript.gEEprops.effects[self._movieScript.r].repeats),fc):                 cntr = tmp_cntr                if LingoGlobal.ToBool(deepeffect):                     pnt = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.point(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(c,LingoNumber(1))),LingoNumber(20)),LingoGlobal.point(self._global.random(LingoNumber(20)),self._global.random(LingoNumber(20))))                                    elif LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                     pnt = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.point(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(c,LingoNumber(1))),LingoNumber(20)),LingoGlobal.point(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoNumber(19),LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1)))),self._global.random(LingoNumber(20))))                                    else:                    pnt = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.point(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(c,LingoNumber(1))),LingoNumber(20)),LingoGlobal.point(self._global.random(LingoNumber(20)),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoNumber(19),LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))))))                                    match tp.lower():                     case "rust" | "barnacles" | "colored barnacles" | "clovers":                        pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(self._global.random(LingoNumber(360))),LingoNumber(4)))                        if (lr > dmax or lr < dmin):                             cl = self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                            cla = self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                            clb = self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                            cldc = self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                                                    else:                            cl = self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.getpixel(pnt)                            cla = self._global.member(LingoGlobal.concat("gradientA",self._global.str(lr))).image.getpixel(pnt)                            clb = self._global.member(LingoGlobal.concat("gradientB",self._global.str(lr))).image.getpixel(pnt)                            cldc = self._global.member(LingoGlobal.concat("layer",self._global.str(lr),"dc")).image.getpixel(pnt)                                                                        case "erode" | "super erode" | "ultra super erode":                        pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(self._global.random(LingoNumber(360))),LingoNumber(2)))                        if (LingoGlobal.op_eq_b(self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.getpixel(pnt), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))) or (LingoGlobal.op_eq_b(self._global.random(LingoNumber(108)), LingoNumber(1)) and LingoGlobal.op_ne_b(tp, "Super Erode"))):                             cl = "GOTHROUGH"                                                    else:                            cl = self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                                                    if LingoGlobal.op_eq_b(self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.getpixel(pnt), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             cl = "NOAPPLY"                                                                        case "destructive melt" | "impacts":                        if (lr > dmax or lr < dmin):                             cl = self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                            cla = self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                            clb = self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                            cldc = self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                                                    else:                            cl = self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.getpixel(pnt)                            cla = self._global.member(LingoGlobal.concat("gradientA",self._global.str(lr))).image.getpixel(pnt)                            clb = self._global.member(LingoGlobal.concat("gradientB",self._global.str(lr))).image.getpixel(pnt)                            cldc = self._global.member(LingoGlobal.concat("layer",self._global.str(lr),"dc")).image.getpixel(pnt)                                                    if LingoGlobal.op_eq_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             cl = "WHITE"                                                    if LingoGlobal.op_eq_b(cla, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             cla = "WHITE"                                                    if LingoGlobal.op_eq_b(clb, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             clb = "WHITE"                                                    if LingoGlobal.op_eq_b(cldc, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             cldc = "WHITE"                                                                        case _:                         if (lr > dmax or lr < dmin):                             cl = self._movieScript.DRWhite                            cla = self._movieScript.DRWhite                            clb = self._movieScript.DRWhite                            cldc = self._movieScript.DRWhite                                                    else:                            cl = self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.getpixel(pnt)                            cla = self._global.member(LingoGlobal.concat("gradientA",self._global.str(lr))).image.getpixel(pnt)                            clb = self._global.member(LingoGlobal.concat("gradientB",self._global.str(lr))).image.getpixel(pnt)                            cldc = self._global.member(LingoGlobal.concat("layer",self._global.str(lr),"dc")).image.getpixel(pnt)                                                                                        match tp.lower():                     case "slime" | "slimex3":                        if LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             ofst = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                            lgt = LingoGlobal.op_add(LingoNumber(3),self._global.random(self._global.random(self._global.random(LingoNumber(6)))))                            if LingoGlobal.ToBool(self._movieScript.effectIn3D):                                 nwlr = self.get3dlr(lr)                                                            else:                                match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                            case "1":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                                                                                        if nwlr > LingoNumber(29):                                 nwlr = LingoNumber(29)                                                            elif nwlr < LingoNumber(0):                                 nwlr = LingoNumber(0)                                                            if LingoGlobal.ToBool(self._movieScript.gradAf):                                 slmrect = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),ofst),lgt))                                self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cl))
                                if LingoGlobal.op_ne_b(cldc, self._movieScript.DRWhite):                                     self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cldc))                                if LingoGlobal.op_ne_b(cla, self._movieScript.DRWhite):                                     self._global.member(LingoGlobal.concat("gradientA",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cla))                                if LingoGlobal.op_ne_b(clb, self._movieScript.DRWhite):                                     self._global.member(LingoGlobal.concat("gradientB",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), clb))                                if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                                     slmrect = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),ofst),LingoNumber(1)),LingoGlobal.op_sub(lgt,LingoNumber(1))))                                    self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cl))
                                    if LingoGlobal.op_ne_b(cldc, self._movieScript.DRWhite):                                         self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cldc))                                    if LingoGlobal.op_ne_b(cla, self._movieScript.DRWhite):                                         self._global.member(LingoGlobal.concat("gradientA",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cla))                                    if LingoGlobal.op_ne_b(clb, self._movieScript.DRWhite):                                         self._global.member(LingoGlobal.concat("gradientB",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), clb))                                                                    else:                                    slmrect = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(1),ofst),LingoNumber(1)),LingoGlobal.op_sub(lgt,LingoNumber(1))))                                    self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cl))
                                    if LingoGlobal.op_ne_b(cldc, self._movieScript.DRWhite):                                         self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cldc))                                    if LingoGlobal.op_ne_b(cla, self._movieScript.DRWhite):                                         self._global.member(LingoGlobal.concat("gradientA",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cla))                                    if LingoGlobal.op_ne_b(clb, self._movieScript.DRWhite):                                         self._global.member(LingoGlobal.concat("gradientB",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), clb))                                                                                                elif LingoGlobal.ToBool(self._movieScript.slimeFxt):                                 slmrect = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),ofst),lgt))                                self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cl))
                                if LingoGlobal.op_ne_b(cldc, self._movieScript.DRWhite):                                     self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cldc))                                if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                                     slmrect = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),ofst),LingoNumber(1)),LingoGlobal.op_sub(lgt,LingoNumber(1))))                                    self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cl))
                                    if LingoGlobal.op_ne_b(cldc, self._movieScript.DRWhite):                                         self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cldc))                                                                    else:                                    slmrect = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(1),ofst),LingoNumber(1)),LingoGlobal.op_sub(lgt,LingoNumber(1))))                                    self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cl))
                                    if LingoGlobal.op_ne_b(cldc, self._movieScript.DRWhite):                                         self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cldc))                                                                                                else:                                slmrect = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),ofst),lgt))                                self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cl))
                                if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                                     slmrect = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),ofst),LingoNumber(1)),LingoGlobal.op_sub(lgt,LingoNumber(1))))                                    self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cl))                                else:                                    slmrect = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(1),ofst),LingoNumber(1)),LingoGlobal.op_sub(lgt,LingoNumber(1))))                                    self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._movieScript.DRPxl,slmrect,self._movieScript.DRPxlRect,LingoPropertyList(LingoSymbol("color"), cl))                                                                                                        case "decalsonlyslime":                        if ((LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))) and lr >= dmin) and lr <= dmax):                             ofst = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                            lgt = LingoGlobal.op_add(LingoNumber(3),self._global.random(self._global.random(self._global.random(LingoNumber(6)))))                            if LingoGlobal.op_ne_b(cldc, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                 self._global.member(LingoGlobal.concat("layer",self._global.str(lr),"dc")).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),ofst),lgt)),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), cldc))                            if LingoGlobal.op_ne_b(cla, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                 self._global.member(LingoGlobal.concat("gradientA",self._global.str(lr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),ofst),lgt)),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), cla))                            if LingoGlobal.op_ne_b(clb, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                 self._global.member(LingoGlobal.concat("gradientB",self._global.str(lr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),ofst),lgt)),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), clb))                            if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                                 if LingoGlobal.op_ne_b(cldc, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     self._global.member(LingoGlobal.concat("layer",self._global.str(lr),"dc")).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),ofst),LingoNumber(1)),LingoGlobal.op_sub(lgt,LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), cldc))                                if LingoGlobal.op_ne_b(cla, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     self._global.member(LingoGlobal.concat("gradientA",self._global.str(lr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),ofst),LingoNumber(1)),LingoGlobal.op_sub(lgt,LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), cla))                                if LingoGlobal.op_ne_b(clb, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     self._global.member(LingoGlobal.concat("gradientB",self._global.str(lr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),ofst),LingoNumber(1)),LingoGlobal.op_sub(lgt,LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), clb))                                                            else:                                if LingoGlobal.op_ne_b(cldc, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     self._global.member(LingoGlobal.concat("layer",self._global.str(lr),"dc")).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(1),ofst),LingoNumber(1)),LingoGlobal.op_sub(lgt,LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), cldc))                                if LingoGlobal.op_ne_b(cla, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     self._global.member(LingoGlobal.concat("gradientA",self._global.str(lr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(1),ofst),LingoNumber(1)),LingoGlobal.op_sub(lgt,LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), cla))                                if LingoGlobal.op_ne_b(clb, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     self._global.member(LingoGlobal.concat("gradientB",self._global.str(lr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(1),ofst),LingoNumber(1)),LingoGlobal.op_sub(lgt,LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), clb))                                                                                                        case "rust":                        if LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             ofst = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                            if LingoGlobal.ToBool(self._movieScript.effectIn3D):                                 nwlr = self.get3dlr(lr)                                                            else:                                match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = lr                                                                            case "1":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = lr                                                                                                                                        if nwlr > LingoNumber(29):                                 nwlr = LingoNumber(29)                                                            elif nwlr < LingoNumber(0):                                 nwlr = LingoNumber(0)                                                            self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("rustDot").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(2),ofst),-LingoNumber(2),LingoGlobal.op_add(LingoNumber(2),ofst),LingoNumber(2))),self._global.member("rustDot").image.rect,LingoPropertyList(LingoSymbol("color"), cl,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.ToBool(self._movieScript.gradAf):                                 if LingoGlobal.op_ne_b(cldc, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(self._global.member("rustDot").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(2),ofst),-LingoNumber(2),LingoGlobal.op_add(LingoNumber(2),ofst),LingoNumber(2))),self._global.member("rustDot").image.rect,LingoPropertyList(LingoSymbol("color"), cldc,LingoSymbol("ink"), LingoNumber(36)))                                if LingoGlobal.op_ne_b(cla, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     self._global.member(LingoGlobal.concat("gradientA",self._global.str(nwlr))).image.copypixels(self._global.member("rustDot").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(2),ofst),-LingoNumber(2),LingoGlobal.op_add(LingoNumber(2),ofst),LingoNumber(2))),self._global.member("rustDot").image.rect,LingoPropertyList(LingoSymbol("color"), cla,LingoSymbol("ink"), LingoNumber(36)))                                if LingoGlobal.op_ne_b(clb, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     self._global.member(LingoGlobal.concat("gradientB",self._global.str(nwlr))).image.copypixels(self._global.member("rustDot").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(2),ofst),-LingoNumber(2),LingoGlobal.op_add(LingoNumber(2),ofst),LingoNumber(2))),self._global.member("rustDot").image.rect,LingoPropertyList(LingoSymbol("color"), clb,LingoSymbol("ink"), LingoNumber(36)))                                                                                                        case "barnacles":                        if LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             if LingoGlobal.ToBool(self._movieScript.effectIn3D):                                 nwlr = self.get3dlr(lr)                                                            else:                                match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                            case "1":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                                                                                        if nwlr > LingoNumber(29):                                 nwlr = LingoNumber(29)                                                            elif nwlr < LingoNumber(0):                                 nwlr = LingoNumber(0)                                                            if LingoGlobal.ToBool(LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))):                                 self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("barnacle1").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(3),-LingoNumber(3),LingoNumber(4),LingoNumber(4))),self._global.member("barnacle1").image.rect,LingoPropertyList(LingoSymbol("color"), cl,LingoSymbol("ink"), LingoNumber(36)))
                                if LingoGlobal.ToBool(self._movieScript.gradAf):                                     if LingoGlobal.op_ne_b(cldc, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                         self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(self._global.member("barnacle1").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(3),-LingoNumber(3),LingoNumber(4),LingoNumber(4))),self._global.member("barnacle1").image.rect,LingoPropertyList(LingoSymbol("color"), cldc,LingoSymbol("ink"), LingoNumber(36)))                                    if LingoGlobal.op_ne_b(cla, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                         self._global.member(LingoGlobal.concat("gradientA",self._global.str(nwlr))).image.copypixels(self._global.member("barnacle1").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(3),-LingoNumber(3),LingoNumber(4),LingoNumber(4))),self._global.member("barnacle1").image.rect,LingoPropertyList(LingoSymbol("color"), cla,LingoSymbol("ink"), LingoNumber(36)))                                    if LingoGlobal.op_ne_b(clb, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                         self._global.member(LingoGlobal.concat("gradientB",self._global.str(nwlr))).image.copypixels(self._global.member("barnacle1").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(3),-LingoNumber(3),LingoNumber(4),LingoNumber(4))),self._global.member("barnacle1").image.rect,LingoPropertyList(LingoSymbol("color"), clb,LingoSymbol("ink"), LingoNumber(36)))                                                                    self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("barnacle2").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(2),-LingoNumber(2),LingoNumber(3),LingoNumber(3))),self._global.member("barnacle2").image.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),LingoSymbol("ink"), LingoNumber(36)))                            else:                                ofst = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                                self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("rustDot").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(2),ofst),-LingoNumber(2),LingoGlobal.op_add(LingoNumber(2),ofst),LingoNumber(2))),self._global.member("rustDot").image.rect,LingoPropertyList(LingoSymbol("color"), LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),cl)[self._global.random(LingoNumber(2))],LingoSymbol("ink"), LingoNumber(36)))
                                if LingoGlobal.ToBool(self._movieScript.gradAf):                                     if LingoGlobal.op_ne_b(cldc, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                         self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(self._global.member("rustDot").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(2),ofst),-LingoNumber(2),LingoGlobal.op_add(LingoNumber(2),ofst),LingoNumber(2))),self._global.member("rustDot").image.rect,LingoPropertyList(LingoSymbol("color"), cldc,LingoSymbol("ink"), LingoNumber(36)))                                    if LingoGlobal.op_ne_b(cla, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                         self._global.member(LingoGlobal.concat("gradientA",self._global.str(nwlr))).image.copypixels(self._global.member("rustDot").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(2),ofst),-LingoNumber(2),LingoGlobal.op_add(LingoNumber(2),ofst),LingoNumber(2))),self._global.member("rustDot").image.rect,LingoPropertyList(LingoSymbol("color"), cla,LingoSymbol("ink"), LingoNumber(36)))                                    if LingoGlobal.op_ne_b(clb, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                         self._global.member(LingoGlobal.concat("gradientB",self._global.str(nwlr))).image.copypixels(self._global.member("rustDot").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(2),ofst),-LingoNumber(2),LingoGlobal.op_add(LingoNumber(2),ofst),LingoNumber(2))),self._global.member("rustDot").image.rect,LingoPropertyList(LingoSymbol("color"), clb,LingoSymbol("ink"), LingoNumber(36)))                                                                                                                                            case "colored barnacles":                        if LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             if LingoGlobal.ToBool(self._movieScript.effectIn3D):                                 nwlr = self.get3dlr(lr)                                                            else:                                match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                            case "1":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                                                                                        if nwlr > LingoNumber(29):                                 nwlr = LingoNumber(29)                                                            elif nwlr < LingoNumber(0):                                 nwlr = LingoNumber(0)                                                            if LingoGlobal.op_eq_b(self._movieScript.gdIndLayer, "C"):                                 if LingoGlobal.ToBool(LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))):                                     self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("barnacle1").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(3),-LingoNumber(3),LingoNumber(4),LingoNumber(4))),self._global.member("barnacle1").image.rect,LingoPropertyList(LingoSymbol("color"), cl,LingoSymbol("ink"), LingoNumber(36)))
                                    self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("barnacle2").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(2),-LingoNumber(2),LingoNumber(3),LingoNumber(3))),self._global.member("barnacle2").image.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),LingoSymbol("ink"), LingoNumber(36)))                                else:                                    ofst = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                                    self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("rustDot").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(2),ofst),-LingoNumber(2),LingoGlobal.op_add(LingoNumber(2),ofst),LingoNumber(2))),self._global.member("rustDot").image.rect,LingoPropertyList(LingoSymbol("color"), LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),cl)[self._global.random(LingoNumber(2))],LingoSymbol("ink"), LingoNumber(36)))                                                            elif LingoGlobal.ToBool(LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))):                                 self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("barnacle1").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(3),-LingoNumber(3),LingoNumber(4),LingoNumber(4))),self._global.member("barnacle1").image.rect,LingoPropertyList(LingoSymbol("color"), cl,LingoSymbol("ink"), LingoNumber(36)))
                                self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("barnacle2").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(2),-LingoNumber(2),LingoNumber(3),LingoNumber(3))),self._global.member("barnacle2").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colrInd,LingoSymbol("ink"), LingoNumber(36)))
                                self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdIndLayer,self._global.str(nwlr))).image.copypixels(self._global.member("barnacle2").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(2),-LingoNumber(2),LingoNumber(3),LingoNumber(3))),self._global.member("barnacle2").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                            else:                                ofst = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                                self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("rustDot").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(2),ofst),-LingoNumber(2),LingoGlobal.op_add(LingoNumber(2),ofst),LingoNumber(2))),self._global.member("rustDot").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colrInd,LingoSymbol("ink"), LingoNumber(36)))
                                self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdIndLayer,self._global.str(nwlr))).image.copypixels(self._global.member("rustDot").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(2),ofst),-LingoNumber(2),LingoGlobal.op_add(LingoNumber(2),ofst),LingoNumber(2))),self._global.member("rustDot").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                                                        case "clovers":                        if LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             if LingoGlobal.ToBool(self._movieScript.effectIn3D):                                 nwlr = self.get3dlr(lr)                                                            else:                                match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                            case "1":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                                                                                        if nwlr > LingoNumber(29):                                 nwlr = LingoNumber(29)                                                            elif nwlr < LingoNumber(0):                                 nwlr = LingoNumber(0)                                                            if nwlr <= LingoNumber(9):                                 str = LingoNumber(1)                                                            else:                                str = self._global.random(LingoNumber(2))                                                            if LingoGlobal.op_eq_b(str, LingoNumber(1)):                                 if LingoGlobal.op_eq_b(self._movieScript.gdLayer, "C"):                                     n = LingoList(LingoNumber(1),LingoNumber(1),LingoNumber(1),LingoNumber(1),LingoNumber(1),LingoNumber(1),LingoNumber(2),LingoNumber(1.5000))[self._global.random(LingoNumber(8))]                                    h1 = LingoGlobal.op_mul(-LingoNumber(5),n)                                    h2 = LingoGlobal.op_mul(LingoNumber(6),n)                                    nrect = self._movieScript.rotatetoquad(LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(h1,h1,h2,h2)),self._global.random(LingoNumber(360)))                                    if LingoGlobal.op_eq_b(self._global.random(LingoNumber(60)), LingoNumber(1)):                                         self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("4LCloverGraf").image,nrect,self._global.member("4LCloverGraf").image.rect,LingoPropertyList(LingoSymbol("color"), LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)))[self._global.random(LingoNumber(3))],LingoSymbol("ink"), LingoNumber(36)))                                    else:                                        self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("3LCloverGraf").image,nrect,self._global.member("3LCloverGraf").image.rect,LingoPropertyList(LingoSymbol("color"), LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)))[self._global.random(LingoNumber(3))],LingoSymbol("ink"), LingoNumber(36)))                                                                    else:                                    n = LingoList(LingoNumber(1),LingoNumber(1),LingoNumber(1),LingoNumber(1),LingoNumber(1),LingoNumber(1),LingoNumber(2),LingoNumber(1.5000))[self._global.random(LingoNumber(8))]                                    h1 = LingoGlobal.op_mul(-LingoNumber(5),n)                                    h2 = LingoGlobal.op_mul(LingoNumber(6),n)                                    nrect = self._movieScript.rotatetoquad(LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(h1,h1,h2,h2)),self._global.random(LingoNumber(360)))                                    if LingoGlobal.op_eq_b(self._global.random(LingoNumber(60)), LingoNumber(1)):                                         self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("4LCloverGraf").image,nrect,self._global.member("4LCloverGraf").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                                        self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(nwlr))).image.copypixels(self._global.member("4LCloverGrad").image,nrect,self._global.member("4LCloverGrad").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                    else:                                        self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("3LCloverGraf").image,nrect,self._global.member("3LCloverGraf").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                                        self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(nwlr))).image.copypixels(self._global.member("3LCloverGrad").image,nrect,self._global.member("3LCloverGrad").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                                                                                                                            case "erode":                        if LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             if self._global.random(LingoNumber(6)) > LingoNumber(1):                                 match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = lr                                                                            case "1":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = lr                                                                                                                                        else:                                match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(0),LingoNumber(29))                                                                            case "1":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(0),LingoNumber(29))                                                                                                                                        if nwlr > LingoNumber(29):                                 nwlr = LingoNumber(29)                                                            elif nwlr < LingoNumber(0):                                 nwlr = LingoNumber(0)                                                            tmp_a = LingoNumber(1)                            while tmp_a < LingoNumber(6):                                 a = tmp_a                                pnt = LingoGlobal.op_add(pnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(3),self._global.random(LingoNumber(5))),LingoGlobal.op_add(-LingoNumber(3),self._global.random(LingoNumber(5)))))                                ofst = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                                self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("rustDot").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(2),ofst),-LingoNumber(2),LingoGlobal.op_add(LingoNumber(2),ofst),LingoNumber(2))),self._global.member("rustDot").image.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),LingoSymbol("ink"), LingoNumber(36)))
                                tmp_a = a                                tmp_a += LingoNumber(1)                                                                                                        case "sand":                        if LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             if self._global.random(LingoNumber(6)) > LingoNumber(1):                                 match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = lr                                                                            case "1":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = lr                                                                                                                                        else:                                match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(0),LingoNumber(29))                                                                            case "1":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = self._movieScript.restrict(LingoGlobal.op_add(lr,LingoNumber(1)),LingoNumber(0),LingoNumber(29))                                                                                                                                        if nwlr > LingoNumber(29):                                 nwlr = LingoNumber(29)                                                            elif nwlr < LingoNumber(0):                                 nwlr = LingoNumber(0)                                                            tmp_a = LingoNumber(1)                            while tmp_a < LingoNumber(6):                                 a = tmp_a                                pnt = LingoGlobal.op_add(pnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(3),self._global.random(LingoNumber(5))),LingoGlobal.op_add(-LingoNumber(3),self._global.random(LingoNumber(5)))))                                ofst = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                                if LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     if LingoGlobal.op_eq_b(self._movieScript.gdIndLayer, "C"):                                         if LingoGlobal.op_eq_b(cl, self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))):                                             self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(0.5000),-LingoNumber(0.5000),LingoNumber(0.5000),LingoNumber(0.5000))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), LingoList(self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)),self._global.color(LingoNumber(0),LingoNumber(150),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(150)))[self._global.random(LingoNumber(4))],LingoSymbol("ink"), LingoNumber(36)))                                        elif LingoGlobal.op_eq_b(cl, self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))):                                             self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(0.5000),-LingoNumber(0.5000),LingoNumber(0.5000),LingoNumber(0.5000))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)),self._global.color(LingoNumber(150),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(150)))[self._global.random(LingoNumber(4))],LingoSymbol("ink"), LingoNumber(36)))                                        elif LingoGlobal.op_eq_b(cl, self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))):                                             self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(0.5000),-LingoNumber(0.5000),LingoNumber(0.5000),LingoNumber(0.5000))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),self._global.color(LingoNumber(150),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(150),LingoNumber(0)))[self._global.random(LingoNumber(4))],LingoSymbol("ink"), LingoNumber(36)))                                        else:                                            self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(0.5000),-LingoNumber(0.5000),LingoNumber(0.5000),LingoNumber(0.5000))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)),self._global.color(LingoNumber(150),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(150),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(150)))[self._global.random(LingoNumber(6))],LingoSymbol("ink"), LingoNumber(36)))                                                                            elif LingoGlobal.op_eq_b(self._movieScript.gdIndLayer, "A"):                                         self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(0.5000),-LingoNumber(0.5000),LingoNumber(0.5000),LingoNumber(0.5000))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(255)),self._global.color(LingoNumber(150),LingoNumber(0),LingoNumber(150)))[self._global.random(LingoNumber(2))],LingoSymbol("ink"), LingoNumber(36)))
                                        self._global.member(LingoGlobal.concat("gradientA",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(0.5000),-LingoNumber(0.5000),LingoNumber(0.5000),LingoNumber(0.5000))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                    elif LingoGlobal.op_eq_b(self._movieScript.gdIndLayer, "B"):                                         self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(0.5000),-LingoNumber(0.5000),LingoNumber(0.5000),LingoNumber(0.5000))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), LingoList(self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(255)),self._global.color(LingoNumber(0),LingoNumber(150),LingoNumber(150)))[self._global.random(LingoNumber(2))],LingoSymbol("ink"), LingoNumber(36)))
                                        self._global.member(LingoGlobal.concat("gradientB",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(0.5000),-LingoNumber(0.5000),LingoNumber(0.5000),LingoNumber(0.5000))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                                                    tmp_a = a                                tmp_a += LingoNumber(1)                                                                                                        case "super erode":                        if LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             if self._global.random(LingoGlobal.op_add(LingoNumber(40),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoNumber(4),lr),LingoGlobal.op_gt(lr,LingoNumber(19))))) > LingoNumber(1):                                 match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = lr                                                                            case "1":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = lr                                                                                                                                        else:                                match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(0),LingoNumber(29))                                                                            case "1":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(0),LingoNumber(29))                                                                                                                                        if nwlr > LingoNumber(29):                                 nwlr = LingoNumber(29)                                                            elif nwlr < LingoNumber(0):                                 nwlr = LingoNumber(0)                                                            tmp_a = LingoNumber(1)                            while tmp_a < LingoNumber(6):                                 a = tmp_a                                pnt = LingoGlobal.op_add(pnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(4),self._global.random(LingoNumber(7))),LingoGlobal.op_add(-LingoNumber(4),self._global.random(LingoNumber(7)))))                                self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("SuperErodeMask").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(4),-LingoNumber(4),LingoNumber(4),LingoNumber(4))),self._global.member("SuperErodeMask").image.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),LingoSymbol("ink"), LingoNumber(36)))
                                tmp_a = a                                tmp_a += LingoNumber(1)                                                                                                        case "ultra super erode":                        if self._global.random(LingoGlobal.op_add(LingoNumber(40),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoNumber(4),lr),LingoGlobal.op_gt(lr,LingoNumber(19))))) > LingoNumber(1):                             match self._movieScript.lrSup.lower():                                 case "all":                                    nwlr = lr                                                                    case "1":                                    nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(9))                                                                    case "2":                                    nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(19))                                                                    case "3":                                    nwlr = self._movieScript.restrict(lr,LingoNumber(20),LingoNumber(29))                                                                    case "1:st and 2:nd":                                    nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(19))                                                                    case "2:nd and 3:rd":                                    nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(29))                                                                    case _:                                     nwlr = lr                                                                                                                        else:                            match self._movieScript.lrSup.lower():                                 case "all":                                    nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(0),LingoNumber(29))                                                                    case "1":                                    nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(0),LingoNumber(9))                                                                    case "2":                                    nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(10),LingoNumber(19))                                                                    case "3":                                    nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(20),LingoNumber(29))                                                                    case "1:st and 2:nd":                                    nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(0),LingoNumber(19))                                                                    case "2:nd and 3:rd":                                    nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(10),LingoNumber(29))                                                                    case _:                                     nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(0),LingoNumber(29))                                                                                                                        if nwlr > LingoNumber(29):                             nwlr = LingoNumber(29)                                                    elif nwlr < LingoNumber(0):                             nwlr = LingoNumber(0)                                                    tmp_a = LingoNumber(1)                        while tmp_a < LingoNumber(6):                             a = tmp_a                            pnt = LingoGlobal.op_add(pnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(4),self._global.random(LingoNumber(7))),LingoGlobal.op_add(-LingoNumber(4),self._global.random(LingoNumber(7)))))                            self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("Blob").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(8),-LingoNumber(8),LingoNumber(8),LingoNumber(8))),self._global.member("Blob").image.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),LingoSymbol("ink"), LingoNumber(36)))
                            self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(self._global.member("Blob").image,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(8),-LingoNumber(8),LingoNumber(8),LingoNumber(8))),self._global.member("Blob").image.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),LingoSymbol("ink"), LingoNumber(36)))
                            tmp_a = a                            tmp_a += LingoNumber(1)                                                                        case "melt":                        if ((LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))) and lr >= dmin) and lr <= dmax):                             cp = self._global.image(LingoNumber(4),LingoNumber(4),LingoNumber(32))                            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(2),-LingoNumber(2),LingoNumber(2),LingoNumber(2)))                            cp.copypixels(self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(4),LingoNumber(4)),rct)
                            cp.setpixel(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                            cp.setpixel(LingoGlobal.point(LingoNumber(3),LingoNumber(0)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                            cp.setpixel(LingoGlobal.point(LingoNumber(0),LingoNumber(3)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                            cp.setpixel(LingoGlobal.point(LingoNumber(3),LingoNumber(3)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(cp,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(4),LingoNumber(4)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))
                            self._global.member("tst").image = cp                            if LingoGlobal.ToBool(self._movieScript.gradAf):                                 cpa = self._global.image(LingoNumber(4),LingoNumber(4),LingoNumber(32))                                cpa.copypixels(self._global.member(LingoGlobal.concat("gradientA",self._global.str(lr))).image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(4),LingoNumber(4)),rct)
                                cpa.setpixel(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                                cpa.setpixel(LingoGlobal.point(LingoNumber(3),LingoNumber(0)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                                cpa.setpixel(LingoGlobal.point(LingoNumber(0),LingoNumber(3)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                                cpa.setpixel(LingoGlobal.point(LingoNumber(3),LingoNumber(3)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                                self._global.member(LingoGlobal.concat("gradientA",self._global.str(lr))).image.copypixels(cpa,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(4),LingoNumber(4)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))
                                self._global.member("tstGradA").image = cpa                                cpb = self._global.image(LingoNumber(4),LingoNumber(4),LingoNumber(32))                                cpb.copypixels(self._global.member(LingoGlobal.concat("gradientB",self._global.str(lr))).image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(4),LingoNumber(4)),rct)
                                cpb.setpixel(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                                cpb.setpixel(LingoGlobal.point(LingoNumber(3),LingoNumber(0)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                                cpb.setpixel(LingoGlobal.point(LingoNumber(0),LingoNumber(3)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                                cpb.setpixel(LingoGlobal.point(LingoNumber(3),LingoNumber(3)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                                self._global.member(LingoGlobal.concat("gradientB",self._global.str(lr))).image.copypixels(cpb,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(4),LingoNumber(4)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))
                                self._global.member("tstGradB").image = cpb                                cpdc = self._global.image(LingoNumber(4),LingoNumber(4),LingoNumber(32))                                cpdc.copypixels(self._global.member(LingoGlobal.concat("layer",self._global.str(lr),"dc")).image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(4),LingoNumber(4)),rct)
                                cpdc.setpixel(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                                cpdc.setpixel(LingoGlobal.point(LingoNumber(3),LingoNumber(0)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                                cpdc.setpixel(LingoGlobal.point(LingoNumber(0),LingoNumber(3)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                                cpdc.setpixel(LingoGlobal.point(LingoNumber(3),LingoNumber(3)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                                self._global.member(LingoGlobal.concat("layer",self._global.str(lr),"dc")).image.copypixels(cpdc,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(4),LingoNumber(4)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))
                                self._global.member("tstDc").image = cpdc                                                                                                        case "fat slime":                        if LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             ofst = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                            lgt = LingoGlobal.op_add(LingoNumber(3),self._global.random(self._global.random(self._global.random(LingoNumber(6)))))                            big = self._global.random(LingoNumber(3))                            fat = self._global.random(LingoNumber(2))                            if LingoGlobal.ToBool(self._movieScript.effectIn3D):                                 nwlr = self.get3dlr(lr)                                                            else:                                match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                            case "1":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                                                                                        if nwlr > LingoNumber(29):                                 nwlr = LingoNumber(29)                                                            elif nwlr < LingoNumber(0):                                 nwlr = LingoNumber(0)                                                            self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(0),LingoGlobal.op_add(big,ofst),LingoGlobal.op_add(fat,lgt))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), LingoList(cl,cl,cl,cl,cl,cl,cl,self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)))[self._global.random(LingoNumber(10))]))
                            if LingoGlobal.ToBool(self._movieScript.gradAf):                                 if LingoGlobal.op_ne_b(cldc, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(0),LingoGlobal.op_add(big,ofst),LingoGlobal.op_add(fat,lgt))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), cldc))                                if LingoGlobal.op_ne_b(cla, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     self._global.member(LingoGlobal.concat("gradientA",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(0),LingoGlobal.op_add(big,ofst),LingoGlobal.op_add(fat,lgt))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), cla))                                if LingoGlobal.op_ne_b(clb, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     self._global.member(LingoGlobal.concat("gradientB",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(0),LingoGlobal.op_add(big,ofst),LingoGlobal.op_add(fat,lgt))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), clb))                                                            if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                                 self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_add(LingoGlobal.op_add(big,ofst),LingoNumber(1)),LingoGlobal.op_sub(LingoGlobal.op_add(fat,lgt),LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), LingoList(cl,cl,cl,cl,cl,cl,cl,self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)))[self._global.random(LingoNumber(10))]))
                                if LingoGlobal.ToBool(self._movieScript.gradAf):                                     if LingoGlobal.op_ne_b(cldc, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                         self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_add(LingoGlobal.op_add(big,ofst),LingoNumber(1)),LingoGlobal.op_sub(LingoGlobal.op_add(fat,lgt),LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), cldc))                                    if LingoGlobal.op_ne_b(cla, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                         self._global.member(LingoGlobal.concat("gradientA",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_add(LingoGlobal.op_add(big,ofst),LingoNumber(1)),LingoGlobal.op_sub(LingoGlobal.op_add(fat,lgt),LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), cla))                                    if LingoGlobal.op_ne_b(clb, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                         self._global.member(LingoGlobal.concat("gradientB",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_add(LingoGlobal.op_add(big,ofst),LingoNumber(1)),LingoGlobal.op_sub(LingoGlobal.op_add(fat,lgt),LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), clb))                                                                                                else:                                self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_sub(LingoGlobal.op_add(big,ofst),LingoNumber(1)),LingoGlobal.op_sub(LingoGlobal.op_add(fat,lgt),LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), LingoList(cl,cl,cl,cl,cl,cl,cl,self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)))[self._global.random(LingoNumber(10))]))
                                if LingoGlobal.ToBool(self._movieScript.gradAf):                                     if LingoGlobal.op_ne_b(cldc, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                         self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_sub(LingoGlobal.op_add(big,ofst),LingoNumber(1)),LingoGlobal.op_sub(LingoGlobal.op_add(fat,lgt),LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), cldc))                                    if LingoGlobal.op_ne_b(cla, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                         self._global.member(LingoGlobal.concat("gradientA",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_sub(LingoGlobal.op_add(big,ofst),LingoNumber(1)),LingoGlobal.op_sub(LingoGlobal.op_add(fat,lgt),LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), cla))                                    if LingoGlobal.op_ne_b(clb, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                         self._global.member(LingoGlobal.concat("gradientB",self._global.str(nwlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_add(LingoNumber(0),ofst),LingoNumber(1)),LingoNumber(1),LingoGlobal.op_sub(LingoGlobal.op_add(big,ofst),LingoNumber(1)),LingoGlobal.op_sub(LingoGlobal.op_add(fat,lgt),LingoNumber(1)))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), clb))                                                                                                                                            case "roughen":                        if (lr >= dmin and lr <= dmax):                             if LingoGlobal.op_eq_b(cl, self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))):                                 var = self._global.random(LingoNumber(20))                                tmp_lch = LingoNumber(0)                                while tmp_lch < LingoNumber(6):                                     lch = tmp_lch                                    tmp_lcv = LingoNumber(0)                                    while tmp_lcv < LingoNumber(6):                                         lcv = tmp_lcv                                        if LingoGlobal.op_eq_b(self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.getpixel(LingoGlobal.op_add(LingoGlobal.op_sub(pnt.loch,LingoNumber(3)),lch),LingoGlobal.op_add(LingoGlobal.op_sub(pnt.locv,LingoNumber(3)),lcv)), self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))):                                             gtcl = self._global.member("roughenTexture").image.getpixel(LingoGlobal.op_add(lch,LingoGlobal.op_mul(LingoGlobal.op_sub(var,LingoNumber(1)),LingoNumber(7))),lcv)                                            if LingoGlobal.op_ne_b(gtcl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                                 self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.setpixel(LingoGlobal.op_add(LingoGlobal.op_sub(pnt.loch,LingoNumber(3)),lch),LingoGlobal.op_add(LingoGlobal.op_sub(pnt.locv,LingoNumber(3)),lcv),gtcl)                                                                                    tmp_lcv = lcv                                        tmp_lcv += LingoNumber(1)                                                                            tmp_lch = lch                                    tmp_lch += LingoNumber(1)                                                                                                                                            case "super melt":                        if ((LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))) and lr >= dmin) and lr <= dmax):                             maskimg = self._global.member("destructiveMeltMask").image                            pntcal = LingoGlobal.op_div(LingoGlobal.point(maskimg.width,maskimg.height),LingoNumber(2.0000))                            cpimg = self._global.image(maskimg.width,maskimg.height,LingoNumber(32))                            rct = LingoGlobal.rect(LingoGlobal.op_sub(pnt,pntcal),LingoGlobal.op_add(pnt,pntcal))                            cpimg.copypixels(self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image,cpimg.rect,rct)
                            cpimg.copypixels(maskimg,cpimg.rect,maskimg.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._movieScript.DRWhite))
                            mvdown = LingoGlobal.op_mul(self._global.random(LingoNumber(7)),LingoGlobal.op_div(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(100.0000)))                            if LingoGlobal.ToBool(self._movieScript.gradAf):                                 cpaimg = self._global.image(maskimg.width,maskimg.height,LingoNumber(32))                                cpbimg = self._global.image(maskimg.width,maskimg.height,LingoNumber(32))                                cpdcimg = self._global.image(maskimg.width,maskimg.height,LingoNumber(32))                                cpaimg.copypixels(self._global.member(LingoGlobal.concat("gradientA",self._global.str(lr))).image,cpaimg.rect,rct)
                                cpaimg.copypixels(maskimg,cpaimg.rect,maskimg.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._movieScript.DRWhite))
                                cpbimg.copypixels(self._global.member(LingoGlobal.concat("gradientB",self._global.str(lr))).image,cpbimg.rect,rct)
                                cpbimg.copypixels(maskimg,cpbimg.rect,maskimg.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._movieScript.DRWhite))
                                cpdcimg.copypixels(self._global.member(LingoGlobal.concat("layer",self._global.str(lr),"dc")).image,cpdcimg.rect,rct)
                                cpdcimg.copypixels(maskimg,cpdcimg.rect,maskimg.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._movieScript.DRWhite))                            if LingoGlobal.ToBool(self._movieScript.effectIn3D):                                 nwlr = self.get3dlr(lr)                                                            else:                                match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                            case "1":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                                                                                        if ((lr > LingoNumber(6) and nwlr <= LingoNumber(6)) or (nwlr > LingoNumber(6) and lr <= LingoNumber(6))):                                 match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = lr                                                                            case "1":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = lr                                                                                                                                        if nwlr > LingoNumber(29):                                 nwlr = LingoNumber(29)                                                            elif nwlr < LingoNumber(0):                                 nwlr = LingoNumber(0)                                                            nwrect = LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(0),mvdown))                            self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(cpimg,nwrect,cpimg.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.ToBool(self._movieScript.gradAf):                                 self._global.member(LingoGlobal.concat("gradientA",self._global.str(nwlr))).image.copypixels(cpaimg,nwrect,cpaimg.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))
                                self._global.member(LingoGlobal.concat("gradientB",self._global.str(nwlr))).image.copypixels(cpbimg,nwrect,cpbimg.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))
                                self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(cpdcimg,nwrect,cpdcimg.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))                                                                        case "destructive melt":                        if ((LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))) and lr >= dmin) and lr <= dmax):                             maskimg = self._global.member("destructiveMeltMask").image                            cpimg = self._global.image(maskimg.width,maskimg.height,LingoNumber(32))                            rct = LingoGlobal.rect(LingoGlobal.op_sub(pnt,LingoGlobal.op_div(LingoGlobal.point(maskimg.width,maskimg.height),LingoNumber(2.0000))),LingoGlobal.op_add(pnt,LingoGlobal.op_div(LingoGlobal.point(maskimg.width,maskimg.height),LingoNumber(2.0000))))                            cpimg.copypixels(self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image,cpimg.rect,rct)
                            if LingoGlobal.ToBool(self._movieScript.gradAf):                                 cpaimg = self._global.image(maskimg.width,maskimg.height,LingoNumber(32))                                cpaimg.copypixels(self._global.member(LingoGlobal.concat("gradientA",self._global.str(lr))).image,cpaimg.rect,rct)
                                cpbimg = self._global.image(maskimg.width,maskimg.height,LingoNumber(32))                                cpbimg.copypixels(self._global.member(LingoGlobal.concat("gradientB",self._global.str(lr))).image,cpbimg.rect,rct)
                                cpdcimg = self._global.image(maskimg.width,maskimg.height,LingoNumber(32))                                cpdcimg.copypixels(self._global.member(LingoGlobal.concat("layer",self._global.str(lr),"dc")).image,cpdcimg.rect,rct)                            pnt = LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(2),self._global.random(LingoNumber(3))),LingoGlobal.op_add(-LingoNumber(2),self._global.random(LingoNumber(3))))                            rct = LingoGlobal.op_add(rct,LingoGlobal.rect(pnt,pnt))                            mvdown = LingoGlobal.op_mul(self._global.random(LingoNumber(7)),LingoGlobal.op_div(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(100.0000)))                            if LingoGlobal.ToBool(self._movieScript.effectIn3D):                                 nwlr = self.get3dlr(lr)                                                            else:                                match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                            case "1":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(1)),self._global.random(LingoNumber(2))),LingoNumber(0),LingoNumber(29))                                                                                                                                        if ((lr > LingoNumber(6) and nwlr <= LingoNumber(6)) or (nwlr > LingoNumber(6) and lr <= LingoNumber(6))):                                 match self._movieScript.lrSup.lower():                                     case "all":                                        nwlr = lr                                                                            case "1":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(9))                                                                            case "2":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(19))                                                                            case "3":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(20),LingoNumber(29))                                                                            case "1:st and 2:nd":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(0),LingoNumber(19))                                                                            case "2:nd and 3:rd":                                        nwlr = self._movieScript.restrict(lr,LingoNumber(10),LingoNumber(29))                                                                            case _:                                         nwlr = lr                                                                                                                                        if nwlr > LingoNumber(29):                                 nwlr = LingoNumber(29)                                                            elif nwlr < LingoNumber(0):                                 nwlr = LingoNumber(0)                                                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(cpimg,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(0),mvdown)),cpimg.rect,LingoPropertyList(LingoSymbol("mask"), self._global.member("destructiveMeltDestroy").image.createmask()))
                            self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr))).image.copypixels(cpimg,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(mvdown,LingoNumber(0.5000)))),cpimg.rect,LingoPropertyList(LingoSymbol("mask"), self._global.member("destructiveMeltDestroy").image.createmask(),LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_eq_b(cl, "WHITE"):                                 self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("destructiveMeltDestroy").image,LingoGlobal.rect(rct.left,rct.top,rct.right,LingoGlobal.op_add(rct.bottom,mvdown)),self._global.member("destructiveMeltDestroy").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))))                            if LingoGlobal.ToBool(self._movieScript.gradAf):                                 self._global.member(LingoGlobal.concat("gradientA",self._global.str(lr))).image.copypixels(cpaimg,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(0),mvdown)),cpaimg.rect,LingoPropertyList(LingoSymbol("mask"), self._global.member("destructiveMeltDestroy").image.createmask()))
                                self._global.member(LingoGlobal.concat("gradientA",self._global.str(nwlr))).image.copypixels(cpaimg,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(mvdown,LingoNumber(0.5000)))),cpaimg.rect,LingoPropertyList(LingoSymbol("mask"), self._global.member("destructiveMeltDestroy").image.createmask(),LingoSymbol("ink"), LingoNumber(39)))
                                if LingoGlobal.op_eq_b(cla, "WHITE"):                                     self._global.member(LingoGlobal.concat("gradientA",self._global.str(lr))).image.copypixels(self._global.member("destructiveMeltDestroy").image,LingoGlobal.rect(rct.left,rct.top,rct.right,LingoGlobal.op_add(rct.bottom,mvdown)),self._global.member("destructiveMeltDestroy").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))))                                self._global.member(LingoGlobal.concat("gradientB",self._global.str(lr))).image.copypixels(cpbimg,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(0),mvdown)),cpbimg.rect,LingoPropertyList(LingoSymbol("mask"), self._global.member("destructiveMeltDestroy").image.createmask()))
                                self._global.member(LingoGlobal.concat("gradientB",self._global.str(nwlr))).image.copypixels(cpbimg,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(mvdown,LingoNumber(0.5000)))),cpbimg.rect,LingoPropertyList(LingoSymbol("mask"), self._global.member("destructiveMeltDestroy").image.createmask(),LingoSymbol("ink"), LingoNumber(39)))
                                if LingoGlobal.op_eq_b(clb, "WHITE"):                                     self._global.member(LingoGlobal.concat("gradientB",self._global.str(lr))).image.copypixels(self._global.member("destructiveMeltDestroy").image,LingoGlobal.rect(rct.left,rct.top,rct.right,LingoGlobal.op_add(rct.bottom,mvdown)),self._global.member("destructiveMeltDestroy").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))))                                self._global.member(LingoGlobal.concat("layer",self._global.str(lr),"dc")).image.copypixels(cpdcimg,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(0),mvdown)),cpdcimg.rect,LingoPropertyList(LingoSymbol("mask"), self._global.member("destructiveMeltDestroy").image.createmask()))
                                self._global.member(LingoGlobal.concat("layer",self._global.str(nwlr),"dc")).image.copypixels(cpdcimg,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(mvdown,LingoNumber(0.5000)))),cpdcimg.rect,LingoPropertyList(LingoSymbol("mask"), self._global.member("destructiveMeltDestroy").image.createmask(),LingoSymbol("ink"), LingoNumber(36)))
                                if LingoGlobal.op_eq_b(cldc, "WHITE"):                                     self._global.member(LingoGlobal.concat("layer",self._global.str(lr),"dc")).image.copypixels(self._global.member("destructiveMeltDestroy").image,LingoGlobal.rect(rct.left,rct.top,rct.right,LingoGlobal.op_add(rct.bottom,mvdown)),self._global.member("destructiveMeltDestroy").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))))                                                                                                        case "impacts":                        if (lr >= dmin and lr <= dmax):                             chance = self._global.random(LingoNumber(110))                            if lr <= LingoNumber(9):                                 chance = self._global.random(LingoNumber(6))                                                            elif lr <= LingoNumber(19):                                 chance = self._global.random(LingoNumber(90))                                                            if LingoGlobal.op_eq_b(chance, LingoNumber(1)):                                 if LingoGlobal.op_ne_b(cl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     var = self._global.random(LingoNumber(8))                                    tmp_lch = LingoNumber(0)                                    while tmp_lch < LingoNumber(19):                                         lch = tmp_lch                                        tmp_lcv = LingoNumber(1)                                        while tmp_lcv < LingoNumber(20):                                             lcv = tmp_lcv                                            if LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.getpixel(LingoGlobal.op_add(LingoGlobal.op_sub(pnt.loch,LingoNumber(15)),lch),LingoGlobal.op_add(LingoGlobal.op_sub(pnt.locv,LingoNumber(15)),lcv)), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                                 tmp_iVar = LingoNumber(1)                                                while tmp_iVar < LingoNumber(3):                                                     ivar = tmp_iVar                                                    gtcl = self._global.member(LingoGlobal.concat("Impact",self._global.str(ivar))).image.getpixel(LingoGlobal.op_add(lch,LingoGlobal.op_mul(LingoGlobal.op_sub(var,LingoNumber(1)),LingoNumber(20))),lcv)                                                    if LingoGlobal.op_ne_b(gtcl, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                                         self._global.member(LingoGlobal.concat("layer",self._global.str(self._movieScript.restrict(LingoGlobal.op_sub(LingoGlobal.op_add(lr,ivar),LingoNumber(1)),dmin,dmax)))).image.setpixel(LingoGlobal.op_add(LingoGlobal.op_sub(pnt.loch,LingoNumber(15)),lch),LingoGlobal.op_add(LingoGlobal.op_sub(pnt.locv,LingoNumber(15)),lcv),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))                                                    tmp_iVar = ivar                                                    tmp_iVar += LingoNumber(1)                                                                                                                                                tmp_lcv = lcv                                            tmp_lcv += LingoNumber(1)                                                                                    tmp_lch = lch                                        tmp_lch += LingoNumber(1)                                                                                                                                                                                                    tmp_cntr = cntr                tmp_cntr += LingoNumber(1)                            tmp_d = d            tmp_d += LingoNumber(1)                            return None            def applyfuzzygrower(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = self._global.random(LingoNumber(29))                            case "1":                d = self._global.random(LingoNumber(9))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = self._global.random(LingoNumber(19))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = self._global.random(LingoNumber(29))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            lastdir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(61)),self._global.random(LingoNumber(121)))            blnd = LingoNumber(1)            blnd2 = LingoNumber(1)            wdth = LingoNumber(0.3000)            searchbase = LingoNumber(50)            while LingoGlobal.ToBool(LingoGlobal.op_lt(pnt.locv,LingoNumber(30000))):                 dir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(150)),self._global.random(LingoNumber(300)))                dir = self._movieScript.lerp(lastdir,dir,LingoNumber(0.3500))                lastpnt = pnt                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoNumber(30.0000)))                if searchbase > LingoNumber(0):                     movedir = LingoGlobal.point(LingoNumber(0),LingoNumber(0))                    for tmp_tst in LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(-LingoNumber(1),LingoNumber(1))):                         tst = tmp_tst                        tstpnt = LingoGlobal.op_add(LingoGlobal.op_add(self._movieScript.givegridpos(lastpnt),self._movieScript.gRenderCameraTilePos),tst)                        if (((tstpnt.loch > LingoNumber(0) and tstpnt.loch < LingoGlobal.op_sub(self._movieScript.gLOprops.size.loch,LingoNumber(1))) and tstpnt.locv > LingoNumber(0)) and tstpnt.locv < LingoGlobal.op_sub(self._movieScript.gLOprops.size.locv,LingoNumber(1))):                             movedir = LingoGlobal.op_add(movedir,LingoGlobal.op_mul(tst,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[tstpnt.loch][tstpnt.locv]))                                                                        pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_div(movedir,LingoNumber(100.0000)),searchbase))                    searchbase = LingoGlobal.op_sub(searchbase,LingoNumber(1.5000))                    pnt = LingoGlobal.op_add(lastpnt,self._movieScript.movetopoint(lastpnt,pnt,LingoNumber(30.0000)))                                    lastdir = dir                rct = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                rct = LingoGlobal.rect(rct,rct)                rct = LingoGlobal.op_add(rct,LingoGlobal.rect(LingoGlobal.op_mul(-LingoNumber(10),wdth),-LingoNumber(25),LingoGlobal.op_mul(LingoNumber(10),wdth),LingoNumber(25)))                qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                     qd = self._movieScript.flipquadh(qd)                                    wdth = LingoGlobal.op_add(wdth,LingoGlobal.op_div(LingoGlobal.op_div(self._global.random(LingoNumber(1000)),LingoNumber(1000.0000)),LingoNumber(5.0000)))                if wdth > LingoNumber(1):                     wdth = LingoNumber(1)                                    var = self._global.random(LingoNumber(13))                tdrect = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(var,LingoNumber(1)),LingoNumber(20)),LingoNumber(1),LingoGlobal.op_mul(var,LingoNumber(20)),LingoNumber(51))                self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("fuzzyBushGraf").image,qd,tdrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"fuzzyBushGrad",tdrect,LingoNumber(0.5000),blnd)
                blnd = LingoGlobal.op_mul(blnd,LingoNumber(0.5000))                if blnd2 > LingoNumber(0):                     rctr = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                    rct = LingoGlobal.op_add(LingoGlobal.rect(rctr,rctr),LingoGlobal.rect(-LingoNumber(12),-LingoNumber(36),LingoNumber(12),LingoNumber(36)))                    qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"softBrush1",self._global.member("softBrush1").image.rect,LingoNumber(0.5000),blnd2)
                    blnd2 = LingoGlobal.op_sub(blnd2,LingoNumber(0.1500))                                    tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                     break                                    elif LingoGlobal.op_eq_b(self._movieScript.solidafamv(tlpos,lr), LingoNumber(1)):                     break                                                                return None            def get3dlr(self, lr):         match self._movieScript.lrSup.lower():             case "all":                nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(0),LingoNumber(29))                            case "1":                nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(0),LingoNumber(9))                            case "2":                nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(10),LingoNumber(19))                            case "3":                nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(20),LingoNumber(29))                            case "1:st and 2:nd":                nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(0),LingoNumber(19))                            case "2:nd and 3:rd":                nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(10),LingoNumber(29))                            case _:                 nwlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(lr,LingoNumber(2)),self._global.random(LingoNumber(3))),LingoNumber(0),LingoNumber(29))                                    if (LingoGlobal.op_eq_b(lr, LingoNumber(6)) and LingoGlobal.op_eq_b(nwlr, LingoNumber(5))):             nwlr = LingoNumber(6)                    elif (LingoGlobal.op_eq_b(lr, LingoNumber(5)) and LingoGlobal.op_eq_b(nwlr, LingoNumber(6))):             nwlr = LingoNumber(5)                    if nwlr > LingoNumber(29):             nwlr = LingoNumber(29)                    elif nwlr < LingoNumber(0):             nwlr = LingoNumber(0)                    return nwlr                    def applydarkslime(self, q, c, unused_nm):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        cls = LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)))        fc = LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoGlobal.op_sub(LingoNumber(1.0000),LingoNumber(0)),self._movieScript.solidafamv(LingoGlobal.point(q2,c2),LingoNumber(1))))        match self._movieScript.lrSup.lower():             case "all":                dmin = LingoNumber(0)                dmax = LingoNumber(29)                            case "1":                dmin = LingoNumber(0)                dmax = LingoNumber(9)                            case "2":                dmin = LingoNumber(10)                dmax = LingoNumber(19)                            case "3":                dmin = LingoNumber(20)                dmax = LingoNumber(29)                            case "1:st and 2:nd":                dmin = LingoNumber(0)                dmax = LingoNumber(19)                            case "2:nd and 3:rd":                dmin = LingoNumber(10)                dmax = LingoNumber(29)                            case _:                 dmin = LingoNumber(0)                dmax = LingoNumber(29)                                    tmp_d = LingoNumber(0)        while tmp_d < LingoNumber(29):             d = tmp_d            match self._movieScript.lrSup.lower():                 case "all":                    lr = d                                    case "1":                    lr = self._movieScript.restrict(d,LingoNumber(0),LingoNumber(9))                                    case "2":                    lr = self._movieScript.restrict(d,LingoNumber(10),LingoNumber(19))                                    case "3":                    lr = self._movieScript.restrict(d,LingoNumber(20),LingoNumber(29))                                    case "1:st and 2:nd":                    lr = self._movieScript.restrict(d,LingoNumber(0),LingoNumber(19))                                    case "2:nd and 3:rd":                    lr = self._movieScript.restrict(d,LingoNumber(10),LingoNumber(29))                                    case _:                     lr = d                                                if ((LingoGlobal.op_eq_b(lr, LingoNumber(0)) or LingoGlobal.op_eq_b(lr, LingoNumber(10))) or LingoGlobal.op_eq_b(lr, LingoNumber(20))):                 sld = self._movieScript.solidMtrx[q2][c2][LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(lr,LingoNumber(9))),LingoGlobal.op_gt(lr,LingoNumber(19)))]                fc = LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoGlobal.op_sub(LingoNumber(1.0000),LingoNumber(0)),self._movieScript.solidafamv(LingoGlobal.op_add(LingoGlobal.point(q2,c2),self._movieScript.gRenderCameraTilePos),LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(lr,LingoNumber(9))),LingoGlobal.op_gt(lr,LingoNumber(19))))))                            deepeffect = LingoNumber(0)            if (((LingoGlobal.op_eq_b(lr, LingoNumber(0)) or LingoGlobal.op_eq_b(lr, LingoNumber(10))) or LingoGlobal.op_eq_b(lr, LingoNumber(20))) or LingoGlobal.op_eq_b(sld, LingoNumber(0))):                 deepeffect = LingoNumber(1)                            tmp_cntr = LingoNumber(1)            while tmp_cntr < LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoGlobal.op_add(LingoNumber(0.2000),LingoGlobal.op_mul(LingoNumber(0.8000),deepeffect))),LingoNumber(0.0100)),LingoNumber(80)),fc):                 cntr = tmp_cntr                if LingoGlobal.ToBool(deepeffect):                     pnt = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.point(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(c,LingoNumber(1))),LingoNumber(20)),LingoGlobal.point(self._global.random(LingoNumber(20)),self._global.random(LingoNumber(20))))                                    elif LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                     pnt = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.point(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(c,LingoNumber(1))),LingoNumber(20)),LingoGlobal.point(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoNumber(19),LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1)))),self._global.random(LingoNumber(20))))                                    else:                    pnt = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.point(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(c,LingoNumber(1))),LingoNumber(20)),LingoGlobal.point(self._global.random(LingoNumber(20)),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoNumber(19),LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))))))                                    if ((LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.getpixel(pnt), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))) and d >= dmin) and d <= dmax):                     lgt = self._global.random(LingoNumber(40))                    if ((LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.getpixel(LingoGlobal.op_add(pnt,LingoGlobal.point(LingoNumber(0),lgt))), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))) and d >= dmin) and d <= dmax):                         clr = cls[self._global.random(LingoNumber(3))]                        self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(LingoImage.Pxl,LingoGlobal.rect(pnt,LingoGlobal.op_add(pnt,LingoGlobal.point(LingoNumber(1),lgt))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), clr))
                        if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                             self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,LingoGlobal.op_add(pnt,LingoGlobal.point(LingoNumber(1),lgt))),LingoGlobal.rect(-LingoNumber(1),LingoNumber(1),-LingoNumber(1),-LingoNumber(1))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), clr))                        else:                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt,LingoGlobal.op_add(pnt,LingoGlobal.point(LingoNumber(1),lgt))),LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoNumber(1),-LingoNumber(1))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), clr))                                                            tmp_cntr = cntr                tmp_cntr += LingoNumber(1)                            tmp_d = d            tmp_d += LingoNumber(1)                            return None            def giveaneffectpos(self, q, c, d, sld):         pnt = LingoGlobal.point(LingoNumber(0),LingoNumber(0))        l = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if (((LingoGlobal.op_eq_b(d, LingoNumber(0)) or LingoGlobal.op_eq_b(d, LingoNumber(9))) or LingoGlobal.op_eq_b(d, LingoNumber(19))) or LingoGlobal.ToBool(sld)):             pnt = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.point(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(c,LingoNumber(1))),LingoNumber(20)),LingoGlobal.point(self._global.random(LingoNumber(20)),self._global.random(LingoNumber(20))))                    elif LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):             pnt = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.point(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(c,LingoNumber(1))),LingoNumber(20)),LingoGlobal.point(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoNumber(19),LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1)))),self._global.random(LingoNumber(20))))                    else:            pnt = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.point(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(c,LingoNumber(1))),LingoNumber(20)),LingoGlobal.point(self._global.random(LingoNumber(20)),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoNumber(19),LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))))))                    return pnt                    def applywlplant(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        amount = LingoNumber(20)        match self._movieScript.lrSup.lower():             case "all":                lsl = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3))                            case "1":                lsl = LingoList(LingoNumber(1))                            case "2":                lsl = LingoList(LingoNumber(2))                            case "3":                lsl = LingoList(LingoNumber(3))                            case "1:st and 2:nd":                lsl = LingoList(LingoNumber(1),LingoNumber(2))                            case "2:nd and 3:rd":                lsl = LingoList(LingoNumber(2),LingoNumber(3))                            case _:                 lsl = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3))                                    bldr = LingoGlobal.op_mul(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(1.5000))        for tmp_layer in lsl:             layer = tmp_layer            editm = self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer)            if (((((LingoGlobal.op_eq_b(editm, LingoNumber(1)) or LingoGlobal.op_eq_b(editm, LingoNumber(2))) or LingoGlobal.op_eq_b(editm, LingoNumber(3))) or LingoGlobal.op_eq_b(editm, LingoNumber(4))) or LingoGlobal.op_eq_b(editm, LingoNumber(5))) or LingoGlobal.op_eq_b(editm, LingoNumber(6))):                 tmp_cntr = LingoNumber(1)                while tmp_cntr < LingoGlobal.op_mul(LingoGlobal.op_mul(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(0.0100)),amount):                     cntr = tmp_cntr                    pnt = LingoGlobal.op_sub(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoList(-LingoNumber(1),LingoNumber(1),-LingoNumber(2),LingoNumber(2))[self._global.random(LingoNumber(4))],LingoList(-LingoNumber(1),LingoNumber(1),-LingoNumber(2),LingoNumber(2))[self._global.random(LingoNumber(4))]))                    edit = self._movieScript.afamvlvledit(LingoGlobal.point(q2,LingoGlobal.op_add(c2,LingoNumber(1))),layer)                    bttmr = LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_eq(edit,LingoNumber(0)),LingoGlobal.op_eq(edit,LingoNumber(7))),LingoGlobal.op_eq(edit,LingoNumber(8))),LingoGlobal.op_eq(edit,LingoNumber(9))),LingoGlobal.op_eq(edit,-LingoNumber(1))),LingoGlobal.op_eq(edit,LingoNumber(6)))                    edit = self._movieScript.afamvlvledit(LingoGlobal.point(q2,LingoGlobal.op_sub(c2,LingoNumber(1))),layer)                    tpr = LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_eq(edit,LingoNumber(0)),LingoGlobal.op_eq(edit,LingoNumber(7))),LingoGlobal.op_eq(edit,LingoNumber(8))),LingoGlobal.op_eq(edit,LingoNumber(9))),LingoGlobal.op_eq(edit,-LingoNumber(1))),LingoGlobal.op_eq(edit,LingoNumber(6)))                    edit = self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_add(q2,LingoNumber(1)),c2),layer)                    rghtr = LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_eq(edit,LingoNumber(0)),LingoGlobal.op_eq(edit,LingoNumber(7))),LingoGlobal.op_eq(edit,LingoNumber(8))),LingoGlobal.op_eq(edit,LingoNumber(9))),LingoGlobal.op_eq(edit,-LingoNumber(1))),LingoGlobal.op_eq(edit,LingoNumber(6)))                    edit = self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_sub(q2,LingoNumber(1)),c2),layer)                    lftr = LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_or(LingoGlobal.op_eq(edit,LingoNumber(0)),LingoGlobal.op_eq(edit,LingoNumber(7))),LingoGlobal.op_eq(edit,LingoNumber(8))),LingoGlobal.op_eq(edit,LingoNumber(9))),LingoGlobal.op_eq(edit,-LingoNumber(1))),LingoGlobal.op_eq(edit,LingoNumber(6)))                    match editm if editm is not None else 9999999999:                         case 2:                            tpr = LingoNumber(0)                            rghtr = LingoNumber(0)                            slp1 = LingoGlobal.op_sub(self._global.random(LingoNumber(21)),LingoNumber(11))                            rand2 = self._global.random(LingoNumber(2))                            baserect = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(1),slp1),LingoGlobal.op_add(-LingoNumber(1),slp1),LingoGlobal.op_add(LingoNumber(1),slp1),LingoGlobal.op_add(LingoNumber(1),slp1))),LingoGlobal.rect(-rand2,-rand2,rand2,rand2))                            tmp_rep = LingoNumber(2)                            while tmp_rep < LingoNumber(9):                                 rep = tmp_rep                                rct = self._movieScript.rotatetoquad(baserect,self._global.random(LingoNumber(360)))                                rubbl = self._global.random(LingoNumber(4))                                varlr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),rep)                                self._global.member(LingoGlobal.concat("layer",self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGraf").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                                if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                     self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGrad").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39),LingoSymbol("blend"), bldr))                                tmp_rep = rep                                tmp_rep += LingoNumber(1)                                                                                    case 3:                            tpr = LingoNumber(0)                            lftr = LingoNumber(0)                            slp1 = LingoGlobal.op_sub(self._global.random(LingoNumber(21)),LingoNumber(11))                            rand2 = self._global.random(LingoNumber(2))                            baserect = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(1),slp1),LingoGlobal.op_sub(-LingoNumber(1),slp1),LingoGlobal.op_add(LingoNumber(1),slp1),LingoGlobal.op_sub(LingoNumber(1),slp1))),LingoGlobal.rect(-rand2,-rand2,rand2,rand2))                            tmp_rep = LingoNumber(2)                            while tmp_rep < LingoNumber(9):                                 rep = tmp_rep                                rct = self._movieScript.rotatetoquad(baserect,self._global.random(LingoNumber(360)))                                rubbl = self._global.random(LingoNumber(4))                                varlr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),rep)                                self._global.member(LingoGlobal.concat("layer",self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGraf").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                                if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                     self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGrad").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39),LingoSymbol("blend"), bldr))                                tmp_rep = rep                                tmp_rep += LingoNumber(1)                                                                                    case 4:                            bttmr = LingoNumber(0)                            rghtr = LingoNumber(0)                            slp1 = LingoGlobal.op_sub(self._global.random(LingoNumber(21)),LingoNumber(11))                            rand2 = self._global.random(LingoNumber(2))                            baserect = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_sub(-LingoNumber(1),slp1),LingoGlobal.op_add(-LingoNumber(1),slp1),LingoGlobal.op_sub(LingoNumber(1),slp1),LingoGlobal.op_add(LingoNumber(1),slp1))),LingoGlobal.rect(-rand2,-rand2,rand2,rand2))                            tmp_rep = LingoNumber(2)                            while tmp_rep < LingoNumber(9):                                 rep = tmp_rep                                rct = self._movieScript.rotatetoquad(baserect,self._global.random(LingoNumber(360)))                                rubbl = self._global.random(LingoNumber(4))                                varlr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),rep)                                self._global.member(LingoGlobal.concat("layer",self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGraf").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                                if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                     self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGrad").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39),LingoSymbol("blend"), bldr))                                tmp_rep = rep                                tmp_rep += LingoNumber(1)                                                                                    case 5:                            bttmr = LingoNumber(0)                            lftr = LingoNumber(0)                            slp1 = LingoGlobal.op_sub(self._global.random(LingoNumber(21)),LingoNumber(11))                            rand2 = self._global.random(LingoNumber(2))                            baserect = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_sub(-LingoNumber(1),slp1),LingoGlobal.op_sub(-LingoNumber(1),slp1),LingoGlobal.op_sub(LingoNumber(1),slp1),LingoGlobal.op_sub(LingoNumber(1),slp1))),LingoGlobal.rect(-rand2,-rand2,rand2,rand2))                            tmp_rep = LingoNumber(2)                            while tmp_rep < LingoNumber(9):                                 rep = tmp_rep                                rct = self._movieScript.rotatetoquad(baserect,self._global.random(LingoNumber(360)))                                rubbl = self._global.random(LingoNumber(4))                                varlr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),rep)                                self._global.member(LingoGlobal.concat("layer",self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGraf").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                                if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                     self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGrad").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39),LingoSymbol("blend"), bldr))                                tmp_rep = rep                                tmp_rep += LingoNumber(1)                                                                                    case 6:                            tpr = LingoNumber(0)                            lftr = LingoNumber(0)                            bttmr = LingoNumber(0)                            rghtr = LingoNumber(0)                            rand = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),self._global.random(LingoNumber(10)))                            rand2 = self._global.random(LingoNumber(2))                            baserect = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(1),rand),-LingoNumber(11),LingoGlobal.op_add(LingoNumber(1),rand),-LingoNumber(9))),LingoGlobal.rect(-rand2,-rand2,rand2,rand2))                            tmp_rep = LingoNumber(7)                            while tmp_rep < LingoNumber(9):                                 rep = tmp_rep                                rct = self._movieScript.rotatetoquad(baserect,self._global.random(LingoNumber(360)))                                rubbl = self._global.random(LingoNumber(4))                                varlr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),rep)                                self._global.member(LingoGlobal.concat("layer",self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGraf").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                                if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                     self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGrad").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39),LingoSymbol("blend"), bldr))                                tmp_rep = rep                                tmp_rep += LingoNumber(1)                                                                                                        if LingoGlobal.op_eq_b(rghtr, LingoNumber(1)):                         rand = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),self._global.random(LingoNumber(10)))                        rand2 = self._global.random(LingoNumber(2))                        baserect = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoNumber(9),LingoGlobal.op_add(-LingoNumber(1),rand),LingoNumber(11),LingoGlobal.op_add(LingoNumber(1),rand))),LingoGlobal.rect(-rand2,-rand2,rand2,rand2))                        tmp_rep = LingoNumber(2)                        while tmp_rep < LingoNumber(9):                             rep = tmp_rep                            rct = self._movieScript.rotatetoquad(baserect,self._global.random(LingoNumber(360)))                            rubbl = self._global.random(LingoNumber(4))                            varlr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),rep)                            self._global.member(LingoGlobal.concat("layer",self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGraf").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                 self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGrad").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39),LingoSymbol("blend"), bldr))                            tmp_rep = rep                            tmp_rep += LingoNumber(1)                                                                        if LingoGlobal.op_eq_b(lftr, LingoNumber(1)):                         rand = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),self._global.random(LingoNumber(10)))                        rand2 = self._global.random(LingoNumber(2))                        baserect = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(11),LingoGlobal.op_add(-LingoNumber(1),rand),-LingoNumber(9),LingoGlobal.op_add(LingoNumber(1),rand))),LingoGlobal.rect(-rand2,-rand2,rand2,rand2))                        tmp_rep = LingoNumber(2)                        while tmp_rep < LingoNumber(9):                             rep = tmp_rep                            rct = self._movieScript.rotatetoquad(baserect,self._global.random(LingoNumber(360)))                            rubbl = LingoGlobal.op_sub(self._global.random(LingoNumber(4)),LingoNumber(1))                            varlr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),rep)                            self._global.member(LingoGlobal.concat("layer",self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGraf").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                 self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGrad").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39),LingoSymbol("blend"), bldr))                            tmp_rep = rep                            tmp_rep += LingoNumber(1)                                                                        if LingoGlobal.op_eq_b(bttmr, LingoNumber(1)):                         rand = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),self._global.random(LingoNumber(10)))                        rand2 = self._global.random(LingoNumber(2))                        baserect = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(1),rand),LingoNumber(9),LingoGlobal.op_add(LingoNumber(1),rand),LingoNumber(11))),LingoGlobal.rect(-rand2,-rand2,rand2,rand2))                        tmp_rep = LingoNumber(2)                        while tmp_rep < LingoNumber(9):                             rep = tmp_rep                            rct = self._movieScript.rotatetoquad(baserect,self._global.random(LingoNumber(360)))                            rubbl = self._global.random(LingoNumber(4))                            varlr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),rep)                            self._global.member(LingoGlobal.concat("layer",self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGraf").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                 self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGrad").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39),LingoSymbol("blend"), bldr))                            tmp_rep = rep                            tmp_rep += LingoNumber(1)                                                                        if LingoGlobal.op_eq_b(tpr, LingoNumber(1)):                         rand = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),self._global.random(LingoNumber(10)))                        rand2 = self._global.random(LingoNumber(2))                        baserect = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_add(-LingoNumber(1),rand),-LingoNumber(11),LingoGlobal.op_add(LingoNumber(1),rand),-LingoNumber(9))),LingoGlobal.rect(-rand2,-rand2,rand2,rand2))                        tmp_rep = LingoNumber(2)                        while tmp_rep < LingoNumber(9):                             rep = tmp_rep                            rct = self._movieScript.rotatetoquad(baserect,self._global.random(LingoNumber(360)))                            rubbl = self._global.random(LingoNumber(4))                            varlr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),rep)                            self._global.member(LingoGlobal.concat("layer",self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGraf").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                 self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(varlr))).image.copypixels(self._global.member("denseMoldGrad").image,rct,LingoGlobal.rect(LingoGlobal.op_add(LingoNumber(0),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(1),LingoGlobal.op_add(LingoNumber(10),LingoGlobal.op_mul(LingoNumber(10),rubbl)),LingoNumber(11)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39),LingoSymbol("blend"), bldr))                            tmp_rep = rep                            tmp_rep += LingoNumber(1)                                                                        tmp_cntr = cntr                    tmp_cntr += LingoNumber(1)                                                                return None            def applystandardplant(self, q, c, eftc, tp):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        amount = LingoNumber(17)        match tp.lower():             case "root grass":                amount = LingoNumber(12)                            case "grass":                amount = LingoNumber(10)                            case "seed pods":                amount = self._global.random(LingoNumber(5))                            case "cacti":                amount = LingoNumber(3)                            case "rain moss":                amount = LingoNumber(9)                            case "rubble":                amount = LingoNumber(11)                            case "colored rubble":                amount = LingoNumber(11)                            case "horse tails":                amount = LingoGlobal.op_add(LingoNumber(1),self._global.random(LingoNumber(3)))                            case "circuit plants":                amount = LingoNumber(2)                            case "feather plants":                amount = LingoNumber(4)                            case "reeds":                amount = LingoNumber(2)                            case "lavenders":                amount = LingoNumber(5)                                    match self._movieScript.lrSup.lower():             case "all":                lsl = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3))                            case "1":                lsl = LingoList(LingoNumber(1))                            case "2":                lsl = LingoList(LingoNumber(2))                            case "3":                lsl = LingoList(LingoNumber(3))                            case "1:st and 2:nd":                lsl = LingoList(LingoNumber(1),LingoNumber(2))                            case "2:nd and 3:rd":                lsl = LingoList(LingoNumber(2),LingoNumber(3))                            case _:                 lsl = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3))                                    for tmp_layer in lsl:             layer = tmp_layer            if (LingoGlobal.op_ne_b(self._movieScript.solidMtrx[q2][c2][layer], LingoNumber(1)) and LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(q2,LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(1))):                 tmp_cntr = LingoNumber(1)                while tmp_cntr < LingoGlobal.op_mul(LingoGlobal.op_mul(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(0.0100)),amount):                     cntr = tmp_cntr                    pnt = self.givegroundpos(q,c,layer)                    lr = LingoGlobal.op_add(self._global.random(LingoNumber(9)),LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)))                    match tp.lower():                         case "grass":                            freesides = LingoNumber(0)                            if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(LingoGlobal.op_sub(q2,LingoNumber(1)),LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(0)):                                 amount = LingoGlobal.op_div(amount,LingoNumber(2))                                                            if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(LingoGlobal.op_add(q2,LingoNumber(1)),LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(0)):                                 amount = LingoGlobal.op_div(amount,LingoNumber(2))                                                            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(10),-LingoNumber(20),LingoNumber(10),LingoNumber(10)))                            rnd = self._global.random(LingoNumber(20))                            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                            if LingoGlobal.ToBool(flp):                                 rct = self._movieScript.vertfliprect(rct)                                                            gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(20)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(20)),LingoNumber(30)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("GrassGraf").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.colr, self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))):                                 rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(10),-LingoNumber(20),LingoNumber(10),LingoNumber(10)))                                if LingoGlobal.ToBool(flp):                                     rct = self._movieScript.vertfliprect(rct)                                                                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,lr,rct,"GrassGrad",gtrect,LingoNumber(0.5000))                                                    case "root grass":                            freesides = LingoNumber(0)                            if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(LingoGlobal.op_sub(q2,LingoNumber(1)),LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(0)):                                 freesides = LingoGlobal.op_add(freesides,LingoNumber(1))                                                            if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(LingoGlobal.op_add(q2,LingoNumber(1)),LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(0)):                                 freesides = LingoGlobal.op_add(freesides,LingoNumber(1))                                                            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(5),-LingoNumber(17),LingoNumber(5),LingoNumber(3)))                            if (freesides > LingoNumber(0) or amount < LingoNumber(0.5000)):                                 rnd = LingoGlobal.op_add(LingoNumber(10),self._global.random(LingoNumber(5)))                                                            else:                                rnd = self._global.random(LingoNumber(10))                                                            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                            if LingoGlobal.ToBool(flp):                                 rct = self._movieScript.vertfliprect(rct)                                                            gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(10)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(10)),LingoNumber(30)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("RootGrassGraf").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.colr, self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))):                                 rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(5),-LingoNumber(17),LingoNumber(5),LingoNumber(3)))                                if LingoGlobal.ToBool(flp):                                     rct = self._movieScript.vertfliprect(rct)                                                                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,lr,rct,"RootGrassGrad",gtrect,LingoNumber(0.5000))                                                    case "seed pods":                            rnd = self._global.random(LingoNumber(7))                            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(10),-LingoNumber(77),LingoNumber(10),LingoNumber(3)))                            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                            gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(20)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(20)),LingoNumber(80)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))                            if LingoGlobal.ToBool(flp):                                 rct = self._movieScript.vertfliprect(rct)                                                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("SeedPodsGraf").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.colr, self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))):                                 rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(10),-LingoNumber(77),LingoNumber(10),LingoNumber(3)))                                if LingoGlobal.ToBool(flp):                                     rct = self._movieScript.vertfliprect(rct)                                                                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,lr,rct,"SeedPodsGrad",gtrect,LingoNumber(0.5000))                                                    case "reeds":                            rnd = self._global.random(LingoNumber(4))                            rndsz = self._global.random(LingoNumber(30))                            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(60),LingoGlobal.op_sub(-LingoNumber(190),LingoGlobal.op_mul(rndsz,LingoNumber(2))),LingoNumber(60),LingoNumber(10)))                            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                            gtrect = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(120)),LingoNumber(1),LingoGlobal.op_mul(rnd,LingoNumber(120)),LingoNumber(201))                            if LingoGlobal.ToBool(flp):                                 rct = self._movieScript.vertfliprect(rct)                                                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("reedsGraf2").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                 self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(lr))).image.copypixels(self._global.member("reedsGrad2").image,rct,gtrect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                                    case "lavenders":                            rnd = self._global.random(LingoNumber(3))                            rndsz = self._global.random(LingoNumber(20))                            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(4),LingoGlobal.op_sub(-LingoNumber(103),LingoGlobal.op_mul(rndsz,LingoNumber(2))),LingoNumber(4),LingoNumber(3)))                            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                            gtrect = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(8)),LingoNumber(1),LingoGlobal.op_mul(rnd,LingoNumber(8)),LingoNumber(107))                            if LingoGlobal.ToBool(flp):                                 rct = self._movieScript.vertfliprect(rct)                                                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("lavendersGraf").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.colr, self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))):                                 self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,lr,rct,"lavendersGrad",gtrect,LingoNumber(0.5000))                            tmp_cal = LingoNumber(0)                            while tmp_cal < LingoNumber(2):                                 cal = tmp_cal                                tmp_rep = -LingoNumber(1)                                while tmp_rep < LingoNumber(1):                                     rep = tmp_rep                                    caler = LingoNumber(0)                                    if LingoGlobal.op_eq_b(cal, LingoNumber(2)):                                         caler = LingoNumber(1)                                                                            rand = self._global.random(LingoNumber(5))                                    getrct = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rand,LingoNumber(1)),LingoNumber(10)),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoNumber(10),caler)),LingoGlobal.op_mul(rand,LingoNumber(10)),LingoGlobal.op_add(LingoNumber(11),LingoGlobal.op_mul(LingoNumber(10),caler)))                                    nrect = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(5),LingoGlobal.op_sub(LingoGlobal.op_add(-LingoNumber(105),LingoGlobal.op_mul(cal,LingoNumber(10))),LingoGlobal.op_mul(rndsz,LingoNumber(2))),LingoNumber(5),LingoGlobal.op_sub(LingoGlobal.op_add(-LingoNumber(95),LingoGlobal.op_mul(cal,LingoNumber(10))),LingoGlobal.op_mul(rndsz,LingoNumber(2)))))                                    newlr = self._movieScript.restrict(LingoGlobal.op_add(lr,rep),LingoNumber(0),LingoNumber(29))                                    self._global.member(LingoGlobal.concat("layer",self._global.str(newlr))).image.copypixels(self._global.member("lavendersFlowers").image,nrect,getrct,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                                    if LingoGlobal.op_ne_b(self._movieScript.colr, self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))):                                         self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(newlr))).image.copypixels(self._global.member("lavendersFlowers").image,nrect,getrct,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                    tmp_rep = rep                                    tmp_rep += LingoNumber(1)                                                                    tmp_cal = cal                                tmp_cal += LingoNumber(1)                                                                                    case "circuit plants":                            if self._global.random(LingoNumber(300)) > self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2]:                                 rnd = self._global.random(self._movieScript.restrict(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoNumber(20),LingoGlobal.op_add(LingoGlobal.op_sub(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(11)),self._global.random(LingoNumber(21)))),LingoNumber(0.0100)).integer,LingoNumber(1),LingoNumber(16)))                                sz = LingoGlobal.op_add(LingoNumber(0.1500),LingoGlobal.op_mul(LingoNumber(0.8500),LingoGlobal.power(LingoGlobal.op_mul(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(0.0100)),LingoNumber(0.8500))))                                rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_mul(-LingoNumber(20),sz),LingoGlobal.op_mul(-LingoNumber(95),sz),LingoGlobal.op_mul(LingoNumber(20),sz),LingoNumber(5)))                                flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                                gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(40)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(40)),LingoNumber(100)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))                                if LingoGlobal.ToBool(flp):                                     rct = self._movieScript.vertfliprect(rct)                                                                    self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("CircuitPlantGraf").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                                if sz < LingoNumber(0.7500):                                     self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("CircuitPlantGraf").image,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0))),gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                                    self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("CircuitPlantGraf").image,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1))),gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))                                if LingoGlobal.op_ne_b(self._movieScript.colr, self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))):                                     rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_mul(-LingoNumber(20),sz),LingoGlobal.op_mul(-LingoNumber(95),sz),LingoGlobal.op_mul(LingoNumber(20),sz),LingoNumber(5)))                                    if LingoGlobal.ToBool(flp):                                         rct = self._movieScript.vertfliprect(rct)                                                                            self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,lr,rct,"CircuitPlantGrad",gtrect,LingoNumber(0.5000))                                                                                    case "feather plants":                            if self._global.random(LingoNumber(300)) > self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2]:                                 leandir = LingoNumber(0)                                if q2 > LingoNumber(1):                                     if (LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_sub(q2,LingoNumber(1)),c2),layer), LingoNumber(0)) and LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_sub(q2,LingoNumber(1)),LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(1))):                                         leandir = LingoGlobal.op_add(leandir,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoGlobal.op_sub(q2,LingoNumber(1))][c2])                                                                            elif LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_sub(q2,LingoNumber(1)),c2),layer), LingoNumber(1)):                                         leandir = LingoGlobal.op_sub(leandir,LingoNumber(90))                                                                                                            if q2 < LingoGlobal.op_sub(self._movieScript.gLOprops.size.loch,LingoNumber(1)):                                     if (LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_add(q2,LingoNumber(1)),c2),layer), LingoNumber(0)) and LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_add(q2,LingoNumber(1)),LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(1))):                                         leandir = LingoGlobal.op_sub(leandir,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoGlobal.op_add(q2,LingoNumber(1))][c2])                                                                            elif LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_add(q2,LingoNumber(1)),c2),layer), LingoNumber(1)):                                         leandir = LingoGlobal.op_add(leandir,LingoNumber(90))                                                                                                            rnd = self._global.random(self._movieScript.restrict(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoNumber(20),LingoGlobal.op_add(LingoGlobal.op_sub(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(11)),self._global.random(LingoNumber(21)))),LingoNumber(0.0100)).integer,LingoNumber(1),LingoNumber(16)))                                sz = LingoNumber(1)                                rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(LingoGlobal.op_mul(-LingoNumber(20),sz),LingoGlobal.op_mul(-LingoNumber(90),sz),LingoGlobal.op_mul(LingoNumber(20),sz),LingoGlobal.op_mul(LingoNumber(100),sz)))                                gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(40)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(40)),LingoNumber(190)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))                                rct = self._movieScript.rotatetoquad(rct,LingoGlobal.op_add(LingoGlobal.op_mul(LingoNumber(65.0000),LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_sub(leandir,LingoNumber(11)),self._global.random(LingoNumber(21))),LingoNumber(100.0000))),LingoNumber(0.1000)))                                checkforsolid = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_add(rct[LingoNumber(1)],rct[LingoNumber(2)]),rct[LingoNumber(3)]),rct[LingoNumber(4)]),LingoNumber(4.0000))                                if LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.getpixel(checkforsolid.loch,checkforsolid.locv), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     if LingoGlobal.op_add(LingoGlobal.op_sub(leandir,LingoNumber(11)),self._global.random(LingoNumber(21))) > LingoNumber(0):                                         rct = self._movieScript.flipquadh(rct)                                                                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("FeatherPlantGraf").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                                    if LingoGlobal.op_ne_b(self._movieScript.colr, self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))):                                         self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,lr,rct,"FeatherPlantGrad",gtrect,LingoNumber(0.5000))                                                                                                                        case "horse tails":                            rnd = self._movieScript.restrict(self._global.random(LingoGlobal.op_add(LingoNumber(3),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoNumber(20),self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2]),LingoNumber(0.0100)).integer)),LingoNumber(1),LingoNumber(14))                            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(10),-LingoNumber(48),LingoNumber(10),LingoNumber(2)))                            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                            gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(20)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(20)),LingoNumber(50)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))                            if LingoGlobal.ToBool(flp):                                 rct = self._movieScript.vertfliprect(rct)                                                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("HorseTailGraf").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.colr, self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))):                                 rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(10),-LingoNumber(48),LingoNumber(10),LingoNumber(2)))                                if LingoGlobal.ToBool(flp):                                     rct = self._movieScript.vertfliprect(rct)                                                                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,lr,rct,"HorseTailGrad",gtrect,LingoNumber(0.5000))                                                    case "cacti":                            tmp_rep = LingoNumber(1)                            while tmp_rep < self._global.random(self._global.random(LingoNumber(3))):                                 rep = tmp_rep                                sz = LingoGlobal.op_add(LingoNumber(0.5000),LingoGlobal.op_mul(self._global.random(LingoGlobal.op_mul(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(0.7000))),LingoNumber(0.0100)))                                rotat = LingoGlobal.op_add(-LingoNumber(45),self._global.random(LingoNumber(90)))                                if (LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(LingoGlobal.op_sub(q2,LingoNumber(1)),LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(0)) or LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(3))):                                     rotat = LingoGlobal.op_sub(LingoGlobal.op_sub(rotat,LingoNumber(10)),self._global.random(LingoNumber(30)))                                                                    if (LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(LingoGlobal.op_add(q2,LingoNumber(1)),LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(0)) or LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(2))):                                     rotat = LingoGlobal.op_add(LingoGlobal.op_add(rotat,LingoNumber(10)),self._global.random(LingoNumber(30)))                                                                    tppnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(self._movieScript.degtovec(rotat),LingoNumber(15)),sz))                                rct = self._movieScript.rotatetoquad(LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_add(pnt,tppnt),LingoNumber(0.5000)),LingoGlobal.op_mul(LingoGlobal.op_add(pnt,tppnt),LingoNumber(0.5000))),LingoGlobal.rect(LingoGlobal.op_mul(-LingoNumber(4),sz),LingoGlobal.op_mul(-LingoNumber(7),sz),LingoGlobal.op_mul(LingoNumber(4),sz),LingoGlobal.op_mul(LingoNumber(8),sz))),self._movieScript.lookatpoint(pnt,tppnt))                                self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("bigCircle").image,rct,self._global.member("bigCircle").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                                if LingoGlobal.op_ne_b(self._movieScript.colr, self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))):                                     rct = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(tppnt,tppnt),LingoGlobal.rect(LingoGlobal.op_mul(-LingoNumber(9),sz),LingoGlobal.op_mul(-LingoNumber(6),sz),LingoGlobal.op_mul(LingoNumber(9),sz),LingoGlobal.op_mul(LingoNumber(13),sz))),LingoGlobal.rect(-LingoNumber(3),-LingoNumber(3),LingoNumber(3),LingoNumber(3)))                                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,lr,rct,"softBrush1",self._global.member("softBrush1").image.rect,LingoNumber(0.5000))                                tmp_rep = rep                                tmp_rep += LingoNumber(1)                                                                                    case "rubble":                            rct = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(3),-LingoNumber(3),LingoNumber(3),LingoNumber(3))),LingoGlobal.rect(-self._global.random(LingoNumber(3)),-self._global.random(LingoNumber(3)),self._global.random(LingoNumber(3)),self._global.random(LingoNumber(3))))                            rct = self._movieScript.rotatetoquad(rct,self._global.random(LingoNumber(360)))                            rubbl = self._global.random(LingoNumber(4))                            tmp_rep = LingoNumber(1)                            while tmp_rep < LingoNumber(4):                                 rep = tmp_rep                                if LingoGlobal.op_sub(LingoGlobal.op_add(lr,rep),LingoNumber(1)) > LingoNumber(29):                                     break                                                                    else:                                    self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_sub(LingoGlobal.op_add(lr,rep),LingoNumber(1))))).image.copypixels(self._global.member(LingoGlobal.concat("rubbleGraf",self._global.str(rubbl))).image,rct,self._global.member(LingoGlobal.concat("rubbleGraf",self._global.str(rubbl))).image.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),LingoSymbol("ink"), LingoNumber(36)))                                tmp_rep = rep                                tmp_rep += LingoNumber(1)                                                                                    case "colored rubble":                            rct = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(3),-LingoNumber(3),LingoNumber(3),LingoNumber(3))),LingoGlobal.rect(-self._global.random(LingoNumber(3)),-self._global.random(LingoNumber(3)),self._global.random(LingoNumber(3)),self._global.random(LingoNumber(3))))                            rct = self._movieScript.rotatetoquad(rct,self._global.random(LingoNumber(360)))                            rubbl = self._global.random(LingoNumber(4))                            tmp_rep = LingoNumber(1)                            while tmp_rep < LingoNumber(4):                                 rep = tmp_rep                                if LingoGlobal.op_sub(LingoGlobal.op_add(lr,rep),LingoNumber(1)) > LingoNumber(29):                                     break                                                                    else:                                    self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_sub(LingoGlobal.op_add(lr,rep),LingoNumber(1))))).image.copypixels(self._global.member(LingoGlobal.concat("rubbleGraf",self._global.str(rubbl))).image,rct,self._global.member(LingoGlobal.concat("rubbleGraf",self._global.str(rubbl))).image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colrInd,LingoSymbol("ink"), LingoNumber(36)))
                                    if LingoGlobal.op_ne_b(self._movieScript.gdIndLayer, "C"):                                         self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdIndLayer,self._global.str(LingoGlobal.op_sub(LingoGlobal.op_add(lr,rep),LingoNumber(1))))).image.copypixels(self._global.member(LingoGlobal.concat("rubbleGraf",self._global.str(rubbl))).image,rct,self._global.member(LingoGlobal.concat("rubbleGraf",self._global.str(rubbl))).image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                                                    tmp_rep = rep                                tmp_rep += LingoNumber(1)                                                                                    case "rain moss":                            pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(self._movieScript.degtovec(self._global.random(LingoNumber(360))),self._global.random(self._global.random(LingoNumber(100)))),LingoNumber(0.0400)))                            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(12),-LingoNumber(12),LingoNumber(13),LingoNumber(13)))                            rct = self._movieScript.rotatetoquad(rct,LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(self._global.random(LingoNumber(4)),LingoNumber(1)),LingoNumber(90)),LingoNumber(1)))                            gtrect = self._global.random(LingoNumber(4))                            gtrect = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(gtrect,LingoNumber(1)),LingoNumber(25)),LingoNumber(0),LingoGlobal.op_mul(gtrect,LingoNumber(25)),LingoNumber(25))                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("rainMossGraf").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.colr, self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))):                                 tppnt = LingoGlobal.op_add(self._movieScript.depthpnt(pnt,LingoGlobal.op_sub(lr,LingoNumber(5))),LingoGlobal.op_mul(self._movieScript.degtovec(self._global.random(LingoNumber(360))),self._global.random(LingoNumber(6))))                                rct = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(tppnt,tppnt),LingoGlobal.rect(-LingoNumber(20),-LingoNumber(20),LingoNumber(20),LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),-LingoNumber(15),-LingoNumber(15)))                                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,lr,rct,"softBrush1",self._global.member("softBrush1").image.rect,LingoNumber(0.5000))                                                                        tmp_cntr = cntr                    tmp_cntr += LingoNumber(1)                                                                return None            def givegroundpos(self, q, c, l):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))        pnt = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoNumber(10)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][l][LingoNumber(1)], LingoNumber(3)):             pnt.locv = LingoGlobal.op_sub(LingoGlobal.op_sub(pnt.locv,LingoGlobal.op_sub(pnt.loch,mdpnt.loch)),LingoNumber(5))                    elif LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][l][LingoNumber(1)], LingoNumber(2)):             pnt.locv = LingoGlobal.op_sub(LingoGlobal.op_sub(pnt.locv,LingoGlobal.op_sub(mdpnt.loch,pnt.loch)),LingoNumber(5))                    return pnt                    def applyhugeflower(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("flowerhead").image,LingoGlobal.rect(LingoGlobal.op_sub(pnt.loch,LingoNumber(3)),LingoGlobal.op_sub(pnt.locv,LingoNumber(3)),LingoGlobal.op_add(pnt.loch,LingoNumber(3)),LingoGlobal.op_add(mdpnt.locv,LingoNumber(3))),self._global.member("flowerhead").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
            h = pnt.locv            while LingoGlobal.ToBool(LingoGlobal.op_lt(h,LingoNumber(30000))):                 h = LingoGlobal.op_add(h,LingoNumber(1))                pnt.loch = LingoGlobal.op_add(LingoGlobal.op_sub(pnt.loch,LingoNumber(2)),self._global.random(LingoNumber(3)))                self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoGlobal.op_sub(pnt.loch,LingoNumber(1)),h,LingoGlobal.op_add(pnt.loch,LingoNumber(2)),LingoGlobal.op_add(h,LingoNumber(2))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr))
                tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(LingoGlobal.point(pnt.loch,h)),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                     break                                    elif LingoGlobal.op_eq_b(self._movieScript.solidafamv(tlpos,lr), LingoNumber(1)):                     break                                                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,LingoGlobal.rect(LingoGlobal.op_sub(headpos.loch,LingoNumber(37)),LingoGlobal.op_sub(headpos.locv,LingoNumber(37)),LingoGlobal.op_add(headpos.loch,LingoNumber(37)),LingoGlobal.op_add(h,LingoNumber(10))),"hugeFlowerMaskMask",self._global.member("hugeFlowerMask").image.rect,LingoNumber(0.8000))                return None            def applyminigrowers(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            h = pnt.locv            while LingoGlobal.ToBool(LingoGlobal.op_lt(h,LingoNumber(30000))):                 h = LingoGlobal.op_add(h,LingoNumber(1))                pnt.loch = LingoGlobal.op_add(LingoGlobal.op_sub(pnt.loch,LingoNumber(2)),self._global.random(LingoNumber(3)))                self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoGlobal.op_sub(pnt.loch,LingoNumber(1)),h,pnt.loch,LingoGlobal.op_add(h,LingoNumber(2))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr))
                tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(LingoGlobal.point(pnt.loch,h)),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                     break                                    elif LingoGlobal.op_eq_b(self._movieScript.solidafamv(tlpos,lr), LingoNumber(1)):                     break                                                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,LingoGlobal.rect(LingoGlobal.op_sub(headpos.loch,LingoNumber(37)),LingoGlobal.op_sub(headpos.locv,LingoNumber(37)),LingoGlobal.op_add(headpos.loch,LingoNumber(37)),LingoGlobal.op_add(h,LingoNumber(10))),"hugeFlowerMaskMask",self._global.member("hugeFlowerMask").image.rect,LingoNumber(0.8000))                return None            def applysidekelp(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = self._global.random(LingoNumber(29))                            case "1":                d = self._global.random(LingoNumber(9))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = self._global.random(LingoNumber(19))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        blnd = LingoNumber(1)        blnd2 = LingoNumber(1)        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            lastdir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(101)),self._global.random(LingoNumber(201)))            points = LingoList(pnt)            while LingoGlobal.ToBool(LingoGlobal.op_lt(pnt.locv,LingoNumber(30000))):                 dir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(31)),self._global.random(LingoNumber(61)))                dir = self._movieScript.lerp(lastdir,dir,LingoNumber(0.7500))                lastpnt = pnt                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoNumber(30.0000)))                lastdir = dir                rctr = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                rct = LingoGlobal.op_add(LingoGlobal.rect(rctr,rctr),LingoGlobal.rect(-LingoNumber(30),-LingoNumber(25),LingoNumber(30),LingoNumber(25)))                qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                points.add(pnt)
                var = self._global.random(LingoNumber(13))                rectdk = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(var,LingoNumber(1)),LingoNumber(40)),LingoNumber(1),LingoGlobal.op_mul(var,LingoNumber(40)),LingoNumber(51))                self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("sidekelpgraf").image,qd,rectdk,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"sidekelpgrad",rectdk,LingoNumber(0.5000),blnd)
                blnd = LingoGlobal.op_mul(blnd,LingoNumber(0.8500))                tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                     break                                    elif LingoGlobal.op_eq_b(self._movieScript.solidafamv(tlpos,lr), LingoNumber(1)):                     break                                                if blnd2 > LingoNumber(0):                 rctr = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                rct = LingoGlobal.op_add(LingoGlobal.rect(rctr,rctr),LingoGlobal.rect(-LingoNumber(12),-LingoNumber(36),LingoNumber(12),LingoNumber(36)))                qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"softBrush1",self._global.member("softBrush1").image.rect,LingoNumber(0.5000),blnd2)
                blnd2 = LingoGlobal.op_sub(blnd2,LingoNumber(0.1500))                                            return None            def applyflipsidekelp(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = self._global.random(LingoNumber(29))                            case "1":                d = self._global.random(LingoNumber(9))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = self._global.random(LingoNumber(19))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        blnd = LingoNumber(1)        blnd2 = LingoNumber(1)        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            lastdir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(101)),self._global.random(LingoNumber(201)))            points = LingoList(pnt)            while LingoGlobal.ToBool(LingoGlobal.op_lt(pnt.locv,LingoNumber(30000))):                 dir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(31)),self._global.random(LingoNumber(61)))                dir = self._movieScript.lerp(lastdir,dir,LingoNumber(0.7500))                lastpnt = pnt                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoNumber(30.0000)))                lastdir = dir                rctr = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                rct = LingoGlobal.op_add(LingoGlobal.rect(rctr,rctr),LingoGlobal.rect(-LingoNumber(30),-LingoNumber(25),LingoNumber(30),LingoNumber(25)))                qd = self._movieScript.flipquadh(self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt)))                points.add(pnt)
                var = self._global.random(LingoNumber(13))                rectdk = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(var,LingoNumber(1)),LingoNumber(40)),LingoNumber(1),LingoGlobal.op_mul(var,LingoNumber(40)),LingoNumber(51))                self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("sidekelpgraf").image,qd,rectdk,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"sidekelpgrad",rectdk,LingoNumber(0.5000),blnd)
                blnd = LingoGlobal.op_mul(blnd,LingoNumber(0.8500))                tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                     break                                    elif LingoGlobal.op_eq_b(self._movieScript.solidafamv(tlpos,lr), LingoNumber(1)):                     break                                                if blnd2 > LingoNumber(0):                 rctr = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                rct = LingoGlobal.op_add(LingoGlobal.rect(rctr,rctr),LingoGlobal.rect(-LingoNumber(12),-LingoNumber(36),LingoNumber(12),LingoNumber(36)))                qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"softBrush1",self._global.member("softBrush1").image.rect,LingoNumber(0.5000),blnd2)
                blnd2 = LingoGlobal.op_sub(blnd2,LingoNumber(0.1500))                                            return None            def applymixkelp(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = self._global.random(LingoNumber(29))                            case "1":                d = self._global.random(LingoNumber(9))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = self._global.random(LingoNumber(19))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        blnd = LingoNumber(1)        blnd2 = LingoNumber(1)        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            lastdir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(101)),self._global.random(LingoNumber(201)))            points = LingoList(pnt)            while LingoGlobal.ToBool(LingoGlobal.op_lt(pnt.locv,LingoNumber(30000))):                 dir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(31)),self._global.random(LingoNumber(61)))                dir = self._movieScript.lerp(lastdir,dir,LingoNumber(0.7500))                lastpnt = pnt                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoNumber(30.0000)))                lastdir = dir                rctr = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                rct = LingoGlobal.op_add(LingoGlobal.rect(rctr,rctr),LingoGlobal.rect(-LingoNumber(30),-LingoNumber(25),LingoNumber(30),LingoNumber(25)))                qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                     qd = self._movieScript.flipquadh(qd)                                    points.add(pnt)
                var = self._global.random(LingoNumber(13))                rectdk = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(var,LingoNumber(1)),LingoNumber(60)),LingoNumber(1),LingoGlobal.op_mul(var,LingoNumber(60)),LingoNumber(51))                self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("fsidekelpgraf").image,qd,rectdk,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"fsidekelpgrad",rectdk,LingoNumber(0.5000),blnd)
                blnd = LingoGlobal.op_mul(blnd,LingoNumber(0.8500))                tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                     break                                    elif LingoGlobal.op_eq_b(self._movieScript.solidafamv(tlpos,lr), LingoNumber(1)):                     break                                                if blnd2 > LingoNumber(0):                 rctr = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                rct = LingoGlobal.op_add(LingoGlobal.rect(rctr,rctr),LingoGlobal.rect(-LingoNumber(12),-LingoNumber(36),LingoNumber(12),LingoNumber(36)))                qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"softBrush1",self._global.member("softBrush1").image.rect,LingoNumber(0.5000),blnd2)
                blnd2 = LingoGlobal.op_sub(blnd2,LingoNumber(0.1500))                                            return None            def applybubblegrower(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = self._global.random(LingoNumber(29))                            case "1":                d = self._global.random(LingoNumber(9))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = self._global.random(LingoNumber(19))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            lastdir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(61)),self._global.random(LingoNumber(121)))            blnd = LingoNumber(1)            blnd2 = LingoNumber(1)            wdth = LingoNumber(0.5000)            searchbase = LingoNumber(50)            while LingoGlobal.ToBool(LingoGlobal.op_lt(pnt.locv,LingoNumber(30000))):                 dir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(61)),self._global.random(LingoNumber(121)))                dir = self._movieScript.lerp(lastdir,dir,LingoNumber(0.3500))                lastpnt = pnt                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoNumber(30.0000)))                if searchbase > LingoNumber(0):                     movedir = LingoGlobal.point(LingoNumber(0),LingoNumber(0))                    for tmp_tst in LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(-LingoNumber(1),LingoNumber(1))):                         tst = tmp_tst                        tstpnt = LingoGlobal.op_add(LingoGlobal.op_add(self._movieScript.givegridpos(lastpnt),self._movieScript.gRenderCameraTilePos),tst)                        if (((tstpnt.loch > LingoNumber(0) and tstpnt.loch < LingoGlobal.op_sub(self._movieScript.gLOprops.size.loch,LingoNumber(1))) and tstpnt.locv > LingoNumber(0)) and tstpnt.locv < LingoGlobal.op_sub(self._movieScript.gLOprops.size.locv,LingoNumber(1))):                             movedir = LingoGlobal.op_add(movedir,LingoGlobal.op_mul(tst,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[tstpnt.loch][tstpnt.locv]))                                                                        pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_div(movedir,LingoNumber(100.0000)),searchbase))                    searchbase = LingoGlobal.op_sub(searchbase,LingoNumber(1.5000))                    pnt = LingoGlobal.op_add(lastpnt,self._movieScript.movetopoint(lastpnt,pnt,LingoNumber(30.0000)))                                    lastdir = dir                rctr = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                rct = LingoGlobal.op_add(LingoGlobal.rect(rctr,rctr),LingoGlobal.rect(LingoGlobal.op_mul(-LingoNumber(10),wdth),-LingoNumber(25),LingoGlobal.op_mul(LingoNumber(10),wdth),LingoNumber(25)))                qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                     qd = self._movieScript.flipquadh(qd)                                    wdth = LingoGlobal.op_sub(LingoGlobal.op_add(wdth,LingoGlobal.op_div(LingoGlobal.op_div(self._global.random(LingoNumber(2000)),LingoNumber(400.0000)),LingoNumber(2.5000))),LingoNumber(0.5000))                if wdth > LingoNumber(1.7000):                     wdth = LingoNumber(1.7000)                                    elif wdth < LingoNumber(0.3000):                     wdth = LingoNumber(0.3000)                                    var = self._global.random(LingoNumber(13))                rectdk = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(var,LingoNumber(1)),LingoNumber(20)),LingoNumber(1),LingoGlobal.op_mul(var,LingoNumber(20)),LingoGlobal.op_add(LingoNumber(50),LingoNumber(1)))                self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("bubblegrowergraf").image,qd,rectdk,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"bubblegrowergrad",rectdk,LingoNumber(0.5000),blnd)
                blnd = LingoGlobal.op_mul(blnd,LingoNumber(0.9000))                if blnd2 > LingoNumber(0):                     rctr = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                    rct = LingoGlobal.op_add(LingoGlobal.rect(rctr,rctr),LingoGlobal.rect(-LingoNumber(12),-LingoNumber(36),LingoNumber(12),LingoNumber(36)))                    qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"softBrush1",self._global.member("softBrush1").image.rect,LingoNumber(0.5000),blnd2)
                    blnd2 = LingoGlobal.op_sub(blnd2,LingoNumber(0.4000))                                    tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                     break                                    elif LingoGlobal.op_eq_b(self._movieScript.solidafamv(tlpos,lr), LingoNumber(1)):                     break                                                                return None            def applyarmgrower(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = self._global.random(LingoNumber(29))                            case "1":                d = self._global.random(LingoNumber(9))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = self._global.random(LingoNumber(19))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = self._global.random(LingoNumber(29))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            lastdir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(101)),self._global.random(LingoNumber(201)))            points = LingoList(pnt)            while LingoGlobal.ToBool(LingoGlobal.op_lt(pnt.locv,LingoNumber(30000))):                 dir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(31)),self._global.random(LingoNumber(61)))                dir = self._movieScript.lerp(lastdir,dir,LingoNumber(0.7500))                lastpnt = pnt                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoNumber(30.0000)))                lastdir = dir                rct = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                rct = LingoGlobal.rect(rct,rct)                rct = LingoGlobal.op_add(rct,LingoGlobal.rect(-LingoNumber(10),-LingoNumber(25),LingoNumber(10),LingoNumber(25)))                qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                     qd = self._movieScript.flipquadh(qd)                                    points.add(pnt)
                var = self._global.random(LingoNumber(13))                self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("ArmGrowerGraf").image,qd,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(var,LingoNumber(1)),LingoNumber(20)),LingoNumber(1),LingoGlobal.op_mul(var,LingoNumber(20)),LingoGlobal.op_add(LingoNumber(50),LingoNumber(1))),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                     break                                    elif LingoGlobal.op_eq_b(self._movieScript.solidafamv(tlpos,lr), LingoNumber(1)):                     break                                                if points.count > LingoNumber(2):                 tmp_p = LingoNumber(1)                while tmp_p < LingoGlobal.op_sub(points.count,LingoNumber(1)):                     p = tmp_p                    rct = LingoGlobal.op_div(LingoGlobal.op_add(points[p],points[LingoGlobal.op_add(p,LingoNumber(1))]),LingoNumber(2.0000))                    rct = LingoGlobal.rect(rct,rct)                    rct = LingoGlobal.op_add(rct,LingoGlobal.rect(-LingoNumber(12),-LingoNumber(36),LingoNumber(12),LingoNumber(36)))                    qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(points[p],points[LingoGlobal.op_add(p,LingoNumber(1))]))                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"softBrush1",self._global.member("softBrush1").image.rect,LingoNumber(0.5000),LingoGlobal.power(LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_sub(points.count,p.float),LingoNumber(1)),points.count.float),LingoNumber(1.5000)))
                    tmp_p = p                    tmp_p += LingoNumber(1)                                                                return None            def applythorngrower(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = self._global.random(LingoNumber(29))                            case "1":                d = self._global.random(LingoNumber(9))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = self._global.random(LingoNumber(19))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = self._global.random(LingoNumber(29))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            lastdir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(61)),self._global.random(LingoNumber(121)))            blnd = LingoNumber(1)            blnd2 = LingoNumber(1)            wdth = LingoNumber(0.5000)            searchbase = LingoNumber(50)            while LingoGlobal.ToBool(LingoGlobal.op_lt(pnt.locv,LingoNumber(30000))):                 dir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(61)),self._global.random(LingoNumber(121)))                dir = self._movieScript.lerp(lastdir,dir,LingoNumber(0.3500))                lastpnt = pnt                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoNumber(30.0000)))                if searchbase > LingoNumber(0):                     movedir = LingoGlobal.point(LingoNumber(0),LingoNumber(0))                    for tmp_tst in LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(-LingoNumber(1),LingoNumber(1))):                         tst = tmp_tst                        tstpnt = LingoGlobal.op_add(LingoGlobal.op_add(self._movieScript.givegridpos(lastpnt),self._movieScript.gRenderCameraTilePos),tst)                        if (((tstpnt.loch > LingoNumber(0) and tstpnt.loch < LingoGlobal.op_sub(self._movieScript.gLOprops.size.loch,LingoNumber(1))) and tstpnt.locv > LingoNumber(0)) and tstpnt.locv < LingoGlobal.op_sub(self._movieScript.gLOprops.size.locv,LingoNumber(1))):                             movedir = LingoGlobal.op_add(movedir,LingoGlobal.op_mul(tst,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[tstpnt.loch][tstpnt.locv]))                                                                        pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_div(movedir,LingoNumber(100.0000)),searchbase))                    searchbase = LingoGlobal.op_sub(searchbase,LingoNumber(1.5000))                    pnt = LingoGlobal.op_add(lastpnt,self._movieScript.movetopoint(lastpnt,pnt,LingoNumber(30.0000)))                                    lastdir = dir                rct = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                rct = LingoGlobal.rect(rct,rct)                rct = LingoGlobal.op_add(rct,LingoGlobal.rect(LingoGlobal.op_mul(-LingoNumber(10),wdth),-LingoNumber(25),LingoGlobal.op_mul(LingoNumber(10),wdth),LingoNumber(25)))                qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                     qd = self._movieScript.flipquadh(qd)                                    wdth = LingoGlobal.op_add(wdth,LingoGlobal.op_div(LingoGlobal.op_div(self._global.random(LingoNumber(1000)),LingoNumber(1000.0000)),LingoNumber(5.0000)))                if wdth > LingoNumber(1):                     wdth = LingoNumber(1)                                    var = self._global.random(LingoNumber(13))                self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("thornBushGraf").image,qd,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(var,LingoNumber(1)),LingoNumber(20)),LingoNumber(1),LingoGlobal.op_mul(var,LingoNumber(20)),LingoGlobal.op_add(LingoNumber(50),LingoNumber(1))),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"thornBushGrad",LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(var,LingoNumber(1)),LingoNumber(20)),LingoNumber(1),LingoGlobal.op_mul(var,LingoNumber(20)),LingoGlobal.op_add(LingoNumber(50),LingoNumber(1))),LingoNumber(0.5000),blnd)
                blnd = LingoGlobal.op_mul(blnd,LingoNumber(0.8500))                if blnd2 > LingoNumber(0):                     rct = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                    rct = LingoGlobal.rect(rct,rct)                    rct = LingoGlobal.op_add(rct,LingoGlobal.rect(-LingoNumber(12),-LingoNumber(36),LingoNumber(12),LingoNumber(36)))                    qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"softBrush1",self._global.member("softBrush1").image.rect,LingoNumber(0.5000),blnd2)
                    blnd2 = LingoGlobal.op_sub(blnd2,LingoNumber(0.1500))                                    tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                     break                                    elif LingoGlobal.op_eq_b(self._movieScript.solidafamv(tlpos,lr), LingoNumber(1)):                     break                                                                return None            def applyspinets(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = self._global.random(LingoNumber(29))                            case "1":                d = self._global.random(LingoNumber(9))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = self._global.random(LingoNumber(19))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = self._global.random(LingoNumber(29))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            lastdir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(61)),self._global.random(LingoNumber(121)))            blnd = LingoNumber(1)            blnd2 = LingoNumber(1)            wdth = LingoNumber(0.5000)            searchbase = LingoNumber(50)            while LingoGlobal.ToBool(LingoGlobal.op_lt(pnt.locv,LingoNumber(30000))):                 dir = LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(61)),self._global.random(LingoNumber(121)))                dir = self._movieScript.lerp(lastdir,dir,LingoNumber(0.3500))                lastpnt = pnt                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoNumber(30.0000)))                if searchbase > LingoNumber(0):                     movedir = LingoGlobal.point(LingoNumber(0),LingoNumber(0))                    for tmp_tst in LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(-LingoNumber(1),LingoNumber(1))):                         tst = tmp_tst                        tstpnt = LingoGlobal.op_add(LingoGlobal.op_add(self._movieScript.givegridpos(lastpnt),self._movieScript.gRenderCameraTilePos),tst)                        if (((tstpnt.loch > LingoNumber(0) and tstpnt.loch < LingoGlobal.op_sub(self._movieScript.gLOprops.size.loch,LingoNumber(1))) and tstpnt.locv > LingoNumber(0)) and tstpnt.locv < LingoGlobal.op_sub(self._movieScript.gLOprops.size.locv,LingoNumber(1))):                             movedir = LingoGlobal.op_add(movedir,LingoGlobal.op_mul(tst,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[tstpnt.loch][tstpnt.locv]))                                                                        pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_div(movedir,LingoNumber(100.0000)),searchbase))                    searchbase = LingoGlobal.op_sub(searchbase,LingoNumber(1.5000))                    pnt = LingoGlobal.op_add(lastpnt,self._movieScript.movetopoint(lastpnt,pnt,LingoNumber(30.0000)))                                    lastdir = dir                rct = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                rct = LingoGlobal.rect(rct,rct)                rct = LingoGlobal.op_add(rct,LingoGlobal.rect(LingoGlobal.op_mul(-LingoNumber(10),wdth),-LingoNumber(25),LingoGlobal.op_mul(LingoNumber(10),wdth),LingoNumber(25)))                qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                     qd = self._movieScript.flipquadh(qd)                                    wdth = LingoGlobal.op_add(wdth,LingoGlobal.op_div(LingoGlobal.op_div(self._global.random(LingoNumber(1000)),LingoNumber(1000.0000)),LingoNumber(5.0000)))                if wdth > LingoNumber(1):                     wdth = LingoNumber(1)                                    var = self._global.random(LingoNumber(13))                self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("spinetsGraf").image,qd,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(var,LingoNumber(1)),LingoNumber(20)),LingoNumber(1),LingoGlobal.op_mul(var,LingoNumber(20)),LingoGlobal.op_add(LingoNumber(50),LingoNumber(1))),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                self._movieScript.copypixelstorooteffectcolor(self._movieScript.gdLayer,d,qd,"spinetsGrad",LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(var,LingoNumber(1)),LingoNumber(20)),LingoNumber(1),LingoGlobal.op_mul(var,LingoNumber(20)),LingoGlobal.op_add(LingoNumber(50),LingoNumber(1))),LingoNumber(0.5000),blnd)
                blnd = LingoGlobal.op_mul(blnd,LingoNumber(0.8500))                if blnd2 > LingoNumber(0):                     rct = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                    rct = LingoGlobal.rect(rct,rct)                    rct = LingoGlobal.op_add(rct,LingoGlobal.rect(-LingoNumber(12),-LingoNumber(36),LingoNumber(12),LingoNumber(36)))                    qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,d,qd,"softBrush1",self._global.member("softBrush1").image.rect,LingoNumber(0.5000),blnd2)
                    blnd2 = LingoGlobal.op_sub(blnd2,LingoNumber(0.1500))                                    tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                     break                                    elif LingoGlobal.op_eq_b(self._movieScript.solidafamv(tlpos,lr), LingoNumber(1)):                     break                                                                return None            def applygarbagespiral(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        frontwall = LingoNumber(1)        backwall = LingoNumber(29)        match self._movieScript.lrSup.lower():             case "all":                d = self._global.random(LingoNumber(29))                frontwall = LingoNumber(1)                backwall = LingoNumber(29)                if d <= LingoNumber(5):                     backwall = LingoNumber(5)                                    elif d >= LingoNumber(6):                     frontwall = LingoNumber(6)                                                case "1":                d = self._global.random(LingoNumber(9))                if d <= LingoNumber(5):                     backwall = LingoNumber(5)                                    elif d >= LingoNumber(6):                     frontwall = LingoNumber(6)                                                case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = self._global.random(LingoNumber(19))                if d <= LingoNumber(5):                     backwall = LingoNumber(5)                                    elif d >= LingoNumber(6):                     frontwall = LingoNumber(6)                                                case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = self._global.random(LingoNumber(29))                frontwall = LingoNumber(1)                backwall = LingoNumber(29)                if d <= LingoNumber(5):                     backwall = LingoNumber(5)                                    elif d >= LingoNumber(6):                     frontwall = LingoNumber(6)                                                        lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            dir = self._global.random(LingoNumber(360))            diradd = LingoGlobal.op_add(LingoNumber(40),self._global.random(LingoNumber(20)))            if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                 diradd = -diradd                            grav = -LingoNumber(0.7000)            spiralwait = LingoGlobal.op_add(LingoNumber(15),self._global.random(LingoNumber(15)))            spiral = LingoNumber(1.0000)            searchbase = -LingoNumber(8)            losespiraltime = LingoGlobal.op_add(LingoNumber(60),self._global.random(LingoNumber(300)))            spiralfac = self._movieScript.lerp(LingoNumber(0.9500),LingoNumber(0.9100),LingoGlobal.op_mul(LingoGlobal.op_div(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(100.0000)),LingoGlobal.op_div(self._global.random(LingoNumber(1000)),LingoNumber(1000.0000))))            dpthspeed = LingoGlobal.op_div(self._movieScript.lerp(-LingoNumber(1.0000),LingoNumber(1.0000),LingoGlobal.op_div(self._global.random(LingoNumber(1000)),LingoNumber(1000.0000))),LingoNumber(20.0000))            conpoints = LingoList(LingoList(pnt,d,LingoNumber(0)))            points = LingoList(LingoList(pnt,d,LingoNumber(1)))            cntr = LingoNumber(0)            while LingoGlobal.ToBool(LingoGlobal.op_lt(pnt.locv,LingoNumber(30000))):                 cntr = LingoGlobal.op_add(cntr,LingoNumber(1))                dir = LingoGlobal.op_add(dir,diradd)                diradd = LingoGlobal.op_mul(diradd,spiralfac)                spiralfac = LingoGlobal.op_add(spiralfac,LingoNumber(0.0013))                if spiralfac > LingoNumber(0.9930):                     spiralfac = LingoNumber(0.9930)                                    lastpnt = pnt                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoNumber(3.0000)),LingoGlobal.power(spiral,LingoNumber(0.5000))))                spiralwait = LingoGlobal.op_sub(spiralwait,LingoNumber(1))                if spiralwait < LingoNumber(0):                     movedir = LingoGlobal.point(LingoNumber(0),LingoNumber(0))                    tmp_dst = LingoNumber(1)                    while tmp_dst < LingoNumber(7):                         dst = tmp_dst                        for tmp_tst in LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(-LingoNumber(1),LingoNumber(1))):                             tst = tmp_tst                            tstpnt = LingoGlobal.op_add(LingoGlobal.op_add(self._movieScript.givegridpos(lastpnt),self._movieScript.gRenderCameraTilePos),LingoGlobal.op_mul(tst,dst))                            if (((tstpnt.loch > LingoNumber(0) and tstpnt.loch < LingoGlobal.op_sub(self._movieScript.gLOprops.size.loch,LingoNumber(1))) and tstpnt.locv > LingoNumber(0)) and tstpnt.locv < LingoGlobal.op_sub(self._movieScript.gLOprops.size.locv,LingoNumber(1))):                                 movedir = LingoGlobal.op_add(movedir,LingoGlobal.op_mul(tst,self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[tstpnt.loch][tstpnt.locv]))                                                                                    tmp_dst = dst                        tmp_dst += LingoNumber(1)                                            pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_div(movedir,LingoNumber(4600.0000)),searchbase),LingoGlobal.op_sub(LingoNumber(1.0000),LingoGlobal.power(spiral,LingoNumber(0.5000)))))                    searchbase = LingoGlobal.op_add(searchbase,LingoNumber(0.1500))                    if searchbase > LingoNumber(12):                         searchbase = LingoNumber(12)                                            pnt.locv = LingoGlobal.op_add(pnt.locv,LingoGlobal.op_mul(grav,LingoGlobal.op_sub(LingoNumber(1.0000),LingoGlobal.power(spiral,LingoNumber(0.5000)))))                    grav = LingoGlobal.op_add(grav,LingoGlobal.op_mul(LingoNumber(0.2000),LingoGlobal.op_sub(LingoNumber(1.0000),LingoGlobal.power(spiral,LingoNumber(0.5000)))))                    spiral = LingoGlobal.op_sub(spiral,LingoGlobal.op_div(LingoNumber(1.0000),losespiraltime.float))                    if spiral < LingoNumber(0):                         spiral = LingoNumber(0)                        d = LingoGlobal.op_add(d,dpthspeed)                        if d < frontwall:                             d = frontwall                                                    elif d > backwall:                             d = backwall                                                                                        if self._global.random(LingoNumber(1000)) < LingoGlobal.op_mul(LingoGlobal.power(spiral,LingoNumber(4.0000)),LingoNumber(1000)):                     conpoints.add(LingoList(pnt,d,cntr))                pnt = LingoGlobal.op_add(lastpnt,self._movieScript.movetopoint(lastpnt,pnt,LingoNumber(3.0000)))                points.add(LingoList(pnt,d,spiral))
                tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                     break                                    elif LingoGlobal.op_eq_b(self._movieScript.solidafamv(tlpos,lr), LingoNumber(1)):                     break                                                tmp_cntr = LingoNumber(1)            while tmp_cntr < conpoints.count:                 cntr = tmp_cntr                a = conpoints[self._global.random(conpoints.count)][LingoNumber(1)]                blnd = LingoGlobal.op_sub(LingoNumber(1.0000),LingoGlobal.power(self._movieScript.restrict(LingoGlobal.op_div(conpoints[cntr][LingoNumber(3)].float,points.count),LingoNumber(0),LingoNumber(1)),LingoNumber(1.3000)))                used = self._movieScript.restrict(conpoints[cntr][LingoNumber(2)].integer,frontwall,backwall)                if LingoGlobal.op_eq_b(self._global.random(LingoNumber(10)), LingoNumber(1)):                     qd = LingoGlobal.rect(a.loch,a.locv,LingoGlobal.op_add(a.loch,LingoNumber(1)),LingoGlobal.op_add(a.locv,self._global.random(self._global.random(LingoNumber(100)))))                    self._global.member(LingoGlobal.concat("layer",self._global.str(points[LingoNumber(1)][LingoNumber(2)]))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,used,qd,"pxl",LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoNumber(0.5000),blnd)                else:                    b = conpoints[self._global.random(conpoints.count)][LingoNumber(1)]                    dir = self._movieScript.movetopoint(a,b,LingoNumber(1.0000))                    perp = LingoGlobal.op_mul(self._movieScript.givedirfor90degrtoline(-dir,dir),LingoNumber(0.5000))                    qd = LingoList(LingoGlobal.op_sub(a,perp),LingoGlobal.op_add(a,perp),LingoGlobal.op_add(b,perp),LingoGlobal.op_sub(b,perp))                    self._global.member(LingoGlobal.concat("layer",self._global.str(points[LingoNumber(1)][LingoNumber(2)]))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,used,qd,"pxl",LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoNumber(0.5000),blnd)                tmp_cntr = cntr                tmp_cntr += LingoNumber(1)                            lastpnt = points[LingoNumber(1)][LingoNumber(1)]            lastused = points[LingoNumber(1)][LingoNumber(2)]            tmp_q = LingoNumber(1)            while tmp_q < points.count:                 q = tmp_q                pnt = points[q][LingoNumber(1)]                rct = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                rct = LingoGlobal.rect(rct,rct)                rct = LingoGlobal.op_add(rct,LingoGlobal.rect(-LingoNumber(1),-LingoNumber(2),LingoNumber(1),LingoNumber(2)))                qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                used = self._movieScript.restrict(points[q][LingoNumber(2)].integer,frontwall,backwall)                blnd = LingoGlobal.op_sub(LingoNumber(1.0000),LingoGlobal.power(self._movieScript.restrict(LingoGlobal.op_div(q.float,points.count),LingoNumber(0),LingoNumber(1)),LingoNumber(1.3000)))                blnd = self._movieScript.lerp(blnd,LingoNumber(0.5000),points[q][LingoNumber(3)])                self._global.member(LingoGlobal.concat("layer",self._global.str(used))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,used,qd,"pxl",LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoNumber(0.5000),blnd)
                if LingoGlobal.op_ne_b(lastused, used):                     self._global.member(LingoGlobal.concat("layer",self._global.str(lastused))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,lastused,qd,"pxl",LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoNumber(0.5000),blnd)                lastused = used                lastpnt = pnt                tmp_q = q                tmp_q += LingoNumber(1)                                            return None            def applyroller(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        frontwall = LingoNumber(1)        backwall = LingoNumber(29)        match self._movieScript.lrSup.lower():             case "all":                d = self._global.random(LingoNumber(29))                frontwall = LingoNumber(1)                backwall = LingoNumber(29)                if d <= LingoNumber(5):                     backwall = LingoNumber(5)                                    elif d >= LingoNumber(6):                     frontwall = LingoNumber(6)                                                case "1":                d = self._global.random(LingoNumber(9))                if d <= LingoNumber(5):                     backwall = LingoNumber(5)                                    elif d >= LingoNumber(6):                     frontwall = LingoNumber(6)                                                case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = self._global.random(LingoNumber(19))                if d <= LingoNumber(5):                     backwall = LingoNumber(5)                                    elif d >= LingoNumber(6):                     frontwall = LingoNumber(6)                                                case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = self._global.random(LingoNumber(29))                frontwall = LingoNumber(1)                backwall = LingoNumber(29)                if d <= LingoNumber(5):                     backwall = LingoNumber(5)                                    elif d >= LingoNumber(6):                     frontwall = LingoNumber(6)                                                        lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            dir = self._global.random(LingoNumber(360))            diradd = LingoGlobal.op_mul(LingoGlobal.op_add(LingoNumber(10),self._global.random(LingoNumber(30))),LingoNumber(0.3000))            if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                 diradd = -diradd                            dspeed = LingoGlobal.op_div(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoNumber(100.0000))            lastused = d            grav = LingoNumber(0.7000)            points = LingoList(LingoList(pnt,d))            seedchance = LingoNumber(1.0000)            while LingoGlobal.ToBool(LingoGlobal.op_lt(pnt.locv,LingoNumber(30000))):                 dir = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_sub(dir,LingoNumber(11)),self._global.random(LingoNumber(21))),diradd)                dspeed = self._movieScript.restrict(LingoGlobal.op_add(dspeed,LingoGlobal.op_div(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoNumber(1000.0000))),-LingoNumber(0.1000),LingoNumber(0.1000))                d = LingoGlobal.op_add(d,dspeed)                if d < frontwall:                     d = frontwall                    dspeed = LingoGlobal.op_div(self._global.random(LingoNumber(10)),LingoNumber(100.0000))                                    elif d > backwall:                     d = backwall                    dspeed = LingoGlobal.op_div(-self._global.random(LingoNumber(10)),LingoNumber(100.0000))                                    lastpnt = pnt                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoNumber(5.0000)))                pnt.locv = LingoGlobal.op_add(pnt.locv,grav)                grav = LingoGlobal.op_add(grav,LingoNumber(0.0010))                rct = LingoGlobal.op_div(LingoGlobal.op_add(lastpnt,pnt),LingoNumber(2.0000))                rct = LingoGlobal.rect(rct,rct)                rct = LingoGlobal.op_add(rct,LingoGlobal.rect(-LingoNumber(1.5000),-LingoNumber(3.5000),LingoNumber(1.5000),LingoNumber(3.5000)))                qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt))                used = self._movieScript.restrict(d.integer,frontwall,backwall)                if seedchance > LingoNumber(0):                     tmp_a = LingoNumber(1)                    while tmp_a < LingoNumber(8):                         a = tmp_a                        if self._global.random(LingoNumber(1000)) < LingoGlobal.op_mul(LingoGlobal.power(seedchance,LingoNumber(1.5000)),LingoNumber(1000)):                             seedpos = LingoGlobal.op_add(LingoGlobal.op_add(pnt,self._movieScript.movetopoint(pnt,lastpnt,LingoGlobal.op_div(LingoGlobal.op_mul(self._movieScript.diag(pnt,lastpnt),self._global.random(LingoNumber(1000))).float,LingoNumber(1000.0000)))),LingoGlobal.op_mul(self._movieScript.degtovec(self._global.random(LingoNumber(360))),self._global.random(LingoNumber(3))))                            seedlr = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(used,LingoNumber(2)),self._global.random(LingoNumber(3))),frontwall,backwall)                            self._global.member(LingoGlobal.concat("layer",self._global.str(seedlr))).image.copypixels(self._global.member("rustDot").image,LingoGlobal.op_add(LingoGlobal.rect(seedpos,seedpos),LingoGlobal.rect(-LingoNumber(2),-LingoNumber(2),LingoNumber(2),LingoNumber(2))),self._global.member("rustDot").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,seedlr,LingoGlobal.op_add(LingoGlobal.rect(seedpos,seedpos),LingoGlobal.rect(-LingoNumber(2),-LingoNumber(2),LingoNumber(2),LingoNumber(2))),"rustDot",self._global.member("rustDot").image.rect,LingoNumber(0.8000),LingoNumber(1))
                            if self._global.random(LingoNumber(3)) > LingoNumber(1):                                 seedlr = self._movieScript.restrict(LingoGlobal.op_sub(seedlr,LingoNumber(1)),frontwall,backwall)                                self._global.member(LingoGlobal.concat("layer",self._global.str(seedlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(seedpos,seedpos),LingoGlobal.rect(-LingoNumber(1),-LingoNumber(1),LingoNumber(1),LingoNumber(1))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr))
                                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,seedlr,LingoGlobal.op_add(LingoGlobal.rect(seedpos,seedpos),LingoGlobal.rect(-LingoNumber(1),-LingoNumber(1),LingoNumber(1),LingoNumber(1))),"pxl",LingoImage.Pxl.rect,LingoNumber(0.8000),LingoNumber(1))                            else:                                self._global.member(LingoGlobal.concat("layer",self._global.str(seedlr))).image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(seedpos,seedpos),LingoGlobal.rect(-LingoNumber(1),-LingoNumber(1),LingoNumber(1),LingoNumber(1))),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))))                                                    tmp_a = a                        tmp_a += LingoNumber(1)                                                            seedchance = LingoGlobal.op_sub(seedchance,LingoGlobal.op_div(self._global.random(LingoNumber(100)).float,LingoNumber(2200.0000)))                points.add(LingoList(pnt,used))
                self._global.member(LingoGlobal.concat("layer",self._global.str(used))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr))
                if LingoGlobal.op_ne_b(lastused, used):                     self._global.member(LingoGlobal.concat("layer",self._global.str(lastused))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr))                lastused = used                tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                     break                                    elif LingoGlobal.op_eq_b(self._movieScript.solidafamv(tlpos,LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(used,LingoNumber(9))),LingoGlobal.op_gt(used,LingoNumber(19)))), LingoNumber(1)):                     break                                                if points.count > LingoNumber(2):                 tmp_p = LingoNumber(1)                while tmp_p < LingoGlobal.op_sub(points.count,LingoNumber(1)):                     p = tmp_p                    rct = LingoGlobal.op_div(LingoGlobal.op_add(points[p][LingoNumber(1)],points[LingoGlobal.op_add(p,LingoNumber(1))][LingoNumber(1)]),LingoNumber(2.0000))                    rct = LingoGlobal.rect(rct,rct)                    rct = LingoGlobal.op_add(rct,LingoGlobal.rect(-LingoNumber(1.5000),-LingoNumber(3.5000),LingoNumber(1.5000),LingoNumber(3.5000)))                    qd = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(points[p][LingoNumber(1)],points[LingoGlobal.op_add(p,LingoNumber(1))][LingoNumber(1)]))                    self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,points[p][LingoNumber(2)],qd,"pxl",LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoNumber(0.8000),LingoGlobal.power(LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_sub(points.count,p.float),LingoNumber(1)),points.count.float),LingoNumber(1.5000)))
                    tmp_p = p                    tmp_p += LingoNumber(1)                                                                return None            def applyhangroots(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            lftborder = LingoGlobal.op_sub(mdpnt.loch,LingoNumber(10))            rgthborder = LingoGlobal.op_add(mdpnt.loch,LingoNumber(10))            while LingoGlobal.ToBool(LingoGlobal.op_gt(LingoGlobal.op_add(pnt.locv,LingoGlobal.op_mul(self._movieScript.gRenderCameraTilePos.locv,LingoNumber(20))),-LingoNumber(100))):                 lstpos = pnt                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(LingoGlobal.op_add(-LingoNumber(45),self._global.random(LingoNumber(90)))),LingoGlobal.op_add(LingoNumber(2),self._global.random(LingoNumber(6)))))                pnt.loch = self._movieScript.restrict(pnt.loch,lftborder,rgthborder)                dir = self._movieScript.movetopoint(pnt,lstpos,LingoNumber(1.0000))                crossdir = self._movieScript.givedirfor90degrtoline(-dir,dir)                qd = LingoList(LingoGlobal.op_sub(pnt,crossdir),LingoGlobal.op_add(pnt,crossdir),LingoGlobal.op_add(lstpos,crossdir),LingoGlobal.op_sub(lstpos,crossdir))                self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(LingoImage.Pxl,qd,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.gLOprops.pals[self._movieScript.gLOprops.pal].detcol))
                if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.op_add(self._movieScript.givegridpos(lstpos),self._movieScript.gRenderCameraTilePos),lr), LingoNumber(1)):                     break                                                                return None            def applythickroots(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        frontwall = LingoNumber(0)        backwall = LingoNumber(29)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1))                backwall = LingoNumber(9)                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                frontwall = LingoNumber(10)                backwall = LingoNumber(19)                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                frontwall = LingoNumber(20)                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                backwall = LingoNumber(19)                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                frontwall = LingoNumber(10)                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    if d > LingoNumber(5):             frontwall = LingoGlobal.op_add(LingoNumber(5),LingoNumber(3))            d = self._movieScript.restrict(d,frontwall,LingoNumber(29))                    else:            backwall = LingoNumber(5)                    if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            health = LingoNumber(6)            points = LingoList(LingoList(pnt,d,health))            dir = LingoNumber(0)            floatdpth = d            thickness = LingoGlobal.op_mul(LingoGlobal.op_div(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(100.0000)),LingoGlobal.power(LingoGlobal.op_div(self._global.random(LingoNumber(10000)),LingoNumber(10000.0000)),LingoNumber(0.3000)))            while LingoGlobal.ToBool(LingoGlobal.op_gt(LingoGlobal.op_add(pnt.locv,LingoGlobal.op_mul(self._movieScript.gRenderCameraTilePos.locv,LingoNumber(20))),-LingoNumber(100))):                 floatdpth = LingoGlobal.op_add(floatdpth,self._movieScript.lerp(-LingoNumber(0.3000),LingoNumber(0.3000),LingoGlobal.op_div(self._global.random(LingoNumber(1000)),LingoNumber(1000.0000))))                if floatdpth < frontwall:                     floatdpth = frontwall                                    elif floatdpth > backwall:                     floatdpth = backwall                                    d = self._movieScript.restrict(floatdpth.integer,frontwall,backwall)                lstpos = pnt                dir = self._movieScript.lerp(dir,LingoGlobal.op_add(-LingoNumber(45),self._global.random(LingoNumber(90))),LingoNumber(0.5000))                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoGlobal.op_add(LingoNumber(2),self._global.random(LingoNumber(6)))))                lstgridpos = LingoGlobal.op_add(self._movieScript.givegridpos(lstpos),self._movieScript.gRenderCameraTilePos)                gridpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                tlt = LingoNumber(0)                tmp_q = -LingoNumber(1)                while tmp_q < LingoNumber(1):                     q = tmp_q                    if ((((((((LingoGlobal.op_ne_b(q, LingoNumber(0)) and LingoGlobal.op_add(gridpos.loch,q) > LingoNumber(0)) and LingoGlobal.op_add(gridpos.loch,q) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx.count) and LingoGlobal.op_sub(gridpos.locv,LingoNumber(1)) > LingoNumber(0)) and LingoGlobal.op_sub(gridpos.locv,LingoNumber(1)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoNumber(1)].count) and LingoGlobal.op_add(lstgridpos.loch,q) > LingoNumber(0)) and LingoGlobal.op_add(lstgridpos.loch,q) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx.count) and LingoGlobal.op_sub(lstgridpos.locv,LingoNumber(1)) > LingoNumber(0)) and LingoGlobal.op_sub(lstgridpos.locv,LingoNumber(1)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoNumber(1)].count):                         tlt = LingoGlobal.op_add(tlt,LingoGlobal.op_mul(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoGlobal.op_add(lstgridpos.loch,q)][LingoGlobal.op_sub(lstgridpos.locv,LingoNumber(1))],q))                                            tmp_q = q                    tmp_q += LingoNumber(1)                                    pnt.loch = LingoGlobal.op_add(pnt.loch,LingoGlobal.op_mul(LingoGlobal.op_div(tlt,LingoNumber(100.0000)),LingoNumber(2.0000)))                gridpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_ne_b(lstgridpos.loch, gridpos.loch):                     if (((((((gridpos.loch > LingoNumber(0) and gridpos.loch < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx.count) and gridpos.locv > LingoNumber(0)) and gridpos.locv < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoNumber(1)].count) and lstgridpos.loch > LingoNumber(0)) and lstgridpos.loch < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx.count) and lstgridpos.locv > LingoNumber(0)) and lstgridpos.locv < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoNumber(1)].count):                         if (LingoGlobal.op_eq_b(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[gridpos.loch][gridpos.locv], LingoNumber(0)) and self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[lstgridpos.loch][lstgridpos.locv] > LingoNumber(0)):                             pnt.loch = self._movieScript.restrict(pnt.loch,LingoGlobal.op_sub(self._movieScript.givemiddleoftile(self._movieScript.givegridpos(lstpos)).loch,LingoNumber(9)),LingoGlobal.op_add(self._movieScript.givemiddleoftile(self._movieScript.givegridpos(lstpos)).loch,LingoNumber(9)))                                                                                        points.add(LingoList(pnt,d,health))
                if LingoGlobal.op_eq_b(self._movieScript.solidafamv(lstgridpos,LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))), LingoNumber(1)):                     health = LingoGlobal.op_sub(health,LingoNumber(1))                    if health < LingoNumber(1):                         break                                                            else:                    health = self._movieScript.restrict(LingoGlobal.op_add(health,LingoNumber(1)),LingoNumber(0),LingoNumber(6))                                                lstpos = LingoGlobal.op_add(points[LingoNumber(1)][LingoNumber(1)],LingoGlobal.point(LingoNumber(0),LingoNumber(1)))            lastrad = LingoNumber(0)            lastperp = LingoGlobal.point(LingoNumber(0),LingoNumber(0))            tmp_q = LingoNumber(1)            while tmp_q < points.count:                 q = tmp_q                f = LingoGlobal.op_div(q.float,points.count.float)                pnt = points[q][LingoNumber(1)]                d = points[q][LingoNumber(2)]                dir = self._movieScript.movetopoint(pnt,lstpos,LingoNumber(1.0000))                perp = self._movieScript.givedirfor90degrtoline(-dir,dir)                rad = LingoGlobal.op_add(LingoNumber(0.6000),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(f,LingoNumber(8.0000)),LingoGlobal.op_div(points[q][LingoNumber(3)].float,LingoNumber(6.0000))),self._movieScript.lerp(LingoNumber(0.8000),LingoNumber(1.2000),LingoGlobal.op_div(self._global.random(LingoNumber(1000)),LingoNumber(1000.0000)))),self._movieScript.lerp(thickness,LingoNumber(0.5000),LingoNumber(0.2000))))                for tmp_c in LingoList(LingoList(LingoNumber(0),LingoNumber(1.0000)),LingoList(LingoNumber(1),LingoNumber(0.7000)),LingoList(LingoNumber(2),LingoNumber(0.3000))):                     c = tmp_c                    if (LingoGlobal.op_sub(d,c[LingoNumber(1)]) >= LingoNumber(0) and (LingoGlobal.op_mul(rad,c[LingoNumber(2)]) > LingoNumber(0.8000) or LingoGlobal.op_eq_b(c[LingoNumber(1)], LingoNumber(0)))):                         qd = LingoList(LingoGlobal.op_sub(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,rad),c[LingoNumber(2)])),LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,rad),c[LingoNumber(2)])),LingoGlobal.op_add(LingoGlobal.op_add(lstpos,dir),LingoGlobal.op_mul(LingoGlobal.op_mul(lastperp,lastrad),c[LingoNumber(2)])),LingoGlobal.op_sub(LingoGlobal.op_add(lstpos,dir),LingoGlobal.op_mul(LingoGlobal.op_mul(lastperp,lastrad),c[LingoNumber(2)])))                        self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_sub(d,c[LingoNumber(1)])))).image.copypixels(LingoImage.Pxl,qd,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))))                                    lstpos = pnt                lastperp = perp                lastrad = rad                tmp_q = q                tmp_q += LingoNumber(1)                                            return None            def applyshadowplants(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        frontwall = LingoNumber(0)        backwall = LingoNumber(29)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1))                backwall = LingoNumber(9)                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                frontwall = LingoNumber(10)                backwall = LingoNumber(19)                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                frontwall = LingoNumber(20)                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                backwall = LingoNumber(19)                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                frontwall = LingoNumber(10)                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    if d > LingoNumber(5):             frontwall = LingoGlobal.op_add(LingoNumber(5),LingoNumber(3))            d = self._movieScript.restrict(d,frontwall,LingoNumber(29))                    else:            backwall = LingoNumber(5)                    if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            health = LingoNumber(6)            points = LingoList(LingoList(pnt,d,health))            dir = LingoNumber(180)            cycle = self._movieScript.lerp(LingoNumber(6.0000),LingoNumber(12.0000),LingoGlobal.op_div(self._global.random(LingoNumber(10000)),LingoNumber(10000.0000)))            cntr = self._global.random(LingoNumber(50))            tltfac = LingoNumber(0.0000)            while LingoGlobal.ToBool(LingoGlobal.op_gt(LingoGlobal.op_add(pnt.locv,LingoGlobal.op_mul(self._movieScript.gRenderCameraTilePos.locv,LingoNumber(20))),-LingoNumber(100))):                 cntr = LingoGlobal.op_add(cntr,LingoNumber(1))                lstpos = pnt                dir = self._movieScript.lerp(dir,LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(45)),self._global.random(LingoNumber(90))),LingoNumber(0.1000))                dir = LingoGlobal.op_add(dir,LingoGlobal.op_mul(LingoGlobal.sin(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_div(cntr,cycle),LingoGlobal.PI),LingoNumber(2.0000))),LingoNumber(8)))                cycle = LingoGlobal.op_add(cycle,LingoNumber(0.1000))                if cycle > LingoNumber(35):                     cycle = LingoNumber(35)                                    pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoNumber(3)))                lstgridpos = LingoGlobal.op_add(self._movieScript.givegridpos(lstpos),self._movieScript.gRenderCameraTilePos)                gridpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                tlt = LingoNumber(0)                tmp_q = -LingoNumber(1)                while tmp_q < LingoNumber(1):                     q = tmp_q                    if ((((LingoGlobal.op_ne_b(q, LingoNumber(0)) and LingoGlobal.op_add(lstgridpos.loch,q) > LingoNumber(0)) and LingoGlobal.op_add(lstgridpos.loch,q) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx.count) and LingoGlobal.op_add(lstgridpos.locv,LingoNumber(1)) > LingoNumber(0)) and LingoGlobal.op_add(lstgridpos.locv,LingoNumber(1)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoNumber(1)].count):                         tlt = LingoGlobal.op_add(tlt,LingoGlobal.op_mul(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoGlobal.op_add(lstgridpos.loch,q)][LingoGlobal.op_add(lstgridpos.locv,LingoNumber(1))],q))                                            tmp_q = q                    tmp_q += LingoNumber(1)                                    pnt.loch = LingoGlobal.op_add(pnt.loch,LingoGlobal.op_mul(LingoGlobal.op_div(tlt,LingoNumber(100.0000)),self._movieScript.lerp(-LingoNumber(2.0000),LingoNumber(1.0000),LingoGlobal.power(tltfac,LingoNumber(0.8500)))))                gridpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                tltfac = LingoGlobal.op_add(tltfac,LingoNumber(0.0020))                if tltfac > LingoNumber(1.0000):                     tltfac = LingoNumber(1.0000)                                    points.add(LingoList(pnt,d,health))
                if LingoGlobal.op_eq_b(self._movieScript.solidafamv(lstgridpos,LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))), LingoNumber(1)):                     health = LingoGlobal.op_sub(health,LingoNumber(1))                    if health < LingoNumber(1):                         break                                                            else:                    health = self._movieScript.restrict(LingoGlobal.op_add(health,LingoNumber(1)),LingoNumber(0),LingoNumber(6))                                                fuzzlength = LingoGlobal.op_add(LingoNumber(20),self._global.random(LingoNumber(50)))            thickness = LingoGlobal.op_mul(LingoGlobal.op_div(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(100.0000)),LingoGlobal.power(LingoGlobal.op_div(self._global.random(LingoNumber(10000)),LingoNumber(10000.0000)),LingoNumber(0.3000)))            thickness = self._movieScript.lerp(thickness,LingoGlobal.op_div(self._movieScript.restrict(points.count.float,LingoNumber(20.0000),LingoNumber(180.0000)),LingoNumber(180.0000)),LingoNumber(0.5000))            lstpos = LingoGlobal.op_add(points[LingoNumber(1)][LingoNumber(1)],LingoGlobal.point(LingoNumber(0),LingoNumber(1)))            lastrad = LingoNumber(0)            lastperp = LingoGlobal.point(LingoNumber(0),LingoNumber(0))            tmp_q = LingoNumber(1)            while tmp_q < points.count:                 q = tmp_q                f = LingoGlobal.op_div(q.float,points.count.float)                pnt = points[q][LingoNumber(1)]                d = points[q][LingoNumber(2)]                dir = self._movieScript.movetopoint(pnt,lstpos,LingoNumber(1.0000))                perp = self._movieScript.givedirfor90degrtoline(-dir,dir)                f = LingoGlobal.sin(LingoGlobal.op_mul(LingoGlobal.op_mul(f,LingoGlobal.PI),LingoNumber(0.5000)))                rad = LingoGlobal.op_add(LingoNumber(1.1000),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(f,LingoNumber(7.0000)),LingoGlobal.op_div(points[q][LingoNumber(3)].float,LingoNumber(6.0000))),self._movieScript.lerp(thickness,LingoNumber(0.5000),LingoNumber(0.2000))))                for tmp_c in LingoList(LingoList(LingoNumber(0),LingoNumber(1.0000)),LingoList(LingoNumber(1),LingoNumber(0.7000)),LingoList(LingoNumber(2),LingoNumber(0.3000))):                     c = tmp_c                    if (LingoGlobal.op_sub(d,c[LingoNumber(1)]) >= LingoNumber(0) and (LingoGlobal.op_mul(rad,c[LingoNumber(2)]) > LingoNumber(0.8000) or LingoGlobal.op_eq_b(c[LingoNumber(1)], LingoNumber(0)))):                         qd = LingoList(LingoGlobal.op_sub(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,rad),c[LingoNumber(2)])),LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,rad),c[LingoNumber(2)])),LingoGlobal.op_add(LingoGlobal.op_add(lstpos,dir),LingoGlobal.op_mul(LingoGlobal.op_mul(lastperp,lastrad),c[LingoNumber(2)])),LingoGlobal.op_sub(LingoGlobal.op_add(lstpos,dir),LingoGlobal.op_mul(LingoGlobal.op_mul(lastperp,lastrad),c[LingoNumber(2)])))                        self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_sub(d,c[LingoNumber(1)])))).image.copypixels(LingoImage.Pxl,qd,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))))
                        if LingoGlobal.op_eq_b(self._global.random(LingoNumber(30)), LingoNumber(1)):                             self.sporegrower(LingoGlobal.op_add(pnt,self._movieScript.movetopoint(pnt,lstpos,LingoGlobal.op_div(LingoGlobal.op_mul(self._movieScript.diag(pnt,lstpos),self._global.random(LingoNumber(10000))),LingoNumber(10000.0000)))),LingoGlobal.op_add(LingoNumber(15),LingoGlobal.op_mul(self._global.random(LingoNumber(50)),LingoGlobal.op_sub(LingoNumber(1.0000),f))),LingoGlobal.op_sub(d,c[LingoNumber(1)]),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)))                        if ((q < fuzzlength and self._global.random(fuzzlength) > q) and LingoGlobal.op_eq_b(self._global.random(LingoNumber(6)), LingoNumber(1))):                             f2 = LingoGlobal.op_div(q.float,fuzzlength.float)                            self.sporegrower(LingoGlobal.op_add(pnt,self._movieScript.movetopoint(pnt,lstpos,LingoGlobal.op_div(LingoGlobal.op_mul(self._movieScript.diag(pnt,lstpos),self._global.random(LingoNumber(10000))),LingoNumber(10000.0000)))),LingoGlobal.op_add(LingoNumber(65),LingoGlobal.op_mul(self._global.random(LingoNumber(50)),LingoGlobal.op_sub(LingoNumber(1.0000),f2))),LingoGlobal.op_sub(d,c[LingoNumber(1)]),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)))                                                            lstpos = pnt                lastperp = perp                lastrad = rad                tmp_q = q                tmp_q += LingoNumber(1)                                            return None            def applycoloredhangroots(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        frontwall = LingoNumber(0)        backwall = LingoNumber(29)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            lftborder = LingoGlobal.op_sub(mdpnt.loch,LingoNumber(10))            rgthborder = LingoGlobal.op_add(mdpnt.loch,LingoNumber(10))            while LingoGlobal.ToBool(LingoGlobal.op_gt(LingoGlobal.op_add(pnt.locv,LingoGlobal.op_mul(self._movieScript.gRenderCameraTilePos.locv,LingoNumber(20))),-LingoNumber(100))):                 lstpos = pnt                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(LingoGlobal.op_add(-LingoNumber(45),self._global.random(LingoNumber(90)))),LingoGlobal.op_add(LingoNumber(2),self._global.random(LingoNumber(6)))))                pnt.loch = self._movieScript.restrict(pnt.loch,lftborder,rgthborder)                dir = self._movieScript.movetopoint(pnt,lstpos,LingoNumber(1.0000))                crossdir = self._movieScript.givedirfor90degrtoline(-dir,dir)                qd = LingoList(LingoGlobal.op_sub(pnt,crossdir),LingoGlobal.op_add(pnt,crossdir),LingoGlobal.op_add(lstpos,crossdir),LingoGlobal.op_sub(lstpos,crossdir))                self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(LingoImage.Pxl,qd,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(10)))
                if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                     self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(d))).image.copypixels(self._global.member("pxlDR200").image,qd,self._global.member("pxlDR200").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.op_add(self._movieScript.givegridpos(lstpos),self._movieScript.gRenderCameraTilePos),lr), LingoNumber(1)):                     break                                                                return None            def applycoloredthickroots(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        frontwall = LingoNumber(0)        backwall = LingoNumber(29)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1))                backwall = LingoNumber(9)                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                frontwall = LingoNumber(10)                backwall = LingoNumber(19)                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                frontwall = LingoNumber(20)                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                backwall = LingoNumber(19)                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                frontwall = LingoNumber(10)                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    if d > LingoNumber(5):             frontwall = LingoGlobal.op_add(LingoNumber(5),LingoNumber(3))            d = self._movieScript.restrict(d,frontwall,LingoNumber(29))                    else:            backwall = LingoNumber(5)                    if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            health = LingoNumber(6)            points = LingoList(LingoList(pnt,d,health))            dir = LingoNumber(0)            floatdpth = d            thickness = LingoGlobal.op_mul(LingoGlobal.op_div(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(100.0000)),LingoGlobal.power(LingoGlobal.op_div(self._global.random(LingoNumber(10000)),LingoNumber(10000.0000)),LingoNumber(0.3000)))            while LingoGlobal.ToBool(LingoGlobal.op_gt(LingoGlobal.op_add(pnt.locv,LingoGlobal.op_mul(self._movieScript.gRenderCameraTilePos.locv,LingoNumber(20))),-LingoNumber(100))):                 floatdpth = LingoGlobal.op_add(floatdpth,self._movieScript.lerp(-LingoNumber(0.3000),LingoNumber(0.3000),LingoGlobal.op_div(self._global.random(LingoNumber(1000)),LingoNumber(1000.0000))))                if floatdpth < frontwall:                     floatdpth = frontwall                                    elif floatdpth > backwall:                     floatdpth = backwall                                    d = self._movieScript.restrict(floatdpth.integer,frontwall,backwall)                lstpos = pnt                dir = self._movieScript.lerp(dir,LingoGlobal.op_add(-LingoNumber(45),self._global.random(LingoNumber(90))),LingoNumber(0.5000))                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoGlobal.op_add(LingoNumber(2),self._global.random(LingoNumber(6)))))                lstgridpos = LingoGlobal.op_add(self._movieScript.givegridpos(lstpos),self._movieScript.gRenderCameraTilePos)                gridpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                tlt = LingoNumber(0)                tmp_q = -LingoNumber(1)                while tmp_q < LingoNumber(1):                     q = tmp_q                    if ((((((((LingoGlobal.op_ne_b(q, LingoNumber(0)) and LingoGlobal.op_add(gridpos.loch,q) > LingoNumber(0)) and LingoGlobal.op_add(gridpos.loch,q) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx.count) and LingoGlobal.op_sub(gridpos.locv,LingoNumber(1)) > LingoNumber(0)) and LingoGlobal.op_sub(gridpos.locv,LingoNumber(1)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoNumber(1)].count) and LingoGlobal.op_add(lstgridpos.loch,q) > LingoNumber(0)) and LingoGlobal.op_add(lstgridpos.loch,q) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx.count) and LingoGlobal.op_sub(lstgridpos.locv,LingoNumber(1)) > LingoNumber(0)) and LingoGlobal.op_sub(lstgridpos.locv,LingoNumber(1)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoNumber(1)].count):                         tlt = LingoGlobal.op_add(tlt,LingoGlobal.op_mul(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoGlobal.op_add(lstgridpos.loch,q)][LingoGlobal.op_sub(lstgridpos.locv,LingoNumber(1))],q))                                            tmp_q = q                    tmp_q += LingoNumber(1)                                    pnt.loch = LingoGlobal.op_add(pnt.loch,LingoGlobal.op_mul(LingoGlobal.op_div(tlt,LingoNumber(100.0000)),LingoNumber(2.0000)))                gridpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                if LingoGlobal.op_ne_b(lstgridpos.loch, gridpos.loch):                     if (((((((gridpos.loch > LingoNumber(0) and gridpos.loch < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx.count) and gridpos.locv > LingoNumber(0)) and gridpos.locv < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoNumber(1)].count) and lstgridpos.loch > LingoNumber(0)) and lstgridpos.loch < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx.count) and lstgridpos.locv > LingoNumber(0)) and lstgridpos.locv < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoNumber(1)].count):                         if (LingoGlobal.op_eq_b(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[gridpos.loch][gridpos.locv], LingoNumber(0)) and self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[lstgridpos.loch][lstgridpos.locv] > LingoNumber(0)):                             pnt.loch = self._movieScript.restrict(pnt.loch,LingoGlobal.op_sub(self._movieScript.givemiddleoftile(self._movieScript.givegridpos(lstpos)).loch,LingoNumber(9)),LingoGlobal.op_add(self._movieScript.givemiddleoftile(self._movieScript.givegridpos(lstpos)).loch,LingoNumber(9)))                                                                                        points.add(LingoList(pnt,d,health))
                if LingoGlobal.op_eq_b(self._movieScript.solidafamv(lstgridpos,LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))), LingoNumber(1)):                     health = LingoGlobal.op_sub(health,LingoNumber(1))                    if health < LingoNumber(1):                         break                                                            else:                    health = self._movieScript.restrict(LingoGlobal.op_add(health,LingoNumber(1)),LingoNumber(0),LingoNumber(6))                                                lstpos = LingoGlobal.op_add(points[LingoNumber(1)][LingoNumber(1)],LingoGlobal.point(LingoNumber(0),LingoNumber(1)))            lastrad = LingoNumber(0)            lastperp = LingoGlobal.point(LingoNumber(0),LingoNumber(0))            tmp_q = LingoNumber(1)            while tmp_q < points.count:                 q = tmp_q                f = LingoGlobal.op_div(q.float,points.count.float)                pnt = points[q][LingoNumber(1)]                d = points[q][LingoNumber(2)]                dir = self._movieScript.movetopoint(pnt,lstpos,LingoNumber(1.0000))                perp = self._movieScript.givedirfor90degrtoline(-dir,dir)                rad = LingoGlobal.op_add(LingoNumber(0.6000),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(f,LingoNumber(8.0000)),LingoGlobal.op_div(points[q][LingoNumber(3)].float,LingoNumber(6.0000))),self._movieScript.lerp(LingoNumber(0.8000),LingoNumber(1.2000),LingoGlobal.op_div(self._global.random(LingoNumber(1000)),LingoNumber(1000.0000)))),self._movieScript.lerp(thickness,LingoNumber(0.5000),LingoNumber(0.2000))))                for tmp_c in LingoList(LingoList(LingoNumber(0),LingoNumber(1.0000)),LingoList(LingoNumber(1),LingoNumber(0.7000)),LingoList(LingoNumber(2),LingoNumber(0.3000))):                     c = tmp_c                    if (LingoGlobal.op_sub(d,c[LingoNumber(1)]) >= LingoNumber(0) and (LingoGlobal.op_mul(rad,c[LingoNumber(2)]) > LingoNumber(0.8000) or LingoGlobal.op_eq_b(c[LingoNumber(1)], LingoNumber(0)))):                         qd = LingoList(LingoGlobal.op_sub(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,rad),c[LingoNumber(2)])),LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,rad),c[LingoNumber(2)])),LingoGlobal.op_add(LingoGlobal.op_add(lstpos,dir),LingoGlobal.op_mul(LingoGlobal.op_mul(lastperp,lastrad),c[LingoNumber(2)])),LingoGlobal.op_sub(LingoGlobal.op_add(lstpos,dir),LingoGlobal.op_mul(LingoGlobal.op_mul(lastperp,lastrad),c[LingoNumber(2)])))                        self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_sub(d,c[LingoNumber(1)])))).image.copypixels(LingoImage.Pxl,qd,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                        if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                             self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(LingoGlobal.op_sub(d,c[LingoNumber(1)])))).image.copypixels(self._global.member("pxlDR200").image,qd,self._global.member("pxlDR200").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                                            lstpos = pnt                lastperp = perp                lastrad = rad                tmp_q = q                tmp_q += LingoNumber(1)                                            return None            def applycoloredshadowplants(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        frontwall = LingoNumber(0)        backwall = LingoNumber(29)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(9)),LingoNumber(1))                backwall = LingoNumber(9)                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                frontwall = LingoNumber(10)                backwall = LingoNumber(19)                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                frontwall = LingoNumber(20)                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                backwall = LingoNumber(19)                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                frontwall = LingoNumber(10)                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    if d > LingoNumber(5):             frontwall = LingoGlobal.op_add(LingoNumber(5),LingoNumber(3))            d = self._movieScript.restrict(d,frontwall,LingoNumber(29))                    else:            backwall = LingoNumber(5)                    if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            health = LingoNumber(6)            points = LingoList(LingoList(pnt,d,health))            dir = LingoNumber(180)            cycle = self._movieScript.lerp(LingoNumber(6.0000),LingoNumber(12.0000),LingoGlobal.op_div(self._global.random(LingoNumber(10000)),LingoNumber(10000.0000)))            cntr = self._global.random(LingoNumber(50))            tltfac = LingoNumber(0.0000)            while LingoGlobal.ToBool(LingoGlobal.op_gt(LingoGlobal.op_add(pnt.locv,LingoGlobal.op_mul(self._movieScript.gRenderCameraTilePos.locv,LingoNumber(20))),-LingoNumber(100))):                 cntr = LingoGlobal.op_add(cntr,LingoNumber(1))                lstpos = pnt                dir = self._movieScript.lerp(dir,LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(45)),self._global.random(LingoNumber(90))),LingoNumber(0.1000))                dir = LingoGlobal.op_add(dir,LingoGlobal.op_mul(LingoGlobal.sin(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_div(cntr,cycle),LingoGlobal.PI),LingoNumber(2.0000))),LingoNumber(8)))                cycle = LingoGlobal.op_add(cycle,LingoNumber(0.1000))                if cycle > LingoNumber(35):                     cycle = LingoNumber(35)                                    pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoNumber(3)))                lstgridpos = LingoGlobal.op_add(self._movieScript.givegridpos(lstpos),self._movieScript.gRenderCameraTilePos)                gridpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                tlt = LingoNumber(0)                tmp_q = -LingoNumber(1)                while tmp_q < LingoNumber(1):                     q = tmp_q                    if ((((LingoGlobal.op_ne_b(q, LingoNumber(0)) and LingoGlobal.op_add(lstgridpos.loch,q) > LingoNumber(0)) and LingoGlobal.op_add(lstgridpos.loch,q) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx.count) and LingoGlobal.op_add(lstgridpos.locv,LingoNumber(1)) > LingoNumber(0)) and LingoGlobal.op_add(lstgridpos.locv,LingoNumber(1)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoNumber(1)].count):                         tlt = LingoGlobal.op_add(tlt,LingoGlobal.op_mul(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoGlobal.op_add(lstgridpos.loch,q)][LingoGlobal.op_add(lstgridpos.locv,LingoNumber(1))],q))                                            tmp_q = q                    tmp_q += LingoNumber(1)                                    pnt.loch = LingoGlobal.op_add(pnt.loch,LingoGlobal.op_mul(LingoGlobal.op_div(tlt,LingoNumber(100.0000)),self._movieScript.lerp(-LingoNumber(2.0000),LingoNumber(1.0000),LingoGlobal.power(tltfac,LingoNumber(0.8500)))))                gridpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                tltfac = LingoGlobal.op_add(tltfac,LingoNumber(0.0020))                if tltfac > LingoNumber(1.0000):                     tltfac = LingoNumber(1.0000)                                    points.add(LingoList(pnt,d,health))
                if LingoGlobal.op_eq_b(self._movieScript.solidafamv(lstgridpos,LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))), LingoNumber(1)):                     health = LingoGlobal.op_sub(health,LingoNumber(1))                    if health < LingoNumber(1):                         break                                                            else:                    health = self._movieScript.restrict(LingoGlobal.op_add(health,LingoNumber(1)),LingoNumber(0),LingoNumber(6))                                                fuzzlength = LingoGlobal.op_add(LingoNumber(20),self._global.random(LingoNumber(50)))            thickness = LingoGlobal.op_mul(LingoGlobal.op_div(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(100.0000)),LingoGlobal.power(LingoGlobal.op_div(self._global.random(LingoNumber(10000)),LingoNumber(10000.0000)),LingoNumber(0.3000)))            thickness = self._movieScript.lerp(thickness,LingoGlobal.op_div(self._movieScript.restrict(points.count.float,LingoNumber(20.0000),LingoNumber(180.0000)),LingoNumber(180.0000)),LingoNumber(0.5000))            lstpos = LingoGlobal.op_add(points[LingoNumber(1)][LingoNumber(1)],LingoGlobal.point(LingoNumber(0),LingoNumber(1)))            lastrad = LingoNumber(0)            lastperp = LingoGlobal.point(LingoNumber(0),LingoNumber(0))            tmp_q = LingoNumber(1)            while tmp_q < points.count:                 q = tmp_q                f = LingoGlobal.op_div(q.float,points.count.float)                pnt = points[q][LingoNumber(1)]                d = points[q][LingoNumber(2)]                dir = self._movieScript.movetopoint(pnt,lstpos,LingoNumber(1.0000))                perp = self._movieScript.givedirfor90degrtoline(-dir,dir)                f = LingoGlobal.sin(LingoGlobal.op_mul(LingoGlobal.op_mul(f,LingoGlobal.PI),LingoNumber(0.5000)))                rad = LingoGlobal.op_add(LingoNumber(1.1000),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(f,LingoNumber(7.0000)),LingoGlobal.op_div(points[q][LingoNumber(3)].float,LingoNumber(6.0000))),self._movieScript.lerp(thickness,LingoNumber(0.5000),LingoNumber(0.2000))))                for tmp_c in LingoList(LingoList(LingoNumber(0),LingoNumber(1.0000)),LingoList(LingoNumber(1),LingoNumber(0.7000)),LingoList(LingoNumber(2),LingoNumber(0.3000))):                     c = tmp_c                    if (LingoGlobal.op_sub(d,c[LingoNumber(1)]) >= LingoNumber(0) and (LingoGlobal.op_mul(rad,c[LingoNumber(2)]) > LingoNumber(0.8000) or LingoGlobal.op_eq_b(c[LingoNumber(1)], LingoNumber(0)))):                         qd = LingoList(LingoGlobal.op_sub(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,rad),c[LingoNumber(2)])),LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,rad),c[LingoNumber(2)])),LingoGlobal.op_add(LingoGlobal.op_add(lstpos,dir),LingoGlobal.op_mul(LingoGlobal.op_mul(lastperp,lastrad),c[LingoNumber(2)])),LingoGlobal.op_sub(LingoGlobal.op_add(lstpos,dir),LingoGlobal.op_mul(LingoGlobal.op_mul(lastperp,lastrad),c[LingoNumber(2)])))                        self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_sub(d,c[LingoNumber(1)])))).image.copypixels(LingoImage.Pxl,qd,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                        if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                             self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(LingoGlobal.op_sub(d,c[LingoNumber(1)])))).image.copypixels(self._global.member("pxlDR200").image,qd,self._global.member("pxlDR200").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                        if LingoGlobal.op_eq_b(self._global.random(LingoNumber(30)), LingoNumber(1)):                             self.coloredsporegrower(LingoGlobal.op_add(pnt,self._movieScript.movetopoint(pnt,lstpos,LingoGlobal.op_div(LingoGlobal.op_mul(self._movieScript.diag(pnt,lstpos),self._global.random(LingoNumber(10000))),LingoNumber(10000.0000)))),LingoGlobal.op_add(LingoNumber(15),LingoGlobal.op_mul(self._global.random(LingoNumber(50)),LingoGlobal.op_sub(LingoNumber(1.0000),f))),LingoGlobal.op_sub(d,c[LingoNumber(1)]),self._movieScript.colr)                        if ((q < fuzzlength and self._global.random(fuzzlength) > q) and LingoGlobal.op_eq_b(self._global.random(LingoNumber(6)), LingoNumber(1))):                             f2 = LingoGlobal.op_div(q.float,fuzzlength.float)                            self.coloredsporegrower(LingoGlobal.op_add(pnt,self._movieScript.movetopoint(pnt,lstpos,LingoGlobal.op_div(LingoGlobal.op_mul(self._movieScript.diag(pnt,lstpos),self._global.random(LingoNumber(10000))),LingoNumber(10000.0000)))),LingoGlobal.op_add(LingoNumber(65),LingoGlobal.op_mul(self._global.random(LingoNumber(50)),LingoGlobal.op_sub(LingoNumber(1.0000),f2))),LingoGlobal.op_sub(d,c[LingoNumber(1)]),self._movieScript.colr)                                                            lstpos = pnt                lastperp = perp                lastrad = rad                tmp_q = q                tmp_q += LingoNumber(1)                                            return None            def sporegrower(self, pos, lngth, layer, col):         dir = LingoGlobal.point(LingoNumber(0),-LingoNumber(1))        tmp_q = LingoNumber(1)        while tmp_q < lngth:             q = tmp_q            othercol = self._global.member(LingoGlobal.concat("layer",layer)).image.getpixel(LingoGlobal.op_sub(pos.loch,LingoNumber(1)),LingoGlobal.op_sub(pos.locv,LingoNumber(1)))            if (LingoGlobal.op_ne_b(othercol, col) and LingoGlobal.op_ne_b(othercol, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))):                 break                            else:                self._global.member(LingoGlobal.concat("layer",layer)).image.setpixel(LingoGlobal.op_sub(pos.loch,LingoNumber(1)),LingoGlobal.op_sub(pos.locv,LingoNumber(1)),col)
                pos = LingoGlobal.op_add(pos,dir)                if (LingoGlobal.op_eq_b(dir.locv, -LingoNumber(1)) and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                     if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                         dir = LingoGlobal.point(-LingoNumber(1),LingoNumber(0))                                            else:                        dir = LingoGlobal.point(LingoNumber(1),LingoNumber(0))                                                            else:                    dir = LingoGlobal.point(LingoNumber(0),-LingoNumber(1))                                                tmp_q = q            tmp_q += LingoNumber(1)                            return None            def coloredsporegrower(self, pos, lngth, layer, col):         dir = LingoGlobal.point(LingoNumber(0),-LingoNumber(1))        tmp_q = LingoNumber(1)        while tmp_q < lngth:             q = tmp_q            othercol = self._global.member(LingoGlobal.concat("layer",layer)).image.getpixel(LingoGlobal.op_sub(pos.loch,LingoNumber(1)),LingoGlobal.op_sub(pos.locv,LingoNumber(1)))            if (LingoGlobal.op_ne_b(othercol, col) and LingoGlobal.op_ne_b(othercol, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))):                 break                            else:                self._global.member(LingoGlobal.concat("layer",layer)).image.setpixel(LingoGlobal.op_sub(pos.loch,LingoNumber(1)),LingoGlobal.op_sub(pos.locv,LingoNumber(1)),col)
                if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                     self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,layer)).image.setpixel(LingoGlobal.op_sub(pos.loch,LingoNumber(1)),LingoGlobal.op_sub(pos.locv,LingoNumber(1)),self._global.color(LingoNumber(50),LingoNumber(50),LingoNumber(50)))                pos = LingoGlobal.op_add(pos,dir)                if (LingoGlobal.op_eq_b(dir.locv, -LingoNumber(1)) and LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1))):                     if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                         dir = LingoGlobal.point(-LingoNumber(1),LingoNumber(0))                                            else:                        dir = LingoGlobal.point(LingoNumber(1),LingoNumber(0))                                                            else:                    dir = LingoGlobal.point(LingoNumber(0),-LingoNumber(1))                                                tmp_q = q            tmp_q += LingoNumber(1)                            return None            def applyrootplants(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        frontwall = LingoNumber(0)        backwall = LingoNumber(29)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(9)),LingoNumber(1))                backwall = LingoNumber(9)                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                frontwall = LingoNumber(10)                backwall = LingoNumber(19)                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                frontwall = LingoNumber(20)                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                backwall = LingoNumber(19)                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                frontwall = LingoNumber(10)                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    if d > LingoNumber(5):             frontwall = LingoGlobal.op_add(LingoNumber(5),LingoNumber(3))            d = self._movieScript.restrict(d,frontwall,LingoNumber(29))                    else:            backwall = LingoNumber(5)                    if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            health = LingoNumber(6)            points = LingoList(LingoList(pnt,d,health))            dir = LingoNumber(180)            cycle = self._movieScript.lerp(LingoNumber(6.0000),LingoNumber(12.0000),LingoGlobal.op_div(self._global.random(LingoNumber(10000)),LingoNumber(10000.0000)))            cntr = self._global.random(LingoNumber(50))            tltfac = LingoNumber(0.0000)            while LingoGlobal.ToBool(LingoGlobal.op_gt(LingoGlobal.op_add(pnt.locv,LingoGlobal.op_mul(self._movieScript.gRenderCameraTilePos.locv,LingoNumber(20))),-LingoNumber(100))):                 cntr = LingoGlobal.op_add(cntr,LingoNumber(1))                lstpos = pnt                dir = self._movieScript.lerp(dir,LingoGlobal.op_add(LingoGlobal.op_sub(LingoNumber(180),LingoNumber(45)),self._global.random(LingoNumber(90))),LingoNumber(0.1000))                dir = LingoGlobal.op_add(dir,LingoGlobal.op_mul(LingoGlobal.sin(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_div(cntr,cycle),LingoGlobal.PI),LingoNumber(2.0000))),LingoNumber(8)))                cycle = LingoGlobal.op_add(cycle,LingoNumber(0.1000))                if cycle > LingoNumber(35):                     cycle = LingoNumber(35)                                    pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(dir),LingoNumber(3)))                lstgridpos = LingoGlobal.op_add(self._movieScript.givegridpos(lstpos),self._movieScript.gRenderCameraTilePos)                gridpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                tlt = LingoNumber(0)                tmp_q = -LingoNumber(1)                while tmp_q < LingoNumber(1):                     q = tmp_q                    if ((((LingoGlobal.op_ne_b(q, LingoNumber(0)) and LingoGlobal.op_add(lstgridpos.loch,q) > LingoNumber(0)) and LingoGlobal.op_add(lstgridpos.loch,q) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx.count) and LingoGlobal.op_add(lstgridpos.locv,LingoNumber(1)) > LingoNumber(0)) and LingoGlobal.op_add(lstgridpos.locv,LingoNumber(1)) < self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoNumber(1)].count):                         tlt = LingoGlobal.op_add(tlt,LingoGlobal.op_mul(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[LingoGlobal.op_add(lstgridpos.loch,q)][LingoGlobal.op_add(lstgridpos.locv,LingoNumber(1))],q))                                            tmp_q = q                    tmp_q += LingoNumber(1)                                    pnt.loch = LingoGlobal.op_add(pnt.loch,LingoGlobal.op_mul(LingoGlobal.op_div(tlt,LingoNumber(100.0000)),self._movieScript.lerp(-LingoNumber(2.0000),LingoNumber(1.0000),LingoGlobal.power(tltfac,LingoNumber(0.8500)))))                gridpos = LingoGlobal.op_add(self._movieScript.givegridpos(pnt),self._movieScript.gRenderCameraTilePos)                tltfac = LingoGlobal.op_add(tltfac,LingoNumber(0.0020))                if tltfac > LingoNumber(1.0000):                     tltfac = LingoNumber(1.0000)                                    points.add(LingoList(pnt,d,health))
                if LingoGlobal.op_eq_b(self._movieScript.solidafamv(lstgridpos,LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))), LingoNumber(1)):                     health = LingoGlobal.op_sub(health,LingoNumber(1))                    if health < LingoNumber(1):                         break                                                            else:                    health = self._movieScript.restrict(LingoGlobal.op_add(health,LingoNumber(1)),LingoNumber(0),LingoNumber(6))                                                fuzzlength = LingoGlobal.op_add(LingoNumber(20),self._global.random(LingoNumber(50)))            thickness = LingoGlobal.op_mul(LingoGlobal.op_div(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2],LingoNumber(100.0000)),LingoGlobal.power(LingoGlobal.op_div(self._global.random(LingoNumber(10000)),LingoNumber(10000.0000)),LingoNumber(0.3000)))            thickness = self._movieScript.lerp(thickness,LingoGlobal.op_div(self._movieScript.restrict(points.count.float,LingoNumber(20.0000),LingoNumber(180.0000)),LingoNumber(180.0000)),LingoNumber(0.5000))            lstpos = LingoGlobal.op_add(points[LingoNumber(1)][LingoNumber(1)],LingoGlobal.point(LingoNumber(0),LingoNumber(1)))            lastrad = LingoNumber(0)            lastperp = LingoGlobal.point(LingoNumber(0),LingoNumber(0))            tmp_q = LingoNumber(1)            while tmp_q < points.count:                 q = tmp_q                f = LingoGlobal.op_div(q.float,points.count.float)                pnt = points[q][LingoNumber(1)]                d = points[q][LingoNumber(2)]                dir = self._movieScript.movetopoint(pnt,lstpos,LingoNumber(1.0000))                perp = self._movieScript.givedirfor90degrtoline(-dir,dir)                f = LingoGlobal.sin(LingoGlobal.op_mul(LingoGlobal.op_mul(f,LingoGlobal.PI),LingoNumber(0.5000)))                rad = LingoGlobal.op_add(LingoNumber(1.1000),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(f,LingoNumber(7.0000)),LingoGlobal.op_div(points[q][LingoNumber(3)].float,LingoNumber(6.0000))),self._movieScript.lerp(thickness,LingoNumber(0.5000),LingoNumber(0.2000))))                for tmp_c in LingoList(LingoList(LingoNumber(0),LingoNumber(1.0000)),LingoList(LingoNumber(1),LingoNumber(0.7000)),LingoList(LingoNumber(2),LingoNumber(0.3000))):                     c = tmp_c                    if (LingoGlobal.op_sub(d,c[LingoNumber(1)]) >= LingoNumber(0) and (LingoGlobal.op_mul(rad,c[LingoNumber(2)]) > LingoNumber(0.8000) or LingoGlobal.op_eq_b(c[LingoNumber(1)], LingoNumber(0)))):                         qd = LingoList(LingoGlobal.op_sub(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,rad),c[LingoNumber(2)])),LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,rad),c[LingoNumber(2)])),LingoGlobal.op_add(LingoGlobal.op_add(lstpos,dir),LingoGlobal.op_mul(LingoGlobal.op_mul(lastperp,lastrad),c[LingoNumber(2)])),LingoGlobal.op_sub(LingoGlobal.op_add(lstpos,dir),LingoGlobal.op_mul(LingoGlobal.op_mul(lastperp,lastrad),c[LingoNumber(2)])))                        self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_sub(d,c[LingoNumber(1)])))).image.copypixels(LingoImage.Pxl,qd,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr))
                        if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                             self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(LingoGlobal.op_sub(d,c[LingoNumber(1)])))).image.copypixels(self._global.member("pxlDR200").image,qd,self._global.member("pxlDR200").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                                            lstpos = pnt                lastperp = perp                lastrad = rad                tmp_q = q                tmp_q += LingoNumber(1)                                            return None            def applydaddycorruption(self, q, c, amount):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))        extraholechance = LingoNumber(1)        match self._movieScript.lrSup.lower():             case "all":                dmin = LingoNumber(0)                dmax = LingoNumber(29)                dmax2 = LingoNumber(26)                            case "1":                dmin = LingoNumber(0)                dmax = LingoNumber(6)                dmax2 = LingoNumber(6)                            case "2":                dmin = LingoNumber(10)                dmax = LingoNumber(16)                dmax2 = LingoNumber(16)                            case "3":                dmin = LingoNumber(20)                dmax = LingoNumber(29)                dmax2 = LingoNumber(26)                            case "1:st and 2:nd":                dmin = LingoNumber(0)                dmax = LingoNumber(16)                dmax2 = LingoNumber(16)                            case "2:nd and 3:rd":                dmin = LingoNumber(10)                dmax = LingoNumber(29)                dmax2 = LingoNumber(26)                            case _:                 dmin = LingoNumber(0)                dmax = LingoNumber(29)                dmax2 = LingoNumber(26)                                    tmp_a = LingoNumber(1)        while tmp_a < LingoGlobal.op_div(amount,LingoNumber(2)):             a = tmp_a            dp = LingoGlobal.op_sub(self._global.random(LingoNumber(28)),LingoNumber(1))            if dp > LingoNumber(3):                 dp = LingoGlobal.op_add(dp,LingoNumber(2))                            lr = LingoNumber(3)            rad = LingoGlobal.op_mul(LingoGlobal.op_mul(self._global.random(LingoNumber(100)),LingoNumber(0.2000)),self._movieScript.lerp(LingoNumber(0.2000),LingoNumber(1.0000),LingoGlobal.op_div(amount,LingoNumber(100))))            if dp < LingoNumber(10):                 lr = LingoNumber(1)                            elif dp < LingoNumber(20):                 lr = LingoNumber(2)                            startpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            solid = LingoNumber(0)            if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(q2,c2),lr), LingoNumber(1)):                 solid = LingoNumber(1)                            if ((LingoGlobal.op_eq_b(solid, LingoNumber(0)) and lr < LingoNumber(3)) and LingoGlobal.op_sub(dp,LingoGlobal.op_mul(LingoGlobal.op_sub(lr,LingoNumber(1)),LingoNumber(10))) > LingoNumber(6)):                 if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(q2,c2),LingoGlobal.op_add(lr,LingoNumber(1))), LingoNumber(1)):                     solid = LingoNumber(1)                                                if LingoGlobal.op_eq_b(solid, LingoNumber(0)):                 for tmp_dr in LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0))):                     dr = tmp_dr                    if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.op_add(self._movieScript.givegridpos(LingoGlobal.op_add(startpos,LingoGlobal.op_mul(dr,rad))),self._movieScript.gRenderCameraTilePos),lr), LingoNumber(1)):                         solid = LingoNumber(1)                        break                                                                        if ((LingoGlobal.op_eq_b(solid, LingoNumber(0)) and dp < LingoNumber(27)) and rad > LingoNumber(1.2000)):                 for tmp_dr in LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0))):                     dr = tmp_dr                    if LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,LingoNumber(2))))).getpixel(LingoGlobal.op_add(startpos.loch,LingoGlobal.op_mul(LingoGlobal.op_mul(dr.loch,rad),LingoNumber(0.5000))),LingoGlobal.op_add(startpos.locv,LingoGlobal.op_mul(LingoGlobal.op_mul(dr.locv,rad),LingoNumber(0.5000)))), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                         rad = LingoGlobal.op_div(rad,LingoNumber(2))                        solid = LingoNumber(1)                        break                                                                        if LingoGlobal.op_eq_b(solid, LingoNumber(1)):                 tmp_d = LingoNumber(0)                while tmp_d < LingoNumber(2):                     d = tmp_d                    if (LingoGlobal.op_add(dp,d) <= dmax and LingoGlobal.op_add(dp,d) >= dmin):                         if rad <= LingoNumber(10):                             self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("DaddyBulb").image,LingoGlobal.op_add(LingoGlobal.rect(startpos,startpos),LingoGlobal.rect(-rad,-rad,rad,rad)),LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(20))),LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(20)))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))                        else:                            self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("DaddyBulb").image,LingoGlobal.op_add(LingoGlobal.rect(startpos,startpos),LingoGlobal.rect(-rad,-rad,rad,rad)),LingoGlobal.rect(LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(40))),LingoNumber(60),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(40)))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))                                            else:                        break                                            tmp_d = d                    tmp_d += LingoNumber(1)                                    if (((LingoGlobal.op_eq_b(self._global.random(LingoNumber(3)), LingoNumber(1)) or LingoGlobal.op_eq_b(extraholechance, LingoNumber(1))) and dp <= dmax2) and dp >= dmin):                     self._movieScript.daddyCorruptionHoles.add(LingoList(startpos,LingoGlobal.op_mul(LingoGlobal.op_mul(rad,LingoGlobal.op_add(LingoNumber(50),self._global.random(LingoNumber(50)))),LingoNumber(0.0100)),self._global.random(LingoNumber(360)),dp,amount))
                    extraholechance = LingoNumber(0)                                                tmp_a = a            tmp_a += LingoNumber(1)                            return None            def applycorruptionnoeye(self, q, c, amount):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))        match self._movieScript.lrSup.lower():             case "all":                dmin = LingoNumber(0)                dmax = LingoNumber(29)                            case "1":                dmin = LingoNumber(0)                dmax = LingoNumber(6)                            case "2":                dmin = LingoNumber(10)                dmax = LingoNumber(16)                            case "3":                dmin = LingoNumber(20)                dmax = LingoNumber(29)                            case "1:st and 2:nd":                dmin = LingoNumber(0)                dmax = LingoNumber(16)                            case "2:nd and 3:rd":                dmin = LingoNumber(10)                dmax = LingoNumber(29)                            case _:                 dmin = LingoNumber(0)                dmax = LingoNumber(29)                                    tmp_a = LingoNumber(1)        while tmp_a < LingoGlobal.op_div(amount,LingoNumber(2)):             a = tmp_a            dp = LingoGlobal.op_sub(self._global.random(LingoNumber(28)),LingoNumber(1))            if dp > LingoNumber(3):                 dp = LingoGlobal.op_add(dp,LingoNumber(2))                            lr = LingoNumber(3)            rad = LingoGlobal.op_mul(LingoGlobal.op_mul(self._global.random(LingoNumber(100)),LingoNumber(0.2000)),self._movieScript.lerp(LingoNumber(0.2000),LingoNumber(1.0000),LingoGlobal.op_div(amount,LingoNumber(100))))            if dp < LingoNumber(10):                 lr = LingoNumber(1)                            elif dp < LingoNumber(20):                 lr = LingoNumber(2)                            startpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            solid = LingoNumber(0)            if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(q2,c2),lr), LingoNumber(1)):                 solid = LingoNumber(1)                            if ((LingoGlobal.op_eq_b(solid, LingoNumber(0)) and lr < LingoNumber(3)) and LingoGlobal.op_sub(dp,LingoGlobal.op_mul(LingoGlobal.op_sub(lr,LingoNumber(1)),LingoNumber(10))) > LingoNumber(6)):                 if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(q2,c2),LingoGlobal.op_add(lr,LingoNumber(1))), LingoNumber(1)):                     solid = LingoNumber(1)                                                if LingoGlobal.op_eq_b(solid, LingoNumber(0)):                 for tmp_dr in LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0))):                     dr = tmp_dr                    if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.op_add(self._movieScript.givegridpos(LingoGlobal.op_add(startpos,LingoGlobal.op_mul(dr,rad))),self._movieScript.gRenderCameraTilePos),lr), LingoNumber(1)):                         solid = LingoNumber(1)                        break                                                                        if ((LingoGlobal.op_eq_b(solid, LingoNumber(0)) and dp < LingoNumber(27)) and rad > LingoNumber(1.2000)):                 for tmp_dr in LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0))):                     dr = tmp_dr                    if LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,LingoNumber(2))))).getpixel(LingoGlobal.op_add(startpos.loch,LingoGlobal.op_mul(LingoGlobal.op_mul(dr.loch,rad),LingoNumber(0.5000))),LingoGlobal.op_add(startpos.locv,LingoGlobal.op_mul(LingoGlobal.op_mul(dr.locv,rad),LingoNumber(0.5000)))), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                         rad = LingoGlobal.op_div(rad,LingoNumber(2))                        solid = LingoNumber(1)                        break                                                                        if LingoGlobal.op_eq_b(solid, LingoNumber(1)):                 tmp_d = LingoNumber(0)                while tmp_d < LingoNumber(2):                     d = tmp_d                    if (LingoGlobal.op_add(dp,d) <= dmax and LingoGlobal.op_add(dp,d) >= dmin):                         if rad <= LingoNumber(10):                             self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("CNEBulb").image,LingoGlobal.op_add(LingoGlobal.rect(startpos,startpos),LingoGlobal.rect(-rad,-rad,rad,rad)),LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(20))),LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(20)))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))                        else:                            self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("CNEBulb").image,LingoGlobal.op_add(LingoGlobal.rect(startpos,startpos),LingoGlobal.rect(-rad,-rad,rad,rad)),LingoGlobal.rect(LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(40))),LingoNumber(60),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(40)))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))                                            else:                        break                                            tmp_d = d                    tmp_d += LingoNumber(1)                                                tmp_a = a            tmp_a += LingoNumber(1)                            return None            def applywastewatermold(self, q, c, amount):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))        match self._movieScript.lrSup.lower():             case "all":                dmin = LingoNumber(0)                dmax = LingoNumber(29)                            case "1":                dmin = LingoNumber(0)                dmax = LingoNumber(6)                            case "2":                dmin = LingoNumber(10)                dmax = LingoNumber(16)                            case "3":                dmin = LingoNumber(20)                dmax = LingoNumber(29)                            case "1:st and 2:nd":                dmin = LingoNumber(0)                dmax = LingoNumber(16)                            case "2:nd and 3:rd":                dmin = LingoNumber(10)                dmax = LingoNumber(29)                            case _:                 dmin = LingoNumber(0)                dmax = LingoNumber(29)                                    tmp_a = LingoNumber(1)        while tmp_a < LingoGlobal.op_div(amount,LingoNumber(2)):             a = tmp_a            dp = LingoGlobal.op_sub(self._global.random(LingoNumber(28)),LingoNumber(1))            if dp > LingoNumber(3):                 dp = LingoGlobal.op_add(dp,LingoNumber(2))                            lr = LingoNumber(3)            rad = LingoGlobal.op_mul(LingoGlobal.op_mul(self._global.random(LingoNumber(100)),LingoNumber(0.2000)),self._movieScript.lerp(LingoNumber(0.2000),LingoNumber(1.0000),LingoGlobal.op_div(amount,LingoNumber(100))))            if dp < LingoNumber(10):                 lr = LingoNumber(1)                            elif dp < LingoNumber(20):                 lr = LingoNumber(2)                            startpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            solid = LingoNumber(0)            if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(q2,c2),lr), LingoNumber(1)):                 solid = LingoNumber(1)                            if ((LingoGlobal.op_eq_b(solid, LingoNumber(0)) and lr < LingoNumber(3)) and LingoGlobal.op_sub(dp,LingoGlobal.op_mul(LingoGlobal.op_sub(lr,LingoNumber(1)),LingoNumber(10))) > LingoNumber(6)):                 if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(q2,c2),LingoGlobal.op_add(lr,LingoNumber(1))), LingoNumber(1)):                     solid = LingoNumber(1)                                                if LingoGlobal.op_eq_b(solid, LingoNumber(0)):                 for tmp_dr in LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0))):                     dr = tmp_dr                    if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.op_add(self._movieScript.givegridpos(LingoGlobal.op_add(startpos,LingoGlobal.op_mul(dr,rad))),self._movieScript.gRenderCameraTilePos),lr), LingoNumber(1)):                         solid = LingoNumber(1)                        break                                                                        if ((LingoGlobal.op_eq_b(solid, LingoNumber(0)) and dp < LingoNumber(27)) and rad > LingoNumber(1.2000)):                 for tmp_dr in LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0))):                     dr = tmp_dr                    if LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,LingoNumber(2))))).getpixel(LingoGlobal.op_add(startpos.loch,LingoGlobal.op_mul(LingoGlobal.op_mul(dr.loch,rad),LingoNumber(0.5000))),LingoGlobal.op_add(startpos.locv,LingoGlobal.op_mul(LingoGlobal.op_mul(dr.locv,rad),LingoNumber(0.5000)))), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                         rad = LingoGlobal.op_div(rad,LingoNumber(2))                        solid = LingoNumber(1)                        break                                                                        if LingoGlobal.op_eq_b(solid, LingoNumber(1)):                 tmp_d = LingoNumber(0)                while tmp_d < LingoNumber(2):                     d = tmp_d                    if (LingoGlobal.op_add(dp,d) <= dmax and LingoGlobal.op_add(dp,d) >= dmin):                         if rad <= LingoNumber(10):                             self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("wastewaterMoldGraf").image,LingoGlobal.op_add(LingoGlobal.rect(startpos,startpos),LingoGlobal.rect(-rad,-rad,rad,rad)),LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(20))),LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(20)))),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                 self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("wastewaterMoldGrad").image,LingoGlobal.op_add(LingoGlobal.rect(startpos,startpos),LingoGlobal.rect(-rad,-rad,rad,rad)),LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(20))),LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(20)))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                                    else:                            self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("wastewaterMoldGraf").image,LingoGlobal.op_add(LingoGlobal.rect(startpos,startpos),LingoGlobal.rect(-rad,-rad,rad,rad)),LingoGlobal.rect(LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(40))),LingoNumber(60),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(40)))),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                 self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("wastewaterMoldGrad").image,LingoGlobal.op_add(LingoGlobal.rect(startpos,startpos),LingoGlobal.rect(-rad,-rad,rad,rad)),LingoGlobal.rect(LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(40))),LingoNumber(60),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(40)))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                                                        else:                        break                                            tmp_d = d                    tmp_d += LingoNumber(1)                                                tmp_a = a            tmp_a += LingoNumber(1)                            return None            def applyclubmoss(self, q, c, amount):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))        match self._movieScript.lrSup.lower():             case "all":                dmin = LingoNumber(0)                dmax = LingoNumber(29)                            case "1":                dmin = LingoNumber(0)                dmax = LingoNumber(6)                            case "2":                dmin = LingoNumber(10)                dmax = LingoNumber(16)                            case "3":                dmin = LingoNumber(20)                dmax = LingoNumber(29)                            case "1:st and 2:nd":                dmin = LingoNumber(0)                dmax = LingoNumber(16)                            case "2:nd and 3:rd":                dmin = LingoNumber(10)                dmax = LingoNumber(29)                            case _:                 dmin = LingoNumber(0)                dmax = LingoNumber(29)                                    tmp_a = LingoNumber(1)        while tmp_a < LingoGlobal.op_div(amount,LingoNumber(2)):             a = tmp_a            dp = LingoGlobal.op_sub(self._global.random(LingoNumber(28)),LingoNumber(1))            if dp > LingoNumber(3):                 dp = LingoGlobal.op_add(dp,LingoNumber(2))                            lr = LingoNumber(3)            rad = LingoGlobal.op_mul(LingoGlobal.op_mul(self._global.random(LingoNumber(100)),LingoNumber(0.2000)),self._movieScript.lerp(LingoNumber(0.2000),LingoNumber(1.0000),LingoGlobal.op_div(amount,LingoNumber(100))))            if dp < LingoNumber(10):                 lr = LingoNumber(1)                            elif dp < LingoNumber(20):                 lr = LingoNumber(2)                            startpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            solid = LingoNumber(0)            if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(q2,c2),lr), LingoNumber(1)):                 solid = LingoNumber(1)                            if ((LingoGlobal.op_eq_b(solid, LingoNumber(0)) and lr < LingoNumber(3)) and LingoGlobal.op_sub(dp,LingoGlobal.op_mul(LingoGlobal.op_sub(lr,LingoNumber(1)),LingoNumber(10))) > LingoNumber(6)):                 if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(q2,c2),LingoGlobal.op_add(lr,LingoNumber(1))), LingoNumber(1)):                     solid = LingoNumber(1)                                                if LingoGlobal.op_eq_b(solid, LingoNumber(0)):                 for tmp_dr in LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0))):                     dr = tmp_dr                    if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.op_add(self._movieScript.givegridpos(LingoGlobal.op_add(startpos,LingoGlobal.op_mul(dr,rad))),self._movieScript.gRenderCameraTilePos),lr), LingoNumber(1)):                         solid = LingoNumber(1)                        break                                                                        if ((LingoGlobal.op_eq_b(solid, LingoNumber(0)) and dp < LingoNumber(27)) and rad > LingoNumber(1.2000)):                 for tmp_dr in LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0))):                     dr = tmp_dr                    if LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,LingoNumber(2))))).getpixel(LingoGlobal.op_add(startpos.loch,LingoGlobal.op_mul(LingoGlobal.op_mul(dr.loch,rad),LingoNumber(0.5000))),LingoGlobal.op_add(startpos.locv,LingoGlobal.op_mul(LingoGlobal.op_mul(dr.locv,rad),LingoNumber(0.5000)))), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                         rad = LingoGlobal.op_div(rad,LingoNumber(2))                        solid = LingoNumber(1)                        break                                                                        if LingoGlobal.op_eq_b(solid, LingoNumber(1)):                 if (dp <= dmax and dp >= dmin):                     vari = self._global.random(LingoNumber(13))                    rtrect = self._movieScript.rotatetoquad(LingoGlobal.op_add(LingoGlobal.rect(startpos,startpos),LingoGlobal.rect(-rad,-rad,rad,rad)),self._global.random(LingoNumber(360)))                    dtrect = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(vari,LingoNumber(1)),LingoNumber(20)),LingoNumber(1),LingoGlobal.op_mul(vari,LingoNumber(20)),LingoNumber(14))                    self._global.member(LingoGlobal.concat("layer",self._global.str(dp))).image.copypixels(self._global.member("clubMossGraf").image,rtrect,dtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                    if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                         self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(dp))).image.copypixels(self._global.member("clubMossGrad").image,rtrect,dtrect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                                tmp_a = a            tmp_a += LingoNumber(1)                            return None            def applymosswall(self, q, c, amount):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))        match self._movieScript.lrSup.lower():             case "all":                dmin = LingoNumber(0)                dmax = LingoNumber(29)                            case "1":                dmin = LingoNumber(0)                dmax = LingoNumber(6)                            case "2":                dmin = LingoNumber(10)                dmax = LingoNumber(16)                            case "3":                dmin = LingoNumber(20)                dmax = LingoNumber(29)                            case "1:st and 2:nd":                dmin = LingoNumber(0)                dmax = LingoNumber(16)                            case "2:nd and 3:rd":                dmin = LingoNumber(10)                dmax = LingoNumber(29)                            case _:                 dmin = LingoNumber(0)                dmax = LingoNumber(29)                                    tmp_a = LingoNumber(1)        while tmp_a < LingoGlobal.op_div(amount,LingoNumber(2)):             a = tmp_a            dp = LingoGlobal.op_sub(self._global.random(LingoNumber(28)),LingoNumber(1))            if dp > LingoNumber(3):                 dp = LingoGlobal.op_add(dp,LingoNumber(2))                            lr = LingoNumber(3)            rad = LingoGlobal.op_mul(LingoGlobal.op_mul(self._global.random(LingoNumber(100)),LingoNumber(0.2000)),self._movieScript.lerp(LingoNumber(0.2000),LingoNumber(1.0000),LingoGlobal.op_div(amount,LingoNumber(100))))            if dp < LingoNumber(10):                 lr = LingoNumber(1)                            elif dp < LingoNumber(20):                 lr = LingoNumber(2)                            startpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            solid = LingoNumber(0)            if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(q2,c2),lr), LingoNumber(1)):                 solid = LingoNumber(1)                            if ((LingoGlobal.op_eq_b(solid, LingoNumber(0)) and lr < LingoNumber(3)) and LingoGlobal.op_sub(dp,LingoGlobal.op_mul(LingoGlobal.op_sub(lr,LingoNumber(1)),LingoNumber(10))) > LingoNumber(6)):                 if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(q2,c2),LingoGlobal.op_add(lr,LingoNumber(1))), LingoNumber(1)):                     solid = LingoNumber(1)                                                if LingoGlobal.op_eq_b(solid, LingoNumber(0)):                 for tmp_dr in LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0))):                     dr = tmp_dr                    if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.op_add(self._movieScript.givegridpos(LingoGlobal.op_add(startpos,LingoGlobal.op_mul(dr,rad))),self._movieScript.gRenderCameraTilePos),lr), LingoNumber(1)):                         solid = LingoNumber(1)                        break                                                                        if ((LingoGlobal.op_eq_b(solid, LingoNumber(0)) and dp < LingoNumber(27)) and rad > LingoNumber(1.2000)):                 for tmp_dr in LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0))):                     dr = tmp_dr                    if LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,LingoNumber(2))))).getpixel(LingoGlobal.op_add(startpos.loch,LingoGlobal.op_mul(LingoGlobal.op_mul(dr.loch,rad),LingoNumber(0.5000))),LingoGlobal.op_add(startpos.locv,LingoGlobal.op_mul(LingoGlobal.op_mul(dr.locv,rad),LingoNumber(0.5000)))), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                         rad = LingoGlobal.op_div(rad,LingoNumber(2))                        solid = LingoNumber(1)                        break                                                                        if LingoGlobal.op_eq_b(solid, LingoNumber(1)):                 if (dp <= dmax and dp >= dmin):                     vari = self._global.random(LingoNumber(13))                    nrn = self._global.random(LingoNumber(90))                    rtrect = LingoGlobal.op_add(LingoGlobal.rect(startpos,startpos),LingoGlobal.rect(-rad,-rad,rad,rad))                    dtrect = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(vari,LingoNumber(1)),LingoNumber(20)),LingoNumber(1),LingoGlobal.op_mul(vari,LingoNumber(20)),LingoNumber(12))                    self._global.member(LingoGlobal.concat("layer",self._global.str(dp))).image.copypixels(self._global.member("mossSideGraf").image,rtrect,dtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                    if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                         self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(dp))).image.copypixels(self._global.member("mossSideGrad").image,rtrect,dtrect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                                tmp_a = a            tmp_a += LingoNumber(1)                            return None            def applyflowers(self, q, c, amount):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))        match self._movieScript.lrSup.lower():             case "all":                dmin = LingoNumber(0)                dmax = LingoNumber(29)                            case "1":                dmin = LingoNumber(0)                dmax = LingoNumber(6)                            case "2":                dmin = LingoNumber(10)                dmax = LingoNumber(16)                            case "3":                dmin = LingoNumber(20)                dmax = LingoNumber(29)                            case "1:st and 2:nd":                dmin = LingoNumber(0)                dmax = LingoNumber(16)                            case "2:nd and 3:rd":                dmin = LingoNumber(10)                dmax = LingoNumber(29)                            case _:                 dmin = LingoNumber(0)                dmax = LingoNumber(29)                                    tmp_a = LingoNumber(1)        while tmp_a < LingoGlobal.op_div(amount,LingoNumber(2)):             a = tmp_a            dp = LingoGlobal.op_sub(self._global.random(LingoNumber(28)),LingoNumber(1))            if dp > LingoNumber(3):                 dp = LingoGlobal.op_add(dp,LingoNumber(2))                            lr = LingoNumber(3)            rad = LingoGlobal.op_mul(LingoGlobal.op_mul(self._global.random(LingoNumber(100)),LingoNumber(0.2000)),self._movieScript.lerp(LingoNumber(0.2000),LingoNumber(1.0000),LingoGlobal.op_div(amount,LingoNumber(100))))            if dp < LingoNumber(10):                 lr = LingoNumber(1)                            elif dp < LingoNumber(20):                 lr = LingoNumber(2)                            startpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            solid = LingoNumber(0)            if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(q2,c2),lr), LingoNumber(1)):                 solid = LingoNumber(1)                            if ((LingoGlobal.op_eq_b(solid, LingoNumber(0)) and lr < LingoNumber(3)) and LingoGlobal.op_sub(dp,LingoGlobal.op_mul(LingoGlobal.op_sub(lr,LingoNumber(1)),LingoNumber(10))) > LingoNumber(6)):                 if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.point(q2,c2),LingoGlobal.op_add(lr,LingoNumber(1))), LingoNumber(1)):                     solid = LingoNumber(1)                                                if LingoGlobal.op_eq_b(solid, LingoNumber(0)):                 for tmp_dr in LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0))):                     dr = tmp_dr                    if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.op_add(self._movieScript.givegridpos(LingoGlobal.op_add(startpos,LingoGlobal.op_mul(dr,rad))),self._movieScript.gRenderCameraTilePos),lr), LingoNumber(1)):                         solid = LingoNumber(1)                        break                                                                        if ((LingoGlobal.op_eq_b(solid, LingoNumber(0)) and dp < LingoNumber(27)) and rad > LingoNumber(1.2000)):                 for tmp_dr in LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0))):                     dr = tmp_dr                    if LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,LingoNumber(2))))).getpixel(LingoGlobal.op_add(startpos.loch,LingoGlobal.op_mul(LingoGlobal.op_mul(dr.loch,rad),LingoNumber(0.5000))),LingoGlobal.op_add(startpos.locv,LingoGlobal.op_mul(LingoGlobal.op_mul(dr.locv,rad),LingoNumber(0.5000)))), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                         rad = LingoGlobal.op_div(rad,LingoNumber(2))                        solid = LingoNumber(1)                        break                                                                        randrot1 = LingoGlobal.op_add(LingoGlobal.rect(startpos,startpos),LingoGlobal.rect(-rad,-rad,rad,rad))            randrot2 = LingoGlobal.op_add(LingoGlobal.rect(startpos,startpos),LingoGlobal.rect(-rad,-rad,rad,rad))            if LingoGlobal.ToBool(self._movieScript.gRotOp):                 randrot1 = self._movieScript.rotatetoquad(randrot1,self._global.random(LingoNumber(360)))                randrot2 = self._movieScript.rotatetoquad(randrot2,self._global.random(LingoNumber(360)))                            if LingoGlobal.op_eq_b(solid, LingoNumber(1)):                 tmp_d = LingoNumber(0)                while tmp_d < LingoNumber(2):                     d = tmp_d                    if (LingoGlobal.op_add(dp,d) <= dmax and LingoGlobal.op_add(dp,d) >= dmin):                         if rad <= LingoNumber(10):                             self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("flowerGraf2").image,randrot1,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(20))),LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(20)))),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                 self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("flowerGrad2").image,randrot1,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(20))),LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(20)))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                            self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("flowerGraf1").image,randrot2,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(20))),LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(20)))),LingoPropertyList(LingoSymbol("color"), self._movieScript.colrDetail,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.gdDetailLayer, "C"):                                 self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdDetailLayer,self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("flowerGrad1").image,randrot2,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(20))),LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(20)))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                                    else:                            self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("flowerGraf2").image,randrot1,LingoGlobal.rect(LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(40))),LingoNumber(60),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(40)))),LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C"):                                 self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("flowerGrad2").image,randrot1,LingoGlobal.rect(LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(40))),LingoNumber(60),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(40)))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                            self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("flowerGraf1").image,randrot2,LingoGlobal.rect(LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(40))),LingoNumber(60),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(40)))),LingoPropertyList(LingoSymbol("color"), self._movieScript.colrDetail,LingoSymbol("ink"), LingoNumber(36)))
                            if LingoGlobal.op_ne_b(self._movieScript.gdDetailLayer, "C"):                                 self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdDetailLayer,self._global.str(LingoGlobal.op_add(dp,d)))).image.copypixels(self._global.member("flowerGrad1").image,randrot2,LingoGlobal.rect(LingoNumber(20),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(d,LingoNumber(40))),LingoNumber(60),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(d,LingoNumber(1)),LingoNumber(40)))),LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                                                        else:                        break                                            tmp_d = d                    tmp_d += LingoNumber(1)                                                tmp_a = a            tmp_a += LingoNumber(1)                            return None            def applywire(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             self._global.member("wireImage").image = self._global.image(self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.width,self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.height,LingoNumber(1))            mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            startpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            mycamera = self.closestcamera(LingoGlobal.op_add(startpos,LingoGlobal.op_mul(self._movieScript.gRenderCameraTilePos,LingoNumber(20))))            if LingoGlobal.op_eq_b(mycamera, LingoNumber(0)):                 return None                            fatness = LingoNumber(1)            match self._movieScript.fatOp.lower():                 case "2px":                    fatness = LingoNumber(2)                                    case "3px":                    fatness = LingoNumber(3)                                    case "random":                    fatness = self._global.random(LingoNumber(3))                                                a = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1.0000),self._global.random(LingoNumber(100))),self._global.random(self._global.random(self._global.random(LingoNumber(900)))))            keepitfromtoforty = self._global.random(LingoNumber(30))            a = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_mul(a,keepitfromtoforty),LingoNumber(40.0000)),LingoGlobal.op_add(keepitfromtoforty,LingoNumber(1.0000)))            self._global.member("wireImage").image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(startpos.loch,LingoGlobal.op_sub(startpos.locv,LingoNumber(1)),LingoGlobal.op_add(startpos.loch,LingoNumber(1)),LingoGlobal.op_add(startpos.locv,LingoNumber(1))),LingoGlobal.rect(-LingoGlobal.op_gt(fatness,LingoNumber(1)),-LingoGlobal.op_gt(fatness,LingoNumber(1)),LingoGlobal.op_eq(fatness,LingoNumber(3)),LingoGlobal.op_eq(fatness,LingoNumber(3)))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0))))
            goodstops = LingoNumber(0)            tmp_dir = LingoNumber(0)            while tmp_dir < LingoNumber(1):                 dir = tmp_dir                pnt = LingoGlobal.point(startpos.loch,startpos.locv)                lastpnt = LingoGlobal.point(startpos.loch,startpos.locv)                tmp_rep = LingoNumber(1)                while tmp_rep < LingoNumber(1000):                     rep = tmp_rep                    pnt.loch = LingoGlobal.op_add(startpos.loch,LingoGlobal.op_mul(LingoGlobal.op_add(-LingoNumber(1),LingoGlobal.op_mul(LingoNumber(2),dir)),rep))                    pnt.locv = LingoGlobal.op_sub(LingoGlobal.op_add(startpos.locv,a),LingoGlobal.op_mul(LingoGlobal.op_add(LingoGlobal.power(LingoNumber(2.7183),LingoGlobal.op_div(rep,a)),LingoGlobal.power(LingoNumber(2.7183),LingoGlobal.op_div(-rep,a))),LingoGlobal.op_div(a,LingoNumber(2.0000))))                    dr = self._movieScript.movetopoint(lastpnt,pnt,fatness.float)                    self._global.member("wireImage").image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt.loch,pnt.locv,LingoGlobal.op_add(pnt.loch,LingoNumber(1)),LingoGlobal.op_add(lastpnt.locv,LingoNumber(1))),LingoGlobal.rect(-LingoGlobal.op_gt(fatness,LingoNumber(1)),-LingoGlobal.op_gt(fatness,LingoNumber(1)),LingoGlobal.op_eq(fatness,LingoNumber(3)),LingoGlobal.op_eq(fatness,LingoNumber(3)))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0))))
                    lastpnt = LingoGlobal.point(pnt.loch,pnt.locv)                    tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(LingoGlobal.point(pnt.loch,pnt.locv)),self._movieScript.gRenderCameraTilePos)                    if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                         break                                            elif (LingoGlobal.op_eq_b(mycamera, self._movieScript.gCurrentRenderCamera) and LingoGlobal.op_eq_b(self.seenbycamera(mycamera,LingoGlobal.op_add(pnt,self._movieScript.gRenderCameraTilePos)), LingoNumber(1))):                         if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[tlpos.loch][tlpos.locv][lr][LingoNumber(1)], LingoNumber(1)):                             if LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.getpixel(pnt), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                 goodstops = LingoGlobal.op_add(goodstops,LingoNumber(1))                                break                                                                                                        elif LingoGlobal.ToBool(self._movieScript.solidafamv(tlpos,lr)):                         goodstops = LingoGlobal.op_add(goodstops,LingoNumber(1))                        break                                            tmp_rep = rep                    tmp_rep += LingoNumber(1)                                    tmp_dir = dir                tmp_dir += LingoNumber(1)                            if LingoGlobal.op_eq_b(goodstops, LingoNumber(2)):                 self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("wireImage").image,self._global.member("wireImage").image.rect,self._global.member("wireImage").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.gLOprops.pals[self._movieScript.gLOprops.pal].detcol,LingoSymbol("ink"), LingoNumber(36)))                            return None            def applychain(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        big = LingoNumber(0)        match self._movieScript.chOp.lower():             case "fat":                big = LingoNumber(1)                                    if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             self._global.member("wireImage").image = self._global.image(self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.width,self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.height,LingoNumber(1))            mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            startpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            mycamera = self.closestcamera(LingoGlobal.op_add(startpos,LingoGlobal.op_mul(self._movieScript.gRenderCameraTilePos,LingoNumber(20))))            if LingoGlobal.op_eq_b(mycamera, LingoNumber(0)):                 return None                            a = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1.0000),self._global.random(LingoNumber(100))),self._global.random(self._global.random(self._global.random(LingoNumber(900)))))            keepitfromtoforty = self._global.random(LingoNumber(30))            a = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_mul(a,keepitfromtoforty),LingoNumber(40.0000)),LingoGlobal.op_add(keepitfromtoforty,LingoNumber(1.0000)))            if LingoGlobal.ToBool(big):                 a = LingoGlobal.op_add(a,LingoNumber(10))                            origornt = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))            goodstops = LingoNumber(0)            tmp_dir = LingoNumber(0)            while tmp_dir < LingoNumber(1):                 dir = tmp_dir                pnt = LingoGlobal.point(startpos.loch,startpos.locv)                lastpnt = LingoGlobal.point(startpos.loch,startpos.locv)                if LingoGlobal.op_eq_b(dir, LingoNumber(0)):                     ornt = origornt                                    else:                    ornt = LingoGlobal.op_sub(LingoNumber(1),origornt)                                    tmp_rep = LingoNumber(1)                while tmp_rep < LingoNumber(4000):                     rep = tmp_rep                    checkterrain = LingoNumber(0)                    pnt.loch = LingoGlobal.op_add(startpos.loch,LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_add(-LingoNumber(1),LingoGlobal.op_mul(LingoNumber(2),dir)),rep),LingoNumber(0.2500)))                    pnt.locv = LingoGlobal.op_sub(LingoGlobal.op_add(startpos.locv,a),LingoGlobal.op_mul(LingoGlobal.op_add(LingoGlobal.power(LingoNumber(2.7183),LingoGlobal.op_div(LingoGlobal.op_mul(rep,LingoNumber(0.2500)),a)),LingoGlobal.power(LingoNumber(2.7183),LingoGlobal.op_div(-LingoGlobal.op_mul(rep,LingoNumber(0.2500)),a))),LingoGlobal.op_div(a,LingoNumber(2.0000))))                    if LingoGlobal.op_eq_b(big, LingoNumber(0)):                         if self._movieScript.diag(pnt,lastpnt) >= LingoNumber(7):                             if LingoGlobal.ToBool(ornt):                                 pos = LingoGlobal.op_mul(LingoGlobal.op_add(pnt,lastpnt),LingoNumber(0.5000))                                rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(3),-LingoNumber(5),LingoNumber(3),LingoNumber(5)))                                gtrect = LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(6),LingoNumber(10))                                ornt = LingoNumber(0)                                                            else:                                pos = LingoGlobal.op_mul(LingoGlobal.op_add(pnt,lastpnt),LingoNumber(0.5000))                                rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(1),-LingoNumber(5),LingoNumber(1),LingoNumber(5)))                                gtrect = LingoGlobal.rect(LingoNumber(7),LingoNumber(0),LingoNumber(8),LingoNumber(10))                                ornt = LingoNumber(1)                                                            self._global.member("wireImage").image.copypixels(self._global.member("chainSegment").image,self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt)),gtrect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)),LingoSymbol("ink"), LingoNumber(36)))
                            lastpnt = LingoGlobal.point(pnt.loch,pnt.locv)                            checkterrain = LingoNumber(1)                                                                        elif self._movieScript.diag(pnt,lastpnt) >= LingoNumber(12):                         if LingoGlobal.ToBool(ornt):                             pos = LingoGlobal.op_mul(LingoGlobal.op_add(pnt,lastpnt),LingoNumber(0.5000))                            rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(6),-LingoNumber(10),LingoNumber(6),LingoNumber(10)))                            gtrect = LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(12),LingoNumber(20))                            ornt = LingoNumber(0)                                                    else:                            pos = LingoGlobal.op_mul(LingoGlobal.op_add(pnt,lastpnt),LingoNumber(0.5000))                            rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(2),-LingoNumber(10),LingoNumber(2),LingoNumber(10)))                            gtrect = LingoGlobal.rect(LingoNumber(13),LingoNumber(0),LingoNumber(16),LingoNumber(20))                            ornt = LingoNumber(1)                                                    self._global.member("wireImage").image.copypixels(self._global.member("bigChainSegment").image,self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt)),gtrect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)),LingoSymbol("ink"), LingoNumber(36)))
                        lastpnt = LingoGlobal.point(pnt.loch,pnt.locv)                        checkterrain = LingoNumber(1)                                            if LingoGlobal.ToBool(checkterrain):                         tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(LingoGlobal.point(pnt.loch,pnt.locv)),self._movieScript.gRenderCameraTilePos)                        if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                             break                                                    elif (LingoGlobal.op_eq_b(mycamera, self._movieScript.gCurrentRenderCamera) and LingoGlobal.op_eq_b(self.seenbycamera(mycamera,LingoGlobal.op_add(pnt,self._movieScript.gRenderCameraTilePos)), LingoNumber(1))):                             if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[tlpos.loch][tlpos.locv][lr][LingoNumber(1)], LingoNumber(1)):                                 if LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.getpixel(pnt), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     goodstops = LingoGlobal.op_add(goodstops,LingoNumber(1))                                    break                                                                                                                        elif LingoGlobal.ToBool(self._movieScript.solidafamv(tlpos,lr)):                             goodstops = LingoGlobal.op_add(goodstops,LingoNumber(1))                            break                                                                        tmp_rep = rep                    tmp_rep += LingoNumber(1)                                    tmp_dir = dir                tmp_dir += LingoNumber(1)                            if LingoGlobal.op_eq_b(goodstops, LingoNumber(2)):                 self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("wireImage").image,self._global.member("wireImage").image.rect,self._global.member("wireImage").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.gLOprops.pals[self._movieScript.gLOprops.pal].detcol,LingoSymbol("ink"), LingoNumber(36)))                            return None            def applycoloredwires(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             self._global.member("wireImage").image = self._global.image(self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.width,self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.height,LingoNumber(1))            mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            startpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            mycamera = self.closestcamera(LingoGlobal.op_add(startpos,LingoGlobal.op_mul(self._movieScript.gRenderCameraTilePos,LingoNumber(20))))            if LingoGlobal.op_eq_b(mycamera, LingoNumber(0)):                 return None                            fatness = LingoNumber(1)            match self._movieScript.fatOp.lower():                 case "2px":                    fatness = LingoNumber(2)                                    case "3px":                    fatness = LingoNumber(3)                                    case "random":                    fatness = self._global.random(LingoNumber(3))                                                a = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1.0000),self._global.random(LingoNumber(100))),self._global.random(self._global.random(self._global.random(LingoNumber(900)))))            keepitfromtoforty = self._global.random(LingoNumber(30))            a = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_mul(a,keepitfromtoforty),LingoNumber(40.0000)),LingoGlobal.op_add(keepitfromtoforty,LingoNumber(1.0000)))            self._global.member("wireImage").image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(startpos.loch,LingoGlobal.op_sub(startpos.locv,LingoNumber(1)),LingoGlobal.op_add(startpos.loch,LingoNumber(1)),LingoGlobal.op_add(startpos.locv,LingoNumber(1))),LingoGlobal.rect(-LingoGlobal.op_gt(fatness,LingoNumber(1)),-LingoGlobal.op_gt(fatness,LingoNumber(1)),LingoGlobal.op_eq(fatness,LingoNumber(3)),LingoGlobal.op_eq(fatness,LingoNumber(3)))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0))))
            goodstops = LingoNumber(0)            tmp_dir = LingoNumber(0)            while tmp_dir < LingoNumber(1):                 dir = tmp_dir                pnt = LingoGlobal.point(startpos.loch,startpos.locv)                lastpnt = LingoGlobal.point(startpos.loch,startpos.locv)                tmp_rep = LingoNumber(1)                while tmp_rep < LingoNumber(1000):                     rep = tmp_rep                    pnt.loch = LingoGlobal.op_add(startpos.loch,LingoGlobal.op_mul(LingoGlobal.op_add(-LingoNumber(1),LingoGlobal.op_mul(LingoNumber(2),dir)),rep))                    pnt.locv = LingoGlobal.op_sub(LingoGlobal.op_add(startpos.locv,a),LingoGlobal.op_mul(LingoGlobal.op_add(LingoGlobal.power(LingoNumber(2.7183),LingoGlobal.op_div(rep,a)),LingoGlobal.power(LingoNumber(2.7183),LingoGlobal.op_div(-rep,a))),LingoGlobal.op_div(a,LingoNumber(2.0000))))                    dr = self._movieScript.movetopoint(lastpnt,pnt,fatness.float)                    self._global.member("wireImage").image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(LingoGlobal.rect(pnt.loch,pnt.locv,LingoGlobal.op_add(pnt.loch,LingoNumber(1)),LingoGlobal.op_add(lastpnt.locv,LingoNumber(1))),LingoGlobal.rect(-LingoGlobal.op_gt(fatness,LingoNumber(1)),-LingoGlobal.op_gt(fatness,LingoNumber(1)),LingoGlobal.op_eq(fatness,LingoNumber(3)),LingoGlobal.op_eq(fatness,LingoNumber(3)))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0))))
                    lastpnt = LingoGlobal.point(pnt.loch,pnt.locv)                    tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(LingoGlobal.point(pnt.loch,pnt.locv)),self._movieScript.gRenderCameraTilePos)                    if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                         break                                            elif (LingoGlobal.op_eq_b(mycamera, self._movieScript.gCurrentRenderCamera) and LingoGlobal.op_eq_b(self.seenbycamera(mycamera,LingoGlobal.op_add(pnt,self._movieScript.gRenderCameraTilePos)), LingoNumber(1))):                         if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[tlpos.loch][tlpos.locv][lr][LingoNumber(1)], LingoNumber(1)):                             if LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.getpixel(pnt), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                 goodstops = LingoGlobal.op_add(goodstops,LingoNumber(1))                                break                                                                                                        elif LingoGlobal.ToBool(self._movieScript.solidafamv(tlpos,lr)):                         goodstops = LingoGlobal.op_add(goodstops,LingoNumber(1))                        break                                            tmp_rep = rep                    tmp_rep += LingoNumber(1)                                    tmp_dir = dir                tmp_dir += LingoNumber(1)                            if LingoGlobal.op_eq_b(goodstops, LingoNumber(2)):                 self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("wireImage").image,self._global.member("wireImage").image.rect,self._global.member("wireImage").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colrInd,LingoSymbol("ink"), LingoNumber(36)))
                self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdIndLayer,self._global.str(d))).image.copypixels(self._global.member("wireImage").image,self._global.member("wireImage").image.rect,self._global.member("wireImage").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                            return None            def applycoloredchains(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        big = LingoNumber(0)        match self._movieScript.chOp.lower():             case "fat":                big = LingoNumber(1)                                    if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             self._global.member("wireImage").image = self._global.image(self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.width,self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.height,LingoNumber(1))            mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            startpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            mycamera = self.closestcamera(LingoGlobal.op_add(startpos,LingoGlobal.op_mul(self._movieScript.gRenderCameraTilePos,LingoNumber(20))))            if LingoGlobal.op_eq_b(mycamera, LingoNumber(0)):                 return None                            a = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1.0000),self._global.random(LingoNumber(100))),self._global.random(self._global.random(self._global.random(LingoNumber(900)))))            keepitfromtoforty = self._global.random(LingoNumber(30))            a = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_mul(a,keepitfromtoforty),LingoNumber(40.0000)),LingoGlobal.op_add(keepitfromtoforty,LingoNumber(1.0000)))            if LingoGlobal.ToBool(big):                 a = LingoGlobal.op_add(a,LingoNumber(10))                            origornt = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))            goodstops = LingoNumber(0)            tmp_dir = LingoNumber(0)            while tmp_dir < LingoNumber(1):                 dir = tmp_dir                pnt = LingoGlobal.point(startpos.loch,startpos.locv)                lastpnt = LingoGlobal.point(startpos.loch,startpos.locv)                if LingoGlobal.op_eq_b(dir, LingoNumber(0)):                     ornt = origornt                                    else:                    ornt = LingoGlobal.op_sub(LingoNumber(1),origornt)                                    tmp_rep = LingoNumber(1)                while tmp_rep < LingoNumber(4000):                     rep = tmp_rep                    checkterrain = LingoNumber(0)                    pnt.loch = LingoGlobal.op_add(startpos.loch,LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_add(-LingoNumber(1),LingoGlobal.op_mul(LingoNumber(2),dir)),rep),LingoNumber(0.2500)))                    pnt.locv = LingoGlobal.op_sub(LingoGlobal.op_add(startpos.locv,a),LingoGlobal.op_mul(LingoGlobal.op_add(LingoGlobal.power(LingoNumber(2.7183),LingoGlobal.op_div(LingoGlobal.op_mul(rep,LingoNumber(0.2500)),a)),LingoGlobal.power(LingoNumber(2.7183),LingoGlobal.op_div(-LingoGlobal.op_mul(rep,LingoNumber(0.2500)),a))),LingoGlobal.op_div(a,LingoNumber(2.0000))))                    if LingoGlobal.op_eq_b(big, LingoNumber(0)):                         if self._movieScript.diag(pnt,lastpnt) >= LingoNumber(7):                             if LingoGlobal.ToBool(ornt):                                 pos = LingoGlobal.op_mul(LingoGlobal.op_add(pnt,lastpnt),LingoNumber(0.5000))                                rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(3),-LingoNumber(5),LingoNumber(3),LingoNumber(5)))                                gtrect = LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(6),LingoNumber(10))                                ornt = LingoNumber(0)                                                            else:                                pos = LingoGlobal.op_mul(LingoGlobal.op_add(pnt,lastpnt),LingoNumber(0.5000))                                rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(1),-LingoNumber(5),LingoNumber(1),LingoNumber(5)))                                gtrect = LingoGlobal.rect(LingoNumber(7),LingoNumber(0),LingoNumber(8),LingoNumber(10))                                ornt = LingoNumber(1)                                                            self._global.member("wireImage").image.copypixels(self._global.member("chainSegment").image,self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt)),gtrect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)),LingoSymbol("ink"), LingoNumber(36)))
                            lastpnt = LingoGlobal.point(pnt.loch,pnt.locv)                            checkterrain = LingoNumber(1)                                                                        elif self._movieScript.diag(pnt,lastpnt) >= LingoNumber(12):                         if LingoGlobal.ToBool(ornt):                             pos = LingoGlobal.op_mul(LingoGlobal.op_add(pnt,lastpnt),LingoNumber(0.5000))                            rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(6),-LingoNumber(10),LingoNumber(6),LingoNumber(10)))                            gtrect = LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(12),LingoNumber(20))                            ornt = LingoNumber(0)                                                    else:                            pos = LingoGlobal.op_mul(LingoGlobal.op_add(pnt,lastpnt),LingoNumber(0.5000))                            rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(2),-LingoNumber(10),LingoNumber(2),LingoNumber(10)))                            gtrect = LingoGlobal.rect(LingoNumber(13),LingoNumber(0),LingoNumber(16),LingoNumber(20))                            ornt = LingoNumber(1)                                                    self._global.member("wireImage").image.copypixels(self._global.member("bigChainSegment").image,self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt)),gtrect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)),LingoSymbol("ink"), LingoNumber(36)))
                        lastpnt = LingoGlobal.point(pnt.loch,pnt.locv)                        checkterrain = LingoNumber(1)                                            if LingoGlobal.ToBool(checkterrain):                         tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(LingoGlobal.point(pnt.loch,pnt.locv)),self._movieScript.gRenderCameraTilePos)                        if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                             break                                                    elif (LingoGlobal.op_eq_b(mycamera, self._movieScript.gCurrentRenderCamera) and LingoGlobal.op_eq_b(self.seenbycamera(mycamera,LingoGlobal.op_add(pnt,self._movieScript.gRenderCameraTilePos)), LingoNumber(1))):                             if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[tlpos.loch][tlpos.locv][lr][LingoNumber(1)], LingoNumber(1)):                                 if LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.getpixel(pnt), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     goodstops = LingoGlobal.op_add(goodstops,LingoNumber(1))                                    break                                                                                                                        elif LingoGlobal.ToBool(self._movieScript.solidafamv(tlpos,lr)):                             goodstops = LingoGlobal.op_add(goodstops,LingoNumber(1))                            break                                                                        tmp_rep = rep                    tmp_rep += LingoNumber(1)                                    tmp_dir = dir                tmp_dir += LingoNumber(1)                            if LingoGlobal.op_eq_b(goodstops, LingoNumber(2)):                 self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("wireImage").image,self._global.member("wireImage").image.rect,self._global.member("wireImage").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colrInd,LingoSymbol("ink"), LingoNumber(36)))
                self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdIndLayer,self._global.str(d))).image.copypixels(self._global.member("wireImage").image,self._global.member("wireImage").image.rect,self._global.member("wireImage").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                            return None            def applyringchains(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        big = LingoNumber(0)        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             self._global.member("wireImage").image = self._global.image(self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.width,self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.height,LingoNumber(1))            mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            startpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            mycamera = self.closestcamera(LingoGlobal.op_add(startpos,LingoGlobal.op_mul(self._movieScript.gRenderCameraTilePos,LingoNumber(20))))            if LingoGlobal.op_eq_b(mycamera, LingoNumber(0)):                 return None                            a = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1.0000),self._global.random(LingoNumber(100))),self._global.random(self._global.random(self._global.random(LingoNumber(900)))))            keepitfromtoforty = self._global.random(LingoNumber(30))            a = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_mul(a,keepitfromtoforty),LingoNumber(40.0000)),LingoGlobal.op_add(keepitfromtoforty,LingoNumber(1.0000)))            if LingoGlobal.ToBool(big):                 a = LingoGlobal.op_add(a,LingoNumber(10))                            origornt = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))            goodstops = LingoNumber(0)            tmp_dir = LingoNumber(0)            while tmp_dir < LingoNumber(1):                 dir = tmp_dir                pnt = LingoGlobal.point(startpos.loch,startpos.locv)                lastpnt = LingoGlobal.point(startpos.loch,startpos.locv)                if LingoGlobal.op_eq_b(dir, LingoNumber(0)):                     ornt = origornt                                    else:                    ornt = LingoGlobal.op_sub(LingoNumber(1),origornt)                                    tmp_rep = LingoNumber(1)                while tmp_rep < LingoNumber(4000):                     rep = tmp_rep                    checkterrain = LingoNumber(0)                    pnt.loch = LingoGlobal.op_add(startpos.loch,LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_add(-LingoNumber(1),LingoGlobal.op_mul(LingoNumber(2),dir)),rep),LingoNumber(0.2500)))                    pnt.locv = LingoGlobal.op_sub(LingoGlobal.op_add(startpos.locv,a),LingoGlobal.op_mul(LingoGlobal.op_add(LingoGlobal.power(LingoNumber(2.7183),LingoGlobal.op_div(LingoGlobal.op_mul(rep,LingoNumber(0.2500)),a)),LingoGlobal.power(LingoNumber(2.7183),LingoGlobal.op_div(-LingoGlobal.op_mul(rep,LingoNumber(0.2500)),a))),LingoGlobal.op_div(a,LingoNumber(2.0000))))                    if self._movieScript.diag(pnt,lastpnt) >= LingoNumber(12):                         if LingoGlobal.ToBool(ornt):                             pos = LingoGlobal.op_mul(LingoGlobal.op_add(pnt,lastpnt),LingoNumber(0.5000))                            rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(7),-LingoNumber(9),LingoNumber(7),LingoNumber(9)))                            gtrect = LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(14),LingoNumber(14))                            ornt = LingoNumber(0)                                                    else:                            pos = LingoGlobal.op_mul(LingoGlobal.op_add(pnt,lastpnt),LingoNumber(0.5000))                            rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(2),-LingoNumber(9),LingoNumber(2),LingoNumber(9)))                            gtrect = LingoGlobal.rect(LingoNumber(15),LingoNumber(0),LingoNumber(18),LingoNumber(14))                            ornt = LingoNumber(1)                                                    self._global.member("wireImage").image.copypixels(self._global.member("ringChainSegment").image,self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(lastpnt,pnt)),gtrect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)),LingoSymbol("ink"), LingoNumber(36)))
                        lastpnt = LingoGlobal.point(pnt.loch,pnt.locv)                        checkterrain = LingoNumber(1)                                            if LingoGlobal.ToBool(checkterrain):                         tlpos = LingoGlobal.op_add(self._movieScript.givegridpos(LingoGlobal.point(pnt.loch,pnt.locv)),self._movieScript.gRenderCameraTilePos)                        if LingoGlobal.op_eq_b(tlpos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoNumber(0)):                             break                                                    elif (LingoGlobal.op_eq_b(mycamera, self._movieScript.gCurrentRenderCamera) and LingoGlobal.op_eq_b(self.seenbycamera(mycamera,LingoGlobal.op_add(pnt,self._movieScript.gRenderCameraTilePos)), LingoNumber(1))):                             if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[tlpos.loch][tlpos.locv][lr][LingoNumber(1)], LingoNumber(1)):                                 if LingoGlobal.op_ne_b(self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.getpixel(pnt), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                     goodstops = LingoGlobal.op_add(goodstops,LingoNumber(1))                                    break                                                                                                                        elif LingoGlobal.ToBool(self._movieScript.solidafamv(tlpos,lr)):                             goodstops = LingoGlobal.op_add(goodstops,LingoNumber(1))                            break                                                                        tmp_rep = rep                    tmp_rep += LingoNumber(1)                                    tmp_dir = dir                tmp_dir += LingoNumber(1)                            if LingoGlobal.op_eq_b(goodstops, LingoNumber(2)):                 if LingoGlobal.op_ne_b(self._movieScript.gdIndLayer, "C"):                     self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("wireImage").image,self._global.member("wireImage").image.rect,self._global.member("wireImage").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colrInd,LingoSymbol("ink"), LingoNumber(36)))
                    self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdIndLayer,self._global.str(d))).image.copypixels(self._global.member("wireImage").image,self._global.member("wireImage").image.rect,self._global.member("wireImage").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                else:                    self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("wireImage").image,self._global.member("wireImage").image.rect,self._global.member("wireImage").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.gLOprops.pals[self._movieScript.gLOprops.pal].detcol,LingoSymbol("ink"), LingoNumber(36)))                                            return None            def applyfungiflower(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        lr = LingoNumber(1)        match self._movieScript.lrSup.lower():             case "all":                layer = self._global.random(LingoNumber(3))                            case "1":                layer = LingoNumber(1)                            case "2":                layer = LingoNumber(2)                            case "3":                layer = LingoNumber(3)                            case "1:st and 2:nd":                layer = self._global.random(LingoNumber(2))                            case "2:nd and 3:rd":                layer = LingoGlobal.op_add(self._global.random(LingoNumber(2)),LingoNumber(1))                            case _:                 layer = self._global.random(LingoNumber(3))                                    lr = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),self._global.random(LingoNumber(9))),LingoNumber(1))        if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(0)):             rnd = LingoNumber(0)            if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(1)):                 rnd = self._movieScript.gEffectProps.list[self._movieScript.gEffectProps.listpos]                flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                closestedge = LingoNumber(1000)                tmp_a = -LingoNumber(5)                while tmp_a < LingoNumber(5):                     a = tmp_a                    if LingoGlobal.op_ne_b(self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_add(q2,a),LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(1)):                         if LingoGlobal.abs(a) <= LingoGlobal.abs(closestedge):                             flp = LingoGlobal.op_gt(a,LingoNumber(0))                            closestedge = a                            if LingoGlobal.op_eq_b(a, LingoNumber(0)):                                 flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                                                                                                        tmp_a = a                    tmp_a += LingoNumber(1)                                    pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),self._global.random(LingoNumber(20))),LingoNumber(10)))                            elif LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_add(q2,LingoNumber(1)),c2),layer), LingoNumber(1)):                 rnd = LingoNumber(1)                flp = LingoNumber(0)                pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoNumber(10),-self._global.random(LingoNumber(10))))                            elif LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_sub(q2,LingoNumber(1)),c2),layer), LingoNumber(1)):                 rnd = LingoNumber(1)                flp = LingoNumber(1)                pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q2,c2)),LingoGlobal.point(-LingoNumber(10),-self._global.random(LingoNumber(10))))                            if LingoGlobal.op_ne_b(rnd, LingoNumber(0)):                 rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(80),-LingoNumber(80),LingoNumber(80),LingoNumber(80)))                gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(160)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(160)),LingoNumber(160)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))                if LingoGlobal.ToBool(flp):                     rct = self._movieScript.vertfliprect(rct)                                    self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("fungiFlowersGraf").image,rct,gtrect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))                    self._movieScript.gEffectProps.listpos = LingoGlobal.op_add(self._movieScript.gEffectProps.listpos,LingoNumber(1))        if self._movieScript.gEffectProps.listpos > self._movieScript.gEffectProps.list.count:             l = LingoList(LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5))            l2 = LingoList()            tmp_a = LingoNumber(1)            while tmp_a < LingoNumber(4):                 a = tmp_a                val = l[self._global.random(l.count)]                l2.add(val)
                l.deleteone(val)
                tmp_a = a                tmp_a += LingoNumber(1)                            self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            return None            def applycoloredfungiflower(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        lr = LingoNumber(1)        match self._movieScript.lrSup.lower():             case "all":                layer = self._global.random(LingoNumber(3))                            case "1":                layer = LingoNumber(1)                            case "2":                layer = LingoNumber(2)                            case "3":                layer = LingoNumber(3)                            case "1:st and 2:nd":                layer = self._global.random(LingoNumber(2))                            case "2:nd and 3:rd":                layer = LingoGlobal.op_add(self._global.random(LingoNumber(2)),LingoNumber(1))                            case _:                 layer = self._global.random(LingoNumber(3))                                    lr = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),self._global.random(LingoNumber(9))),LingoNumber(1))        if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(0)):             rnd = LingoNumber(0)            if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(1)):                 rnd = self._movieScript.gEffectProps.list[self._movieScript.gEffectProps.listpos]                flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                closestedge = LingoNumber(1000)                tmp_a = -LingoNumber(5)                while tmp_a < LingoNumber(5):                     a = tmp_a                    if LingoGlobal.op_ne_b(self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_add(q2,a),LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(1)):                         if LingoGlobal.abs(a) <= LingoGlobal.abs(closestedge):                             flp = LingoGlobal.op_gt(a,LingoNumber(0))                            closestedge = a                            if LingoGlobal.op_eq_b(a, LingoNumber(0)):                                 flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                                                                                                        tmp_a = a                    tmp_a += LingoNumber(1)                                    pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),self._global.random(LingoNumber(20))),LingoNumber(10)))                            elif LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_add(q2,LingoNumber(1)),c2),layer), LingoNumber(1)):                 rnd = LingoNumber(1)                flp = LingoNumber(0)                pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoNumber(10),-self._global.random(LingoNumber(10))))                            elif LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(LingoGlobal.op_sub(q2,LingoNumber(1)),c2),layer), LingoNumber(1)):                 rnd = LingoNumber(1)                flp = LingoNumber(1)                pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q2,c2)),LingoGlobal.point(-LingoNumber(10),-self._global.random(LingoNumber(10))))                            if LingoGlobal.op_ne_b(rnd, LingoNumber(0)):                 rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(80),-LingoNumber(80),LingoNumber(80),LingoNumber(80)))                gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(160)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(160)),LingoNumber(160)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))                if LingoGlobal.ToBool(flp):                     rct = self._movieScript.vertfliprect(rct)                                    self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("fungiFlowersGraf2").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                self._movieScript.copypixelstorooteffectcolor(self._movieScript.gdLayer,lr,rct,"fungiFlowersGrad",gtrect,LingoNumber(0.5000))                    self._movieScript.gEffectProps.listpos = LingoGlobal.op_add(self._movieScript.gEffectProps.listpos,LingoNumber(1))        if self._movieScript.gEffectProps.listpos > self._movieScript.gEffectProps.list.count:             l = LingoList(LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5))            l2 = LingoList()            tmp_a = LingoNumber(1)            while tmp_a < LingoNumber(4):                 a = tmp_a                val = l[self._global.random(l.count)]                l2.add(val)
                l.deleteone(val)
                tmp_a = a                tmp_a += LingoNumber(1)                            self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            return None            def applylhflower(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        lr = LingoNumber(1)        match self._movieScript.lrSup.lower():             case "all":                layer = self._global.random(LingoNumber(3))                            case "1":                layer = LingoNumber(1)                            case "2":                layer = LingoNumber(2)                            case "3":                layer = LingoNumber(3)                            case "1:st and 2:nd":                layer = self._global.random(LingoNumber(2))                            case "2:nd and 3:rd":                layer = LingoGlobal.op_add(self._global.random(LingoNumber(2)),LingoNumber(1))                            case _:                 layer = self._global.random(LingoNumber(3))                                    lr = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),self._global.random(LingoNumber(9))),LingoNumber(1))        if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(0)):             rnd = self._movieScript.gEffectProps.list[self._movieScript.gEffectProps.listpos]            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))            pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),self._global.random(LingoNumber(20))),LingoNumber(10)))            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(40),-LingoNumber(160),LingoNumber(40),LingoNumber(20)))            gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(80)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(80)),LingoNumber(180)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))            if LingoGlobal.ToBool(flp):                 rct = self._movieScript.vertfliprect(rct)                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("lightHouseFlowersGraf").image,rct,gtrect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))        self._movieScript.gEffectProps.listpos = LingoGlobal.op_add(self._movieScript.gEffectProps.listpos,LingoNumber(1))        if self._movieScript.gEffectProps.listpos > self._movieScript.gEffectProps.list.count:             l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6),LingoNumber(7),LingoNumber(8))            l2 = LingoList()            tmp_a = LingoNumber(1)            while tmp_a < LingoNumber(8):                 a = tmp_a                val = l[self._global.random(l.count)]                l2.add(val)
                l.deleteone(val)
                tmp_a = a                tmp_a += LingoNumber(1)                            self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            return None            def applycoloredlhflower(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        lr = LingoNumber(1)        match self._movieScript.lrSup.lower():             case "all":                layer = self._global.random(LingoNumber(3))                            case "1":                layer = LingoNumber(1)                            case "2":                layer = LingoNumber(2)                            case "3":                layer = LingoNumber(3)                            case "1:st and 2:nd":                layer = self._global.random(LingoNumber(2))                            case "2:nd and 3:rd":                layer = LingoGlobal.op_add(self._global.random(LingoNumber(2)),LingoNumber(1))                            case _:                 layer = self._global.random(LingoNumber(3))                                    lr = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),self._global.random(LingoNumber(9))),LingoNumber(1))        if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(0)):             rnd = self._movieScript.gEffectProps.list[self._movieScript.gEffectProps.listpos]            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))            pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),self._global.random(LingoNumber(20))),LingoNumber(10)))            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(40),-LingoNumber(160),LingoNumber(40),LingoNumber(20)))            gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(80)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(80)),LingoNumber(180)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))            if LingoGlobal.ToBool(flp):                 rct = self._movieScript.vertfliprect(rct)                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("lightHouseFlowersGraf2").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
            self._movieScript.copypixelstorooteffectcolor(self._movieScript.gdLayer,lr,rct,"lightHouseFlowersGrad",gtrect,LingoNumber(0.5000))        self._movieScript.gEffectProps.listpos = LingoGlobal.op_add(self._movieScript.gEffectProps.listpos,LingoNumber(1))        if self._movieScript.gEffectProps.listpos > self._movieScript.gEffectProps.list.count:             l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6),LingoNumber(7),LingoNumber(8))            l2 = LingoList()            tmp_a = LingoNumber(1)            while tmp_a < LingoNumber(8):                 a = tmp_a                val = l[self._global.random(l.count)]                l2.add(val)
                l.deleteone(val)
                tmp_a = a                tmp_a += LingoNumber(1)                            self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            return None            def applyassortedtrash(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        lr = LingoNumber(1)        match self._movieScript.lrSup.lower():             case "all":                layer = self._global.random(LingoNumber(3))                            case "1":                layer = LingoNumber(1)                            case "2":                layer = LingoNumber(2)                            case "3":                layer = LingoNumber(3)                            case "1:st and 2:nd":                layer = self._global.random(LingoNumber(2))                            case "2:nd and 3:rd":                layer = LingoGlobal.op_add(self._global.random(LingoNumber(2)),LingoNumber(1))                            case _:                 layer = self._global.random(LingoNumber(3))                                    lr = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),self._global.random(LingoNumber(9))),LingoNumber(1))        tmp_varAttr = LingoNumber(0)        while tmp_varAttr < LingoNumber(2):             varattr = tmp_varAttr            if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(0)):                 rnd = self._movieScript.gEffectProps.list[self._movieScript.gEffectProps.listpos]                flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))                pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),self._global.random(LingoNumber(20))),LingoNumber(10)))                rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(25),-LingoNumber(25),LingoNumber(25),LingoNumber(25)))                rct2 = self._movieScript.rotatetoquad(rct,self._global.random(LingoNumber(360)))                gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(50)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(50)),LingoNumber(50)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))                if LingoGlobal.op_eq_b(self._movieScript.gdIndLayer, "C"):                     self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("assortedTrash").image,rct2,gtrect,LingoPropertyList(LingoSymbol("color"), LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)))[self._global.random(LingoNumber(3))],LingoSymbol("ink"), LingoNumber(36)))                else:                    self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("assortedTrash").image,rct2,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colrInd,LingoSymbol("ink"), LingoNumber(36)))
                    self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdIndLayer,self._global.str(lr))).image.copypixels(self._global.member("assortedTrash").image,rct2,gtrect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                            tmp_varAttr = varattr            tmp_varAttr += LingoNumber(1)                    self._movieScript.gEffectProps.listpos = LingoGlobal.op_add(self._movieScript.gEffectProps.listpos,LingoNumber(1))        if self._movieScript.gEffectProps.listpos > self._movieScript.gEffectProps.list.count:             l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6),LingoNumber(7),LingoNumber(8),LingoNumber(9),LingoNumber(10),LingoNumber(11),LingoNumber(12),LingoNumber(13),LingoNumber(14),LingoNumber(15),LingoNumber(16),LingoNumber(17),LingoNumber(18),LingoNumber(19),LingoNumber(20),LingoNumber(21),LingoNumber(22),LingoNumber(23),LingoNumber(24),LingoNumber(25),LingoNumber(26),LingoNumber(27),LingoNumber(28),LingoNumber(29),LingoNumber(30),LingoNumber(31),LingoNumber(32),LingoNumber(33),LingoNumber(34),LingoNumber(35),LingoNumber(36),LingoNumber(37),LingoNumber(38),LingoNumber(39),LingoNumber(40),LingoNumber(41),LingoNumber(42),LingoNumber(43),LingoNumber(44),LingoNumber(45),LingoNumber(46),LingoNumber(47),LingoNumber(48))            l2 = LingoList()            tmp_a = LingoNumber(1)            while tmp_a < LingoNumber(48):                 a = tmp_a                val = l[self._global.random(l.count)]                l2.add(val)
                l.deleteone(val)
                tmp_a = a                tmp_a += LingoNumber(1)                            self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            return None            def applyresroots(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                lrmin = LingoNumber(1)                lrmax = LingoNumber(3)                            case "1":                lrmin = LingoNumber(1)                lrmax = LingoNumber(1)                            case "2":                lrmin = LingoNumber(2)                lrmax = LingoNumber(2)                            case "3":                lrmin = LingoNumber(3)                lrmax = LingoNumber(3)                            case "1:st and 2:nd":                lrmin = LingoNumber(1)                lrmax = LingoNumber(2)                            case "2:nd and 3:rd":                lrmin = LingoNumber(2)                lrmax = LingoNumber(3)                            case _:                 lrmin = LingoNumber(1)                lrmax = LingoNumber(3)                                    if LingoGlobal.op_eq_b(self._movieScript.gdLayer, "C"):             tmp_tr = lrmin            while tmp_tr < lrmax:                 tr = tmp_tr                if (LingoGlobal.op_ne_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),tr), LingoNumber(0)) and self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] >= LingoNumber(50)):                     pnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))                    rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(10),-LingoNumber(10),LingoNumber(10),LingoNumber(10)))                    rct2 = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoList(LingoGlobal.rect(-LingoNumber(15),-LingoNumber(15),LingoNumber(5),LingoNumber(5)),LingoGlobal.rect(-LingoNumber(5),-LingoNumber(5),LingoNumber(15),LingoNumber(15)))[self._global.random(LingoNumber(2))])                    rct3 = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(5),-LingoNumber(5),LingoNumber(15),LingoNumber(15)))                    self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_mul(LingoGlobal.op_sub(tr,LingoNumber(1)),LingoNumber(10))))).image.copypixels(self._global.member(LingoGlobal.concat("CloverRoot",self._global.str(self._global.random(LingoNumber(6))))).image,rct,self._global.member("CloverRoot1").rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)),LingoSymbol("ink"), LingoNumber(36)))
                    self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_mul(LingoGlobal.op_sub(tr,LingoNumber(1)),LingoNumber(10))))).image.copypixels(self._global.member(LingoGlobal.concat("CloverRoot",self._global.str(self._global.random(LingoNumber(6))))).image,rct2,self._global.member("CloverRoot1").rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)),LingoSymbol("ink"), LingoNumber(36)))
                    self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(tr,LingoNumber(1)),LingoNumber(10)),LingoNumber(5))))).image.copypixels(self._global.member(LingoGlobal.concat("CloverRoot",self._global.str(self._global.random(LingoNumber(6))))).image,rct,self._global.member("CloverRoot1").rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)),LingoSymbol("ink"), LingoNumber(36)))
                    self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(tr,LingoNumber(1)),LingoNumber(10)),LingoNumber(5))))).image.copypixels(self._global.member(LingoGlobal.concat("CloverRoot",self._global.str(self._global.random(LingoNumber(6))))).image,rct2,self._global.member("CloverRoot1").rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)),LingoSymbol("ink"), LingoNumber(36)))                tmp_tr = tr                tmp_tr += LingoNumber(1)                                    else:            tmp_tr = lrmin            while tmp_tr < lrmax:                 tr = tmp_tr                if (LingoGlobal.op_ne_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),tr), LingoNumber(0)) and self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][c2] >= LingoNumber(15)):                     pnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))                    rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(10),-LingoNumber(10),LingoNumber(10),LingoNumber(10)))                    rct2 = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoList(LingoGlobal.rect(-LingoNumber(15),-LingoNumber(15),LingoNumber(5),LingoNumber(5)),LingoGlobal.rect(-LingoNumber(5),-LingoNumber(5),LingoNumber(15),LingoNumber(15)))[self._global.random(LingoNumber(2))])                    rct3 = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(5),-LingoNumber(5),LingoNumber(15),LingoNumber(15)))                    var1 = LingoGlobal.concat("CloverRoot",self._global.str(self._global.random(LingoNumber(6))))                    var2 = LingoGlobal.concat("CloverRoot",self._global.str(self._global.random(LingoNumber(6))))                    var3 = LingoGlobal.concat("CloverRoot",self._global.str(self._global.random(LingoNumber(6))))                    var4 = LingoGlobal.concat("CloverRoot",self._global.str(self._global.random(LingoNumber(6))))                    self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_mul(LingoGlobal.op_sub(tr,LingoNumber(1)),LingoNumber(10))))).image.copypixels(self._global.member(var1).image,rct,self._global.member("CloverRoot1").rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                    self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(LingoGlobal.op_mul(LingoGlobal.op_sub(tr,LingoNumber(1)),LingoNumber(10))))).image.copypixels(self._global.member(LingoGlobal.concat(var1,"G")).image,rct,self._global.member("CloverRoot1").rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))
                    self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_mul(LingoGlobal.op_sub(tr,LingoNumber(1)),LingoNumber(10))))).image.copypixels(self._global.member(var2).image,rct2,self._global.member("CloverRoot1").rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                    self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(LingoGlobal.op_mul(LingoGlobal.op_sub(tr,LingoNumber(1)),LingoNumber(10))))).image.copypixels(self._global.member(LingoGlobal.concat(var2,"G")).image,rct2,self._global.member("CloverRoot1").rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))
                    self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(tr,LingoNumber(1)),LingoNumber(10)),LingoNumber(5))))).image.copypixels(self._global.member(var3).image,rct,self._global.member("CloverRoot1").rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                    self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(tr,LingoNumber(1)),LingoNumber(10)),LingoNumber(5))))).image.copypixels(self._global.member(LingoGlobal.concat(var3,"G")).image,rct,self._global.member("CloverRoot1").rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))
                    self._global.member(LingoGlobal.concat("layer",self._global.str(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(tr,LingoNumber(1)),LingoNumber(10)),LingoNumber(5))))).image.copypixels(self._global.member(var4).image,rct2,self._global.member("CloverRoot1").rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
                    self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(tr,LingoNumber(1)),LingoNumber(10)),LingoNumber(5))))).image.copypixels(self._global.member(LingoGlobal.concat(var4,"G")).image,rct2,self._global.member("CloverRoot1").rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                tmp_tr = tr                tmp_tr += LingoNumber(1)                                            return None            def applyfoliage(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        lr = LingoNumber(1)        match self._movieScript.lrSup.lower():             case "all":                layer = self._global.random(LingoNumber(3))                            case "1":                layer = LingoNumber(1)                            case "2":                layer = LingoNumber(2)                            case "3":                layer = LingoNumber(3)                            case "1:st and 2:nd":                layer = self._global.random(LingoNumber(2))                            case "2:nd and 3:rd":                layer = LingoGlobal.op_add(self._global.random(LingoNumber(2)),LingoNumber(1))                            case _:                 layer = self._global.random(LingoNumber(3))                                    lr = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),self._global.random(LingoNumber(9))),LingoNumber(1))        if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(0)):             rnd = self._movieScript.gEffectProps.list[self._movieScript.gEffectProps.listpos]            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))            pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),self._global.random(LingoNumber(20))),LingoNumber(10)))            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(80),-LingoNumber(320),LingoNumber(80),LingoNumber(40)))            gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(160)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(160)),LingoNumber(360)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))            if LingoGlobal.ToBool(flp):                 rct = self._movieScript.vertfliprect(rct)                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("foliageGraf3").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
            self._movieScript.copypixelstorooteffectcolor(self._movieScript.gdLayer,lr,rct,"foliageGrad3",gtrect,LingoNumber(0.5000))        self._movieScript.gEffectProps.listpos = LingoGlobal.op_add(self._movieScript.gEffectProps.listpos,LingoNumber(1))        if self._movieScript.gEffectProps.listpos > self._movieScript.gEffectProps.list.count:             l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6),LingoNumber(7),LingoNumber(8),LingoNumber(9),LingoNumber(10),LingoNumber(11),LingoNumber(12),LingoNumber(13),LingoNumber(14),LingoNumber(15),LingoNumber(16),LingoNumber(17),LingoNumber(18),LingoNumber(19),LingoNumber(20),LingoNumber(21),LingoNumber(22),LingoNumber(23),LingoNumber(24),LingoNumber(25),LingoNumber(26),LingoNumber(27),LingoNumber(28))            l2 = LingoList()            tmp_a = LingoNumber(1)            while tmp_a < LingoNumber(28):                 a = tmp_a                val = l[self._global.random(l.count)]                l2.add(val)
                l.deleteone(val)
                tmp_a = a                tmp_a += LingoNumber(1)                            self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            return None            def applymistletoe(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        lr = LingoNumber(1)        match self._movieScript.lrSup.lower():             case "all":                layer = self._global.random(LingoNumber(3))                            case "1":                layer = LingoNumber(1)                            case "2":                layer = LingoNumber(2)                            case "3":                layer = LingoNumber(3)                            case "1:st and 2:nd":                layer = self._global.random(LingoNumber(2))                            case "2:nd and 3:rd":                layer = LingoGlobal.op_add(self._global.random(LingoNumber(2)),LingoNumber(1))                            case _:                 layer = self._global.random(LingoNumber(3))                                    lr = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),self._global.random(LingoNumber(9))),LingoNumber(1))        if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(0)):             rnd = self._movieScript.gEffectProps.list[self._movieScript.gEffectProps.listpos]            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))            pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),self._global.random(LingoNumber(20))),LingoNumber(10)))            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(80),-LingoNumber(320),LingoNumber(80),LingoNumber(40)))            gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(160)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(160)),LingoNumber(360)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))            if LingoGlobal.ToBool(flp):                 rct = self._movieScript.vertfliprect(rct)                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("mistletoeGraf2").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
            self._movieScript.copypixelstorooteffectcolor(self._movieScript.gdLayer,lr,rct,"mistletoeGrad2",gtrect,LingoNumber(0.5000))        self._movieScript.gEffectProps.listpos = LingoGlobal.op_add(self._movieScript.gEffectProps.listpos,LingoNumber(1))        if self._movieScript.gEffectProps.listpos > self._movieScript.gEffectProps.list.count:             l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6))            l2 = LingoList()            tmp_a = LingoNumber(1)            while tmp_a < LingoNumber(6):                 a = tmp_a                val = l[self._global.random(l.count)]                l2.add(val)
                l.deleteone(val)
                tmp_a = a                tmp_a += LingoNumber(1)                            self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            return None            def applyhighfern(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        lr = LingoNumber(1)        match self._movieScript.lrSup.lower():             case "all":                layer = self._global.random(LingoNumber(3))                            case "1":                layer = LingoNumber(1)                            case "2":                layer = LingoNumber(2)                            case "3":                layer = LingoNumber(3)                            case "1:st and 2:nd":                layer = self._global.random(LingoNumber(2))                            case "2:nd and 3:rd":                layer = LingoGlobal.op_add(self._global.random(LingoNumber(2)),LingoNumber(1))                            case _:                 layer = self._global.random(LingoNumber(3))                                    lr = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),self._global.random(LingoNumber(9))),LingoNumber(1))        if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(0)):             rnd = self._movieScript.gEffectProps.list[self._movieScript.gEffectProps.listpos]            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))            pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),self._global.random(LingoNumber(20))),LingoNumber(10)))            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(40),-LingoNumber(160),LingoNumber(40),LingoNumber(20)))            gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(80)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(80)),LingoNumber(180)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))            if LingoGlobal.ToBool(flp):                 rct = self._movieScript.vertfliprect(rct)                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("highFernGraf").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
            self._movieScript.copypixelstorooteffectcolor(self._movieScript.gdLayer,lr,rct,"highFernGrad3",gtrect,LingoNumber(0.5000))        self._movieScript.gEffectProps.listpos = LingoGlobal.op_add(self._movieScript.gEffectProps.listpos,LingoNumber(1))        if self._movieScript.gEffectProps.listpos > self._movieScript.gEffectProps.list.count:             l = LingoList(LingoNumber(1),LingoNumber(2))            l2 = LingoList()            tmp_a = LingoNumber(1)            while tmp_a < LingoNumber(2):                 a = tmp_a                val = l[self._global.random(l.count)]                l2.add(val)
                l.deleteone(val)
                tmp_a = a                tmp_a += LingoNumber(1)                            self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            return None            def applyhighgrass(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        lr = LingoNumber(1)        match self._movieScript.lrSup.lower():             case "all":                layer = self._global.random(LingoNumber(3))                            case "1":                layer = LingoNumber(1)                            case "2":                layer = LingoNumber(2)                            case "3":                layer = LingoNumber(3)                            case "1:st and 2:nd":                layer = self._global.random(LingoNumber(2))                            case "2:nd and 3:rd":                layer = LingoGlobal.op_add(self._global.random(LingoNumber(2)),LingoNumber(1))                            case _:                 layer = self._global.random(LingoNumber(3))                                    lr = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),self._global.random(LingoNumber(9))),LingoNumber(1))        if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(0)):             rnd = self._movieScript.gEffectProps.list[self._movieScript.gEffectProps.listpos]            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))            pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),self._global.random(LingoNumber(20))),LingoNumber(10)))            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(40),-LingoNumber(160),LingoNumber(40),LingoNumber(20)))            gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(80)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(80)),LingoNumber(180)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))            if LingoGlobal.ToBool(flp):                 rct = self._movieScript.vertfliprect(rct)                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("highGrassGraf").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
            self._movieScript.copypixelstorooteffectcolor(self._movieScript.gdLayer,lr,rct,"highGrassGrad3",gtrect,LingoNumber(0.5000))        self._movieScript.gEffectProps.listpos = LingoGlobal.op_add(self._movieScript.gEffectProps.listpos,LingoNumber(1))        if self._movieScript.gEffectProps.listpos > self._movieScript.gEffectProps.list.count:             l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4))            l2 = LingoList()            tmp_a = LingoNumber(1)            while tmp_a < LingoNumber(4):                 a = tmp_a                val = l[self._global.random(l.count)]                l2.add(val)
                l.deleteone(val)
                tmp_a = a                tmp_a += LingoNumber(1)                            self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            return None            def applysmallsprings(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        lr = LingoNumber(1)        match self._movieScript.lrSup.lower():             case "all":                layer = self._global.random(LingoNumber(3))                            case "1":                layer = LingoNumber(1)                            case "2":                layer = LingoNumber(2)                            case "3":                layer = LingoNumber(3)                            case "1:st and 2:nd":                layer = self._global.random(LingoNumber(2))                            case "2:nd and 3:rd":                layer = LingoGlobal.op_add(self._global.random(LingoNumber(2)),LingoNumber(1))                            case _:                 layer = self._global.random(LingoNumber(3))                                    lr = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),self._global.random(LingoNumber(9))),LingoNumber(1))        if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(0)):             rnd = self._movieScript.gEffectProps.list[self._movieScript.gEffectProps.listpos]            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))            pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),self._global.random(LingoNumber(20))),LingoNumber(10)))            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(40),-LingoNumber(160),LingoNumber(40),LingoNumber(20)))            gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(80)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(80)),LingoNumber(180)),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(1),LingoNumber(0)))            if LingoGlobal.ToBool(flp):                 rct = self._movieScript.vertfliprect(rct)                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member("smallSpringsGraf").image,rct,gtrect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(36)))
            self._movieScript.copypixelstorooteffectcolor(self._movieScript.gdLayer,lr,rct,"smallSpringsGrad",gtrect,LingoNumber(0.5000))        self._movieScript.gEffectProps.listpos = LingoGlobal.op_add(self._movieScript.gEffectProps.listpos,LingoNumber(1))        if self._movieScript.gEffectProps.listpos > self._movieScript.gEffectProps.list.count:             l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6),LingoNumber(7))            l2 = LingoList()            tmp_a = LingoNumber(1)            while tmp_a < LingoNumber(7):                 a = tmp_a                val = l[self._global.random(l.count)]                l2.add(val)
                l.deleteone(val)
                tmp_a = a                tmp_a += LingoNumber(1)                            self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            return None            def applyivy(self, q, c, eftc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        match self._movieScript.lrSup.lower():             case "all":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                            case "1":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1))                            case "2":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(10))                            case "3":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(10)),LingoNumber(1)),LingoNumber(20))                            case "1:st and 2:nd":                d = LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1))                            case "2:nd and 3:rd":                d = LingoGlobal.op_add(LingoGlobal.op_sub(self._global.random(LingoNumber(20)),LingoNumber(1)),LingoNumber(10))                            case _:                 d = LingoGlobal.op_sub(self._global.random(LingoNumber(30)),LingoNumber(1))                                    lr = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(d,LingoNumber(9))),LingoGlobal.op_gt(d,LingoNumber(19)))        if LingoGlobal.op_eq_b(self._movieScript.gLEProps.matrix[q2][c2][lr][LingoNumber(1)], LingoNumber(0)):             mdpnt = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))            headpos = LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21))),LingoGlobal.op_add(-LingoNumber(11),self._global.random(LingoNumber(21)))))            pnt = LingoGlobal.point(headpos.loch,headpos.locv)            lftborder = LingoGlobal.op_sub(mdpnt.loch,LingoNumber(10))            rgthborder = LingoGlobal.op_add(mdpnt.loch,LingoNumber(10))            ivygrad = self._global.member("IvyLeafGradMed").image            fruitpercent = LingoNumber(50)            match self._movieScript.fruitDensity.lower():                 case "h":                    fruitpercent = LingoNumber(75)                                    case "m":                    fruitpercent = LingoNumber(50)                                    case "l":                    fruitpercent = LingoNumber(25)                                    case "n":                    fruitpercent = LingoNumber(0)                                                match self._movieScript.colrIntensity.lower():                 case "h":                    ivygrad = self._global.member("IvyLeafGraf").image                                    case "m":                    ivygrad = self._global.member("IvyLeafGradMed").image                                    case "l":                    ivygrad = self._global.member("IvyLeafGradLow").image                                    case "n":                    ivygrad = LingoImage.Pxl                                    case "r":                    if LingoGlobal.op_eq_b(self._movieScript.colrIntensity, "R"):                         ivyrngrad = self._global.random(LingoNumber(4))                        match ivyrngrad if ivyrngrad is not None else 9999999999:                             case 1:                                ivygrad = self._global.member("IvyLeafGraf").image                                                            case 2:                                ivygrad = self._global.member("IvyLeafGradMed").image                                                            case 3:                                ivygrad = self._global.member("IvyLeafGradLow").image                                                            case 4:                                ivygrad = LingoImage.Pxl                                                                                                                                    ivyrandom = self._global.random(LingoNumber(100))            while LingoGlobal.ToBool(LingoGlobal.op_gt(LingoGlobal.op_add(pnt.locv,LingoGlobal.op_mul(self._movieScript.gRenderCameraTilePos.locv,LingoNumber(20))),-LingoNumber(100))):                 ivyrandom = self._global.random(LingoNumber(100))                fruitrandom = self._global.random(LingoNumber(100))                lstpos = pnt                pnt = LingoGlobal.op_add(pnt,LingoGlobal.op_mul(self._movieScript.degtovec(LingoGlobal.op_add(-LingoNumber(45),self._global.random(LingoNumber(90)))),LingoGlobal.op_add(LingoNumber(2),self._global.random(LingoNumber(6)))))                pnt.loch = self._movieScript.restrict(pnt.loch,lftborder,rgthborder)                dir = self._movieScript.movetopoint(pnt,lstpos,LingoNumber(1.0000))                crossdir = self._movieScript.givedirfor90degrtoline(-dir,dir)                qd = LingoList(LingoGlobal.op_sub(pnt,crossdir),LingoGlobal.op_add(pnt,crossdir),LingoGlobal.op_add(lstpos,crossdir),LingoGlobal.op_sub(lstpos,crossdir))                test = LingoList(LingoGlobal.op_sub(LingoGlobal.op_sub(pnt,crossdir),LingoNumber(2)),LingoGlobal.op_add(pnt,crossdir),LingoGlobal.op_sub(LingoGlobal.op_add(lstpos,crossdir),LingoNumber(2)),LingoGlobal.op_sub(lstpos,crossdir))                fruitytest = LingoList(LingoGlobal.op_sub(LingoGlobal.op_sub(pnt,crossdir),LingoNumber(1)),LingoGlobal.op_add(pnt,crossdir),LingoGlobal.op_sub(LingoGlobal.op_add(lstpos,crossdir),LingoNumber(1)),LingoGlobal.op_sub(lstpos,crossdir))                fuck = LingoGlobal.op_add(test,self._global.member("IvyLeafGraf").image.rect)                fruity = LingoGlobal.op_add(fruitytest,self._global.member("IvyFruit").image.rect)                self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(LingoImage.Pxl,qd,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(10)))
                if fruitrandom < fruitpercent:                     self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("IvyFruit").image,fruity,self._global.member("IvyFruit").image.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(255)),LingoSymbol("ink"), LingoNumber(10)))
                    self._global.member(LingoGlobal.concat("gradient","A",self._global.str(d))).image.copypixels(self._global.member("IvyFruit").image,fruity,self._global.member("IvyFruit").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                if ivyrandom < self._movieScript.leafDensity:                     self._global.member(LingoGlobal.concat("layer",self._global.str(d))).image.copypixels(self._global.member("IvyLeafGraf").image,fuck,self._global.member("IvyLeafGraf").image.rect,LingoPropertyList(LingoSymbol("color"), self._movieScript.colr,LingoSymbol("ink"), LingoNumber(10)))
                    if (LingoGlobal.op_ne_b(self._movieScript.colrIntensity, "N") and LingoGlobal.op_ne_b(self._movieScript.gdLayer, "C")):                         self._global.member(LingoGlobal.concat("gradient",self._movieScript.gdLayer,self._global.str(d))).image.copypixels(ivygrad,fuck,ivygrad.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(39)))                                    if LingoGlobal.op_eq_b(self._movieScript.colrIntensity, "R"):                     ivyrngrad = self._global.random(LingoNumber(4))                    match ivyrngrad if ivyrngrad is not None else 9999999999:                         case 1:                            ivygrad = self._global.member("IvyLeafGraf").image                                                    case 2:                            ivygrad = self._global.member("IvyLeafGradMed").image                                                    case 3:                            ivygrad = self._global.member("IvyLeafGradLow").image                                                    case 4:                            ivygrad = LingoImage.Pxl                                                                                        if LingoGlobal.op_eq_b(self._movieScript.solidafamv(LingoGlobal.op_add(self._movieScript.givegridpos(lstpos),self._movieScript.gRenderCameraTilePos),lr), LingoNumber(1)):                     break                                                                return None            def applybigplant(self, q, c):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        lr = LingoNumber(1)        match self._movieScript.lrSup.lower():             case "all":                layer = self._global.random(LingoNumber(3))                            case "1":                layer = LingoNumber(1)                            case "2":                layer = LingoNumber(2)                            case "3":                layer = LingoNumber(3)                            case "1:st and 2:nd":                layer = self._global.random(LingoNumber(2))                            case "2:nd and 3:rd":                layer = LingoGlobal.op_add(self._global.random(LingoNumber(2)),LingoNumber(1))                            case _:                 layer = self._global.random(LingoNumber(3))                                    mem = "fern"        match self._movieScript.gEEprops.effects[self._movieScript.r].nm.lower():             case "fern":                pass                            case "giant mushroom":                mem = "giantMushroom"                                    lr = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),self._global.random(LingoNumber(9))),LingoNumber(1))        if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(0)):             rnd = self._movieScript.gEffectProps.list[self._movieScript.gEffectProps.listpos]            flp = LingoGlobal.op_sub(self._global.random(LingoNumber(2)),LingoNumber(1))            pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),self._global.random(LingoNumber(20))),LingoNumber(10)))            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(50),-LingoNumber(80),LingoNumber(50),LingoNumber(20)))            gtrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(100)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(100)),LingoNumber(100)),LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoNumber(1),LingoNumber(1)))            if LingoGlobal.ToBool(flp):                 rct = self._movieScript.vertfliprect(rct)                            self._global.member(LingoGlobal.concat("layer",self._global.str(lr))).image.copypixels(self._global.member(LingoGlobal.concat(mem,"Graf")).image,rct,gtrect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._movieScript.colr))
            pnt = self._movieScript.depthpnt(pnt,LingoGlobal.op_sub(lr,LingoNumber(5)))            rct = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(50),-LingoNumber(80),LingoNumber(50),LingoNumber(20)))            if LingoGlobal.ToBool(flp):                 rct = self._movieScript.vertfliprect(rct)                            self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,lr,rct,LingoGlobal.concat(mem,"Grad"),LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(100)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(100)),LingoNumber(100)),LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoNumber(1),LingoNumber(1))),LingoNumber(0.5000))        self._movieScript.gEffectProps.listpos = LingoGlobal.op_add(self._movieScript.gEffectProps.listpos,LingoNumber(1))        if self._movieScript.gEffectProps.listpos > self._movieScript.gEffectProps.list.count:             l = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3),LingoNumber(4),LingoNumber(5),LingoNumber(6),LingoNumber(7),LingoNumber(8))            l2 = LingoList()            tmp_a = LingoNumber(1)            while tmp_a < LingoNumber(8):                 a = tmp_a                val = l[self._global.random(l.count)]                l2.add(val)
                l.deleteone(val)
                tmp_a = a                tmp_a += LingoNumber(1)                            self._movieScript.gEffectProps = LingoPropertyList(LingoSymbol("list"), l2,LingoSymbol("listpos"), LingoNumber(1))                            return None            def apply3dsprawler(self, q, c, effc):         q2 = LingoGlobal.op_add(q,self._movieScript.gRenderCameraTilePos.loch)        c2 = LingoGlobal.op_add(c,self._movieScript.gRenderCameraTilePos.locv)        big = LingoNumber(0)        if (c > LingoNumber(1) and LingoGlobal.op_sub(c2,LingoNumber(1)) > LingoNumber(0)):             big = LingoGlobal.op_gt(self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[q2][LingoGlobal.op_sub(c2,LingoNumber(1))],LingoNumber(0))                    lr = LingoNumber(1)        match self._movieScript.lrSup.lower():             case "all":                layer = self._global.random(LingoNumber(3))                lrrange = LingoList(LingoNumber(0),LingoNumber(29))                            case "1":                layer = LingoNumber(1)                            case "2":                layer = LingoNumber(2)                lrrange = LingoList(LingoNumber(6),LingoNumber(29))                            case "3":                layer = LingoNumber(3)                lrrange = LingoList(LingoNumber(6),LingoNumber(29))                            case "1:st and 2:nd":                layer = self._global.random(LingoNumber(2))                lrrange = LingoList(LingoNumber(0),LingoNumber(29))                            case "2:nd and 3:rd":                layer = LingoGlobal.op_add(self._global.random(LingoNumber(2)),LingoNumber(1))                lrrange = LingoList(LingoNumber(6),LingoNumber(29))                            case _:                 layer = self._global.random(LingoNumber(3))                lrrange = LingoList(LingoNumber(0),LingoNumber(29))                                    lr = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),self._global.random(LingoNumber(9))),LingoNumber(1))        if LingoGlobal.op_eq_b(layer, LingoNumber(1)):             if lr < LingoNumber(5):                 lrrange = LingoList(LingoNumber(0),LingoNumber(5))                            else:                lrrange = LingoList(LingoNumber(6),LingoNumber(29))                                    match effc.lower():             case "sprawlbush":                sts = LingoPropertyList(LingoSymbol("branches"), LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(10),self._global.random(LingoNumber(10))),LingoGlobal.op_mul(LingoNumber(15),big)),LingoSymbol("expectedbranchlife"), LingoPropertyList(LingoSymbol("small"), LingoNumber(20),LingoSymbol("big"), LingoNumber(35),LingoSymbol("smallrandom"), LingoNumber(30),LingoSymbol("bigrandom"), LingoNumber(70)),LingoSymbol("starttired"), LingoNumber(0),LingoSymbol("avoidwalls"), LingoNumber(1.0000),LingoSymbol("generaldir"), LingoNumber(0.6000),LingoSymbol("randomdir"), LingoNumber(1.2000),LingoSymbol("step"), LingoNumber(6.0000))                            case "featherfern":                sts = LingoPropertyList(LingoSymbol("branches"), LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(3),self._global.random(LingoNumber(3))),LingoGlobal.op_mul(LingoNumber(3),big)),LingoSymbol("expectedbranchlife"), LingoPropertyList(LingoSymbol("small"), LingoNumber(130),LingoSymbol("big"), LingoNumber(200),LingoSymbol("smallrandom"), LingoNumber(50),LingoSymbol("bigrandom"), LingoNumber(100)),LingoSymbol("starttired"), LingoGlobal.op_sub(-LingoNumber(77),LingoGlobal.op_mul(LingoNumber(77),big)),LingoSymbol("avoidwalls"), LingoNumber(0.6000),LingoSymbol("generaldir"), LingoNumber(1.2000),LingoSymbol("randomdir"), LingoNumber(0.6000),LingoSymbol("step"), LingoNumber(2.0000),LingoSymbol("feathercounter"), LingoNumber(0),LingoSymbol("airroots"), LingoNumber(0))                            case "fungus tree":                sts = LingoPropertyList(LingoSymbol("branches"), LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(10),self._global.random(LingoNumber(10))),LingoGlobal.op_mul(LingoNumber(15),big)),LingoSymbol("expectedbranchlife"), LingoPropertyList(LingoSymbol("small"), LingoNumber(30),LingoSymbol("big"), LingoNumber(60),LingoSymbol("smallrandom"), LingoNumber(15),LingoSymbol("bigrandom"), LingoNumber(30)),LingoSymbol("starttired"), LingoNumber(0),LingoSymbol("avoidwalls"), LingoNumber(0.8000),LingoSymbol("generaldir"), LingoNumber(0.8000),LingoSymbol("randomdir"), LingoNumber(1.0000),LingoSymbol("step"), LingoNumber(3.0000),LingoSymbol("thickness"), LingoGlobal.op_mul(LingoGlobal.op_add(LingoNumber(6),self._global.random(LingoNumber(3))),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(big,LingoNumber(0.4000)))),LingoSymbol("branchpoints"), LingoList())                                    if (LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(0)) and LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(1))):             pnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),self._global.random(LingoNumber(20))),LingoNumber(10)))            match effc.lower():                 case "fungus tree":                    if LingoGlobal.ToBool(big):                         expectedlife = LingoGlobal.op_add(sts.expectedbranchlife.big,self._global.random(sts.expectedbranchlife.bigrandom))                                            else:                        expectedlife = LingoGlobal.op_add(sts.expectedbranchlife.small,self._global.random(sts.expectedbranchlife.smallrandom))                                            sts.branchpoints = LingoList(LingoPropertyList(LingoSymbol("pos"), pnt,LingoSymbol("dir"), LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoSymbol("thickness"), sts.thickness,LingoSymbol("layer"), lr,LingoSymbol("lifeleft"), expectedlife,LingoSymbol("tired"), sts.starttired))                                                tmp_branches = LingoNumber(1)            while tmp_branches < sts.branches:                 branches = tmp_branches                pos = LingoGlobal.point(pnt.loch,pnt.locv)                lstpos = LingoGlobal.point(pnt.loch,pnt.locv)                generaldir = self._movieScript.degtovec(LingoGlobal.op_add(-LingoNumber(60),self._global.random(LingoNumber(120))))                lstaimpnt = generaldir                brlr = lr                brlrdir = LingoGlobal.op_add(LingoNumber(101),self._global.random(LingoNumber(201)))                avoidwalls = LingoNumber(2.0000)                tiredness = sts.starttired                if LingoGlobal.ToBool(big):                     expectedlife = LingoGlobal.op_add(sts.expectedbranchlife.big,self._global.random(sts.expectedbranchlife.bigrandom))                                    else:                    expectedlife = LingoGlobal.op_add(sts.expectedbranchlife.small,self._global.random(sts.expectedbranchlife.smallrandom))                                    match effc.lower():                     case "featherfern":                        sts.airroots = LingoGlobal.op_add(LingoNumber(25),LingoGlobal.op_mul(LingoNumber(15),big))                                            case "fungus tree":                        branch = sts.branchpoints[self._global.random(sts.branchpoints.count)]                        sts.branchpoints.deleteone(branch)
                        basethickness = branch.thickness                        pos = branch.pos                        lstpos = branch.pos                        brlr = branch.layer                        generaldir = branch.dir                        lstaimpnt = branch.dir                        tiredness = branch.tired                        expectedlife = self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(branch.lifeleft,LingoNumber(11)),self._global.random(LingoNumber(21))),LingoNumber(5),LingoNumber(200))                        startlifetime = expectedlife                                                            tmp_step = LingoNumber(1)                while tmp_step < expectedlife:                     step = tmp_step                    lstpos = pos                    match effc.lower():                         case "featherfern":                            tiredness = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_add(tiredness,LingoNumber(0.5000)),LingoGlobal.abs(LingoGlobal.op_mul(tiredness,LingoNumber(0.0500)))),LingoGlobal.op_mul(LingoNumber(0.3000),big))                                                    case "fungus tree":                            tiredness = LingoGlobal.op_mul(-LingoNumber(90),LingoGlobal.op_sub(LingoNumber(1.0000),LingoGlobal.op_div(LingoGlobal.op_sub(startlifetime,step),startlifetime.float)))                                                                        aimpnt = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_mul(generaldir,sts.generaldir),LingoGlobal.op_mul(self._movieScript.degtovec(self._global.random(LingoNumber(360))),sts.randomdir)),LingoGlobal.point(LingoNumber(0),LingoGlobal.op_mul(tiredness,LingoNumber(0.0100))))                    for tmp_dir in LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(-LingoNumber(1),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(1),-LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(-LingoNumber(1),LingoNumber(1))):                         dir = tmp_dir                        if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.op_add(LingoGlobal.op_add(self._movieScript.givegridpos(lstpos),dir),self._movieScript.gRenderCameraTilePos),LingoGlobal.op_add(LingoGlobal.op_sub(LingoGlobal.op_div(brlr,LingoNumber(10.0000)),LingoNumber(0.4999)).integer,LingoNumber(1))), LingoNumber(1)):                             aimpnt = LingoGlobal.op_sub(aimpnt,LingoGlobal.op_mul(dir,avoidwalls))                            avoidwalls = self._movieScript.restrict(LingoGlobal.op_sub(avoidwalls,LingoNumber(0.0600)),LingoNumber(0.2000),LingoNumber(2))                            step = LingoGlobal.op_add(step,LingoGlobal.op_ne(effc,"Fungus Tree"))                                                    else:                            aimpnt = LingoGlobal.op_add(aimpnt,LingoGlobal.op_mul(dir,LingoNumber(0.1000)))                                                                        avoidwalls = self._movieScript.restrict(LingoGlobal.op_add(avoidwalls,LingoNumber(0.0300)),LingoNumber(0.2000),LingoNumber(2))                    lstlayer = brlr                    brlr = LingoGlobal.op_add(brlr,LingoGlobal.op_mul(brlrdir,LingoNumber(0.0100)))                    smllst = lrrange[LingoNumber(1)]                    if LingoGlobal.op_add(LingoGlobal.op_sub(LingoGlobal.op_div(lstlayer,LingoNumber(10.0000)),LingoNumber(0.4999)).integer,LingoNumber(1)) > LingoNumber(1):                         if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.op_add(self._movieScript.givegridpos(pos),self._movieScript.gRenderCameraTilePos),LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_sub(LingoGlobal.op_div(lstlayer,LingoNumber(10.0000)),LingoNumber(0.4999)).integer,LingoNumber(1)),LingoNumber(1))), LingoNumber(1)):                             wall = LingoGlobal.op_mul(LingoGlobal.op_sub(LingoGlobal.op_div(lstlayer,LingoNumber(10.0000)),LingoNumber(0.4999)).integer,LingoNumber(10))                            if wall > LingoNumber(0):                                 wall = LingoGlobal.op_sub(wall,LingoNumber(1))                                                            smllst = self._movieScript.restrict(smllst,wall,LingoNumber(0))                                                                        bggst = lrrange[LingoNumber(2)]                    if LingoGlobal.op_add(LingoGlobal.op_sub(LingoGlobal.op_div(lstlayer,LingoNumber(10.0000)),LingoNumber(0.4999)).integer,LingoNumber(1)) < LingoNumber(3):                         if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.op_add(self._movieScript.givegridpos(pos),self._movieScript.gRenderCameraTilePos),LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_sub(LingoGlobal.op_div(lstlayer,LingoNumber(10.0000)),LingoNumber(0.4999)).integer,LingoNumber(1)),LingoNumber(1))), LingoNumber(1)):                             wall = LingoGlobal.op_sub(LingoGlobal.op_mul(LingoGlobal.op_add(LingoGlobal.op_div(self._movieScript.restrict(lstlayer,LingoNumber(1),LingoNumber(29)),LingoNumber(10.0000)),LingoNumber(0.4999)).integer,LingoNumber(10)),LingoNumber(1))                            bggst = self._movieScript.restrict(bggst,LingoNumber(0),wall)                                                                        if brlr < smllst:                         brlr = smllst                        brlrdir = self._global.random(LingoNumber(41))                                            if brlr > bggst:                         brlr = bggst                        brlrdir = -self._global.random(LingoNumber(41))                                            aimpnt = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_add(aimpnt,lstaimpnt),lstaimpnt),LingoNumber(3.0000))                    lstaimpnt = aimpnt                    pos = LingoGlobal.op_add(pos,self._movieScript.movetopoint(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),aimpnt,sts.step))                    pstcolor = LingoNumber(0)                    match effc.lower():                         case "featherfern":                            if sts.airroots > LingoNumber(0):                                 sts.feathercounter = LingoNumber(20)                                sts.airroots = LingoGlobal.op_sub(sts.airroots,LingoNumber(1))                                                            sts.feathercounter = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_add(sts.feathercounter,LingoGlobal.op_mul(self._movieScript.diag(pos,lstpos),LingoNumber(0.5000))),LingoGlobal.abs(LingoGlobal.op_sub(pos.loch,lstpos.loch))),LingoGlobal.abs(LingoGlobal.op_sub(lstlayer,brlr)))                            if sts.feathercounter > LingoGlobal.op_add(LingoNumber(8),LingoGlobal.op_mul(LingoGlobal.op_div(LingoGlobal.op_sub(expectedlife,step),expectedlife.float),LingoNumber(12))):                                 sts.feathercounter = LingoGlobal.op_sub(sts.feathercounter,LingoGlobal.op_add(LingoNumber(8),LingoGlobal.op_mul(LingoGlobal.op_div(LingoGlobal.op_sub(expectedlife,step),expectedlife.float),LingoNumber(12))))                                fc = LingoGlobal.op_div(LingoGlobal.op_sub(expectedlife,step),expectedlife.float)                                fc = LingoGlobal.op_sub(LingoNumber(1.0000),fc)                                fc = LingoGlobal.op_mul(fc,fc)                                fc = LingoGlobal.op_sub(LingoNumber(1.0000),fc)                                lngth = LingoGlobal.op_div(LingoGlobal.op_mul(LingoGlobal.sin(LingoGlobal.op_mul(fc,LingoGlobal.PI)),LingoGlobal.op_add(LingoGlobal.abs(LingoGlobal.op_sub(pos.locv,pnt.locv)),LingoNumber(120))),LingoNumber(3.0000))                                tmp_cntr = LingoNumber(1)                                while tmp_cntr < sts.airroots:                                     cntr = tmp_cntr                                    lngth = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_mul(lngth,LingoNumber(6.0000)),LingoGlobal.op_add(LingoGlobal.abs(LingoGlobal.op_sub(pos.locv,pnt.locv)),LingoNumber(4))),LingoNumber(7.0000))                                    tmp_cntr = cntr                                    tmp_cntr += LingoNumber(1)                                                                    for tmp_rct in LingoList(LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),lngth)),LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(LingoNumber(1),LingoNumber(0),LingoNumber(2),LingoGlobal.op_sub(lngth,self._global.random(self._global.random(self._global.random(LingoGlobal.op_add(lngth.integer,LingoNumber(1))))))))):                                     rct = tmp_rct                                    self._global.member(LingoGlobal.concat("layer",self._global.str(brlr.integer))).image.copypixels(LingoImage.Pxl,rct,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._movieScript.colr))                                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,brlr,LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(6),LingoNumber(0),LingoNumber(6),LingoGlobal.op_add(lngth,LingoNumber(2)))),"featherFernGradient",self._global.member("featherFernGradient").rect,LingoNumber(0.5000))
                                pstcolor = LingoNumber(1)                                                            fc = LingoGlobal.op_div(LingoGlobal.op_sub(expectedlife,step),expectedlife.float)                            fc = LingoGlobal.op_mul(fc,fc)                            ftness = LingoGlobal.op_mul(LingoGlobal.sin(LingoGlobal.op_mul(fc,LingoGlobal.PI)),LingoGlobal.op_add(LingoNumber(4),LingoGlobal.op_mul(LingoNumber(1),big)))                            rct = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(1),-LingoNumber(3),LingoNumber(1),LingoNumber(3))),LingoGlobal.rect(-ftness,-ftness,ftness,ftness))                            rct = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(pos,lstpos))                            brlrdir = LingoGlobal.op_add(LingoGlobal.op_sub(brlrdir,LingoNumber(4)),self._global.random(LingoNumber(7)))                                                    case "sprawlbush":                            rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(2),-LingoNumber(5),LingoNumber(2),LingoNumber(5)))                            rct = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(pos,lstpos))                            brlrdir = LingoGlobal.op_add(LingoGlobal.op_sub(brlrdir,LingoNumber(11)),self._global.random(LingoNumber(21)))                            pstcolor = LingoNumber(1)                                                    case "fungus tree":                            thickness = LingoGlobal.op_mul(LingoGlobal.op_div(LingoGlobal.op_sub(startlifetime,step),startlifetime.float),basethickness)                            sts.branchpoints.add(LingoPropertyList(LingoSymbol("pos"), pos,LingoSymbol("dir"), self._movieScript.movetopoint(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),aimpnt,LingoNumber(1.0000)),LingoSymbol("thickness"), thickness,LingoSymbol("layer"), brlr,LingoSymbol("lifeleft"), LingoGlobal.op_sub(startlifetime,step),LingoSymbol("tired"), tiredness))
                            if LingoGlobal.op_eq_b(step, expectedlife):                                 rnd = self._global.random(LingoNumber(5))                                rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(5),-LingoNumber(19),LingoNumber(5),LingoNumber(1)))                                if LingoGlobal.op_eq_b(self._global.random(LingoNumber(2)), LingoNumber(1)):                                     rct = self._movieScript.vertfliprect(rct)                                                                    self._global.member(LingoGlobal.concat("layer",self._global.str(brlr.integer))).image.copypixels(self._global.member("fungusTreeTops").image,rct,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(10)),LingoNumber(1),LingoGlobal.op_mul(rnd,LingoNumber(10)),LingoNumber(21)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._movieScript.colr))
                                self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,brlr,LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(7),-LingoNumber(11),LingoNumber(7),LingoNumber(3))),"softBrush1",self._global.member("softBrush1").rect,LingoNumber(0.5000))                            rct = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(1),-LingoNumber(3),LingoNumber(1),LingoNumber(3))),LingoGlobal.rect(-thickness,-thickness,thickness,thickness))                            rct = self._movieScript.rotatetoquad(rct,self._movieScript.lookatpoint(pos,lstpos))                            brlrdir = LingoGlobal.op_add(LingoGlobal.op_sub(brlrdir,LingoNumber(11)),self._global.random(LingoNumber(21)))                            pstcolor = LingoNumber(1)                                                                        self._global.member(LingoGlobal.concat("layer",self._global.str(brlr.integer))).image.copypixels(self._global.member("blob").image,rct,self._global.member("blob").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._movieScript.colr))
                    self._global.member(LingoGlobal.concat("layer",self._global.str(lstlayer.integer))).image.copypixels(self._global.member("blob").image,rct,self._global.member("blob").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._movieScript.colr))
                    if LingoGlobal.ToBool(pstcolor):                         blnd = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(LingoNumber(1.0000),LingoGlobal.op_div(LingoGlobal.op_sub(expectedlife,step),expectedlife.float)),LingoNumber(25)),self._global.random(LingoGlobal.op_mul(LingoGlobal.op_sub(LingoNumber(1.0000),LingoGlobal.op_div(LingoGlobal.op_sub(expectedlife,step),expectedlife.float)),LingoNumber(75))))                        if LingoGlobal.op_eq_b(effc, "Fungus Tree"):                             blnd = LingoGlobal.op_mul(LingoGlobal.op_sub(LingoNumber(1.0000),LingoGlobal.op_div(LingoGlobal.op_sub(expectedlife,step),expectedlife.float)),LingoNumber(100))                                                    self._global.member("softbrush2").image.copypixels(LingoImage.Pxl,self._global.member("softbrush2").image.rect,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))))
                        self._global.member("softbrush2").image.copypixels(self._global.member("softbrush1").image,self._global.member("softbrush2").image.rect,self._global.member("softbrush1").image.rect,LingoPropertyList(LingoSymbol("blend"), blnd))
                        self._movieScript.copypixelstoeffectcolor(self._movieScript.gdLayer,brlr,self._movieScript.rotatetoquad(LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(17),-LingoNumber(25),LingoNumber(17),LingoNumber(25))),self._movieScript.lookatpoint(pos,lstpos)),"softBrush2",self._global.member("softBrush1").rect,LingoNumber(0.5000))                    tmp_step = step                    tmp_step += LingoNumber(1)                                    tmp_branches = branches                tmp_branches += LingoNumber(1)                                            return None            def applyblackgoo(self, q, c, eftc):         spnt = LingoGlobal.op_add(self._movieScript.givemiddleoftile(LingoGlobal.point(q,c)),LingoGlobal.point(-LingoNumber(10),-LingoNumber(10)))        rct = self._global.member("blob").image.rect        tmp_d = LingoNumber(1)        while tmp_d < LingoNumber(10):             d = tmp_d            tmp_e = LingoNumber(1)            while tmp_e < LingoNumber(10):                 e = tmp_e                ps = LingoGlobal.point(LingoGlobal.op_add(spnt.loch,LingoGlobal.op_mul(d,LingoNumber(2))),LingoGlobal.op_add(spnt.locv,LingoGlobal.op_mul(e,LingoNumber(2))))                if LingoGlobal.op_eq_b(self._global.member("layer0").image.getpixel(ps), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                     self._global.member("blackOutImg1").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(6)),self._global.random(self._global.random(LingoNumber(11)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(6)),self._global.random(self._global.random(LingoNumber(11)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(6)),self._global.random(self._global.random(LingoNumber(11)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(6)),self._global.random(self._global.random(LingoNumber(11))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))
                    self._global.member("blackOutImg2").image.copypixels(self._global.member("blob").image,LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_sub(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(14)))),LingoGlobal.op_sub(LingoGlobal.op_sub(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(14)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.loch,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(14)))),LingoGlobal.op_add(LingoGlobal.op_add(ps.locv,LingoNumber(7)),self._global.random(self._global.random(LingoNumber(14))))),rct,LingoPropertyList(LingoSymbol("color"), LingoNumber(0),LingoSymbol("ink"), LingoNumber(36)))                tmp_e = e                tmp_e += LingoNumber(1)                            tmp_d = d            tmp_d += LingoNumber(1)                            return None            def applyrestoreeffect(self, q, c, q2, c2, eftc):         match self._movieScript.lrSup.lower():             case "all":                layers = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3))                            case "1":                layers = LingoList(LingoNumber(1))                            case "2":                layers = LingoList(LingoNumber(2))                            case "3":                layers = LingoList(LingoNumber(3))                            case "1:st and 2:nd":                layers = LingoList(LingoNumber(1),LingoNumber(2))                            case "2:nd and 3:rd":                layers = LingoList(LingoNumber(2),LingoNumber(3))                            case _:                 layers = LingoList(LingoNumber(1),LingoNumber(2),LingoNumber(3))                                    for tmp_layer in layers:             layer = tmp_layer            if LingoGlobal.op_eq_b(self._movieScript.afamvlvledit(LingoGlobal.point(q2,c2),layer), LingoNumber(1)):                 mdpoint = self._movieScript.givemiddleoftile(LingoGlobal.point(q,c))                tlrct = LingoGlobal.rect(LingoGlobal.op_add(mdpoint,LingoGlobal.point(-LingoNumber(10),-LingoNumber(10))),LingoGlobal.op_add(mdpoint,LingoGlobal.point(LingoNumber(10),LingoNumber(10))))                a = LingoNumber(2)                b = LingoNumber(1)                u = a                if LingoGlobal.op_eq_b(self.istilesolidandaffected(LingoGlobal.point(LingoGlobal.op_sub(q2,LingoNumber(1)),c2),layer), LingoNumber(1)):                     u = b                                    tmp_lr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),LingoNumber(4))                while tmp_lr < LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),LingoNumber(6)):                     lr = tmp_lr                    self._global.member(LingoGlobal.concat("layer",lr)).image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoGlobal.op_add(mdpoint,LingoGlobal.point(-LingoNumber(10),-LingoNumber(10))),LingoGlobal.op_add(mdpoint,LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),u),LingoNumber(10)))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))))
                    tmp_lr = lr                    tmp_lr += LingoNumber(1)                                    self.draw3dbeams(q2,c2,layer,tlrct,LingoList(LingoNumber(1),LingoNumber(4)),u)
                u = a                if LingoGlobal.op_eq_b(self.istilesolidandaffected(LingoGlobal.point(LingoGlobal.op_add(q2,LingoNumber(1)),c2),layer), LingoNumber(1)):                     u = b                                    tmp_lr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),LingoNumber(4))                while tmp_lr < LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),LingoNumber(6)):                     lr = tmp_lr                    self._global.member(LingoGlobal.concat("layer",lr)).image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoGlobal.op_add(mdpoint,LingoGlobal.point(LingoGlobal.op_sub(LingoNumber(10),u),-LingoNumber(10))),LingoGlobal.op_add(mdpoint,LingoGlobal.point(LingoNumber(10),LingoNumber(10)))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))))
                    tmp_lr = lr                    tmp_lr += LingoNumber(1)                                    self.draw3dbeams(q2,c2,layer,tlrct,LingoList(LingoNumber(2),LingoNumber(3)),u)
                u = a                if LingoGlobal.op_eq_b(self.istilesolidandaffected(LingoGlobal.point(q2,LingoGlobal.op_sub(c2,LingoNumber(1))),layer), LingoNumber(1)):                     u = b                                    tmp_lr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),LingoNumber(4))                while tmp_lr < LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),LingoNumber(6)):                     lr = tmp_lr                    self._global.member(LingoGlobal.concat("layer",lr)).image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoGlobal.op_add(mdpoint,LingoGlobal.point(-LingoNumber(10),-LingoNumber(10))),LingoGlobal.op_add(mdpoint,LingoGlobal.point(LingoNumber(10),LingoGlobal.op_add(-LingoNumber(10),u)))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))))
                    tmp_lr = lr                    tmp_lr += LingoNumber(1)                                    self.draw3dbeams(q2,c2,layer,tlrct,LingoList(LingoNumber(1),LingoNumber(2)),u)
                u = a                if LingoGlobal.op_eq_b(self.istilesolidandaffected(LingoGlobal.point(q2,LingoGlobal.op_add(c2,LingoNumber(1))),layer), LingoNumber(1)):                     u = b                                    tmp_lr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),LingoNumber(4))                while tmp_lr < LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),LingoNumber(6)):                     lr = tmp_lr                    self._global.member(LingoGlobal.concat("layer",lr)).image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoGlobal.op_add(mdpoint,LingoGlobal.point(-LingoNumber(10),LingoGlobal.op_sub(LingoNumber(10),u))),LingoGlobal.op_add(mdpoint,LingoGlobal.point(LingoNumber(10),LingoNumber(10)))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))))
                    tmp_lr = lr                    tmp_lr += LingoNumber(1)                                    self.draw3dbeams(q2,c2,layer,tlrct,LingoList(LingoNumber(3),LingoNumber(4)),u)            self.redrawpoles(LingoGlobal.point(q2,c2),layer,q,c,LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),LingoNumber(4)))                return None            def draw3dbeams(self, q2, c2, layer, tlrct, crnrs, u):         if layer > LingoNumber(1):             if LingoGlobal.op_eq_b(self.istilesolidandaffected(LingoGlobal.point(q2,c2),LingoGlobal.op_sub(layer,LingoNumber(1))), LingoNumber(1)):                 for tmp_crnr in crnrs:                     crnr = tmp_crnr                    rct = self.cornerrect(tlrct,crnr,u)                    tmp_lr = LingoGlobal.op_sub(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),LingoNumber(5))                    while tmp_lr < LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),LingoNumber(5)):                         lr = tmp_lr                        self._global.member(LingoGlobal.concat("layer",lr)).image.copypixels(LingoImage.Pxl,rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))))
                        tmp_lr = lr                        tmp_lr += LingoNumber(1)                                                                                if layer < LingoNumber(3):             if LingoGlobal.op_eq_b(self.istilesolidandaffected(LingoGlobal.point(q2,c2),LingoGlobal.op_add(layer,LingoNumber(1))), LingoNumber(1)):                 rct = self.cornerrect(tlrct,crnr,u)                for tmp_crnr in crnrs:                     crnr = tmp_crnr                    tmp_lr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),LingoNumber(5))                    while tmp_lr < LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),LingoNumber(15)):                         lr = tmp_lr                        self._global.member(LingoGlobal.concat("layer",lr)).image.copypixels(LingoImage.Pxl,rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))))
                        tmp_lr = lr                        tmp_lr += LingoNumber(1)                                                                                        return None            def cornerrect(self, tlrct, crnr, u):         match crnr if crnr is not None else 9999999999:             case 1:                return LingoGlobal.rect(tlrct.left,tlrct.top,LingoGlobal.op_add(tlrct.left,u),LingoGlobal.op_add(tlrct.top,u))                            case 2:                return LingoGlobal.rect(LingoGlobal.op_sub(tlrct.right,u),tlrct.top,tlrct.right,LingoGlobal.op_add(tlrct.top,u))                            case 3:                return LingoGlobal.rect(LingoGlobal.op_sub(tlrct.right,u),LingoGlobal.op_sub(tlrct.bottom,u),tlrct.right,tlrct.bottom)                            case 4:                return LingoGlobal.rect(tlrct.left,LingoGlobal.op_sub(tlrct.bottom,u),LingoGlobal.op_add(tlrct.left,u),tlrct.bottom)                                            return None            def istilesolidandaffected(self, tl, layer):         if ((((LingoGlobal.op_ne_b(self._movieScript.afamvlvledit(LingoGlobal.point(tl.loch,tl.locv),layer), LingoNumber(1)) or tl.loch < LingoNumber(1)) or tl.locv < LingoNumber(1)) or tl.loch > self._movieScript.gLOprops.size.loch) or tl.locv > self._movieScript.gLOprops.size.locv):             return LingoNumber(0)                    elif self._movieScript.gEEprops.effects[self._movieScript.r].mtrx[tl.loch][tl.locv] > LingoNumber(0):             return LingoNumber(1)                    else:            return LingoNumber(0)                            return None            def redrawpoles(self, pos, layer, q, c, drawlayer):         if LingoGlobal.ToBool(pos.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self._movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self._movieScript.gLOprops.size.locv,LingoNumber(1))))):             for tmp_t in self._movieScript.gLEProps.matrix[pos.loch][pos.locv][layer][LingoNumber(2)]:                 t = tmp_t                match t if t is not None else 9999999999:                     case 1:                        rct = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(8),LingoNumber(0),-LingoNumber(8)))                        self._global.member(LingoGlobal.concat("layer",drawlayer)).image.copypixels(LingoImage.Pxl,rct,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))))                    case 2:                        rct = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20))),LingoGlobal.rect(LingoNumber(8),LingoNumber(0),-LingoNumber(8),LingoNumber(0)))                        self._global.member(LingoGlobal.concat("layer",drawlayer)).image.copypixels(LingoImage.Pxl,rct,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))))                                                                return None            def closestcamera(self, pos):         closest = LingoNumber(1000)        bestcam = LingoNumber(0)        tmp_camNum = LingoNumber(1)        while tmp_camNum < self._movieScript.gCameraProps.cameras.count:             camnum = tmp_camNum            if (LingoGlobal.op_eq_b(self.seenbycamera(camnum,pos), LingoNumber(1)) and self._movieScript.diag(pos,LingoGlobal.op_add(self._movieScript.gCameraProps.cameras[camnum],LingoGlobal.point(LingoGlobal.op_div(LingoNumber(1400),LingoNumber(2)),LingoGlobal.op_div(LingoNumber(800),LingoNumber(2))))) < closest):                 closest = self._movieScript.diag(pos,LingoGlobal.op_add(self._movieScript.gCameraProps.cameras[camnum],LingoGlobal.point(LingoGlobal.op_div(LingoNumber(1400),LingoNumber(2)),LingoGlobal.op_div(LingoNumber(800),LingoNumber(2)))))                bestcam = camnum                            tmp_camNum = camnum            tmp_camNum += LingoNumber(1)                    return bestcam                    def seenbycamera(self, camnum, pos):         camerapos = self._movieScript.gCameraProps.cameras[camnum]        if LingoGlobal.ToBool(pos.inside(LingoGlobal.op_add(LingoGlobal.rect(camerapos.loch,camerapos.locv,LingoGlobal.op_add(camerapos.loch,LingoNumber(1400)),LingoGlobal.op_add(camerapos.locv,LingoNumber(800))),LingoGlobal.op_mul(LingoGlobal.rect(-LingoNumber(15),-LingoNumber(10),LingoNumber(15),LingoNumber(10)),LingoNumber(20))))):             return LingoNumber(1)                    else:            return LingoNumber(0)                            return None            