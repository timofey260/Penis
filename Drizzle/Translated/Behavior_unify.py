from Drizzle.Runtime import *## Behavior script: unify#class unify(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         if ((LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(56))) and LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(48)))) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             self._global._player.appminimize()        if LingoGlobal.ToBool(self._movieScript.checkexit()):             self._global._player.quit()        if LingoGlobal.ToBool(self._movieScript.checkexitrender()):             self._global._movie.go(LingoNumber(9))        q = LingoGlobal.QUOTE        if LingoGlobal.op_eq_b(self._movieScript.lvlPropOutput, LingoGlobal.TRUE):             self._global.member("GradientOutput").image = self._global.image(LingoNumber(2800),LingoNumber(801),LingoNumber(32))            self._global.member("GradientOutput").image.copypixels(self._global.member("finalImage").image,LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(1400),LingoNumber(801)),self._global.member("finalImage").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))
            self._global.member("GradientOutput").image.copypixels(self._global.member("flattenedGradientA").image,LingoGlobal.rect(LingoNumber(1400),LingoNumber(1),LingoNumber(2800),LingoNumber(801)),self._global.member("flattenedGradientA").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))
            self._global.member("GradientOutput").image.copypixels(self._global.member("flattenedGradientB").image,LingoGlobal.rect(LingoNumber(1400),LingoNumber(1),LingoNumber(2800),LingoNumber(801)),self._global.member("flattenedGradientB").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))
            self._global.member("GradientOutput").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)),LingoSymbol("ink"), LingoNumber(36)))
            props = LingoPropertyList("image", self._global.member("GradientOutput").image,"filename", LingoGlobal.concat(self._global._movie.path,"Props/",self._movieScript.gLoadedName,"_",self._movieScript.gCurrentRenderCamera,"_Prop.png"))            ok = self._movieScript.gImgXtra.ix_saveimage(props)            objfileio = self._global.new(self._global.xtra("fileio"))            objfileio.createfile(LingoGlobal.concat(self._global.the_moviePath,"Props/",self._movieScript.gLoadedName,"_",self._movieScript.gCurrentRenderCamera,"_Prop_Init.txt"))
            objfileio.closefile()
            fileopener = self._global.new(self._global.xtra("fileio"))            fileopener.openfile(LingoGlobal.concat(self._global.the_moviePath,"Props/",self._movieScript.gLoadedName,"_",self._movieScript.gCurrentRenderCamera,"_Prop_Init.txt"),LingoNumber(0))
            fileopener.writestr(LingoGlobal.concat("[#nm:",q,self._movieScript.gLoadedName,"_",self._movieScript.gCurrentRenderCamera,"_Prop",q,", #tp:",q,"standard",q,", #colorTreatment:",q,"standard",q,", #bevel:1, #sz:point(70, 40), #repeatL:[1], #tags:[",q,"effectColorA",q,", ",q,"effectColorB",q,", ",q,"notTrashProp",q,"], #layerExceptions:[], #notes:[]]"))
            fileopener.writereturn(LingoSymbol("windows"))                return None            