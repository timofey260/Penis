from Drizzle.Runtime import *## Behavior script: renderPropsStart#class renderPropsStart(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         if ((LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(56))) and LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(48)))) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             self._global._player.appminimize()        if LingoGlobal.ToBool(self._movieScript.checkexit()):             self._global._player.quit()        if LingoGlobal.ToBool(self._movieScript.checkexitrender()):             self._global._movie.go(LingoNumber(9))        self._movieScript.c = LingoNumber(1)        self._movieScript.keepLooping = LingoNumber(1)        self._movieScript.gLastImported = ""        self._movieScript.gCurrentlyRenderingTrash = LingoGlobal.FALSE        if (self._movieScript.gRenderTrashProps.count > LingoNumber(0) and LingoGlobal.op_eq_b(self._movieScript.afterEffects, LingoNumber(0))):             self._movieScript.gCurrentlyRenderingTrash = LingoGlobal.TRUE                    tmp_q = LingoNumber(0)        while tmp_q < LingoNumber(29):             q = tmp_q            self._global.sprite(LingoGlobal.op_sub(LingoNumber(50),q)).loc = LingoGlobal.point(LingoGlobal.op_sub(LingoGlobal.op_div(LingoNumber(1366),LingoNumber(2)),q),LingoGlobal.op_sub(LingoGlobal.op_div(LingoNumber(768),LingoNumber(2)),q))            val = LingoGlobal.op_div(LingoGlobal.op_add(q.float,LingoNumber(1.0000)),LingoNumber(30.0000))            self._global.sprite(LingoGlobal.op_sub(LingoNumber(50),q)).color = self._global.color(LingoGlobal.op_mul(val,LingoNumber(255)),LingoGlobal.op_mul(val,LingoNumber(255)),LingoGlobal.op_mul(val,LingoNumber(255)))            tmp_q = q            tmp_q += LingoNumber(1)                    self._movieScript.propsToRender = LingoList()        tmp_a = LingoNumber(1)        while tmp_a < self._movieScript.gPEprops.props.count:             a = tmp_a            self._movieScript.propsToRender.add(self._movieScript.gPEprops.props[a])
            self._movieScript.propsToRender[self._movieScript.propsToRender.count].addat(LingoNumber(1),self._movieScript.propsToRender[self._movieScript.propsToRender.count][LingoNumber(5)].settings.renderorder)
            tmp_a = a            tmp_a += LingoNumber(1)                    self._movieScript.propsToRender.sort()
        tmp_a = LingoNumber(1)        while tmp_a < self._movieScript.propsToRender.count:             a = tmp_a            self._movieScript.propsToRender[a].deleteat(LingoNumber(1))
            tmp_a = a            tmp_a += LingoNumber(1)                    self._movieScript.softProp = LingoGlobal.VOID                return None            