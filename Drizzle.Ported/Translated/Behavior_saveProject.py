from Drizzle.Runtime import *## Behavior script: saveProject#class saveProject(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         str = None        objfileio = None        pth = None        f = None        gimgxtra = None        nwimg = None        props = None        ok = None        self._global._movie.exitlock = LingoGlobal.TRUE        if ((LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(56))) and LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(48)))) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             self._global._player.appminimize()        if LingoGlobal.ToBool(self._movieScript.checkexit()):             self._global._player.quit()        if ((LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(36))) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))) and LingoGlobal.op_ne_b(self._movieScript.levelName, LingoGlobal.VOID)):             str = ""            str += str(self._movieScript.gLEProps.matrix)            str += str(LingoGlobal.RETURN)            str += str(self._movieScript.gTEprops)            str += str(LingoGlobal.RETURN)            str += str(self._movieScript.gEEprops)            str += str(LingoGlobal.RETURN)            str += str(self._movieScript.gLightEProps)            str += str(LingoGlobal.RETURN)            str += str(self._movieScript.gLevel)            str += str(LingoGlobal.RETURN)            str += str(self._movieScript.gLOprops)            str += str(LingoGlobal.RETURN)            str += str(self._movieScript.gCameraProps)            str += str(LingoGlobal.RETURN)            str += str(self._movieScript.gEnvEditorProps)            str += str(LingoGlobal.RETURN)            str += str(self._movieScript.gPEprops)            str += str(LingoGlobal.RETURN)            objfileio = self._global.new(self._global.xtra("fileio"))            pth = LingoGlobal.concat(self._global.the_moviePath,"LevelEditorProjects",self._global.the_dirSeparator)            for tmp_f in self._movieScript.gLOADPATH:                 f = LingoNumber(tmp_f)                pth = LingoGlobal.concat(pth,f,self._global.the_dirSeparator)                            self._global.createfile(objfileio,LingoGlobal.concat(pth,self._movieScript.levelName,".txt"))
            objfileio.openfile(LingoGlobal.concat(pth,self._movieScript.levelName,".txt"),LingoNumber(0))
            objfileio.writestr(str)
            objfileio.closefile()
            self._global.member("lightImage").image.setpixel(LingoNumber(0),LingoNumber(0),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)))
            self._global.member("lightImage").image.setpixel(LingoGlobal.op_sub(self._global.member("lightImage").rect.width,LingoNumber(1)),LingoGlobal.op_sub(self._global.member("lightImage").rect.height,LingoNumber(1)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)))
            gimgxtra = self._global.xtra("ImgXtra").new()            nwimg = self._global.image(self._global.member("lightImage").image.rect.width,self._global.member("lightImage").image.rect.height,LingoNumber(32))            nwimg.copypixels(self._global.member("lightImage").image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),self._global.member("lightImage").image.rect.width,self._global.member("lightImage").image.rect.height),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),self._global.member("lightImage").image.rect.width,self._global.member("lightImage").image.rect.height))
            props = LingoPropertyList("image", nwimg,"filename", LingoGlobal.concat(pth,self._movieScript.levelName,".png"))            ok = gimgxtra.ix_saveimage(props)            self._movieScript.gLoadedName = self._movieScript.levelName            self._global.member("Level Name").text = self._movieScript.gLoadedName            self._global._movie.go(LingoNumber(7))        elif ((LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(51))) and LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(56)))) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             self._global._movie.go(LingoNumber(7))        else:            self._global.go(self._global.the_frame)                return None            