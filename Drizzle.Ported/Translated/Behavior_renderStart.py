from Drizzle.Runtime import *## Behavior script: renderStart#class renderStart(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         nonsolidtilesets = None        q = None        l = None        c = None        cell = None        d = None        ad = None        tl = None        testmat = None        tlps = None        _movieScript.DRPxl = LingoImage.Pxl        _movieScript.DRPxlRect = LingoImage.Pxl.rect        _movieScript.DRWhite = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))        _movieScript.slimeFxt = _movieScript.getboolconfig("Slime always affects editor decals")        _movieScript.gRRSpreadsMore = _movieScript.getboolconfig("Rough Rock spreads more")        _movieScript.grimeActive = _movieScript.getboolconfig("Grime")        _movieScript.grimeOnGradients = _movieScript.getboolconfig("Grime on gradients")        _movieScript.bkgFix = _movieScript.getboolconfig("Gradients with BackgroundScenes fix")        _movieScript.gDRMatFixes = _movieScript.getboolconfig("Material fixes")        _movieScript.gDRInvI = _movieScript.getboolconfig("Invisible material fix")        _global.member("blackOutImg1").image = _global.image(LingoNumber(1),LingoNumber(1),LingoNumber(1))        _global.member("blackOutImg2").image = _global.image(LingoNumber(1),LingoNumber(1),LingoNumber(1))        _global.member("GradientOutput").image = _global.image(LingoNumber(1),LingoNumber(1),LingoNumber(1))        _global._movie.exitlock = LingoGlobal.TRUE        if ((LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(56))) and LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(48)))) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             _global._player.appminimize()        if LingoGlobal.ToBool(_movieScript.checkexit()):             _global._player.quit()        if LingoGlobal.ToBool(_movieScript.checkexitrender()):             _global._movie.go(LingoNumber(9))        _global.put("Start render")
        _movieScript.gLOprops.pal = LingoNumber(1)        _movieScript.firstCamRepeat = LingoGlobal.TRUE        _movieScript.gCurrentRenderCamera = LingoNumber(0)        _movieScript.gAnyDecals = LingoNumber(0)        self.createshortcuts()
        _movieScript.tileSetIndex = LingoList()        _movieScript.solidMtrx = LingoList()        if LingoGlobal.ToBool(_movieScript.getboolconfig("Trash and Small pipes non solid")):             nonsolidtilesets = LingoList("Small Pipes","Trash")                    else:            nonsolidtilesets = LingoList()                    if LingoGlobal.op_eq_b(_movieScript.gDRInvI, LingoGlobal.FALSE):             nonsolidtilesets.add("Invisible")        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gLOprops.size.loch):             q = tmp_q            l = LingoList()            for tmp_c in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gLOprops.size.locv):                 c = tmp_c                cell = LingoList()                for tmp_d in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(3)):                     d = tmp_d                    ad = LingoNumber(0)                    if (LingoGlobal.op_eq_b(_movieScript.gLEProps.matrix[q][c][d][LingoNumber(1)], LingoNumber(1)) and LingoGlobal.op_eq_b(_movieScript.gLEProps.matrix[q][c][d][LingoNumber(2)].getpos(LingoNumber(11)), LingoNumber(0))):                         tl = _movieScript.gTEprops.tlmatrix[q][c][d]                        if (LingoGlobal.op_eq_b(tl.tp, "default") or LingoGlobal.op_eq_b(tl.tp, "material")):                             testmat = tl.data                            if LingoGlobal.op_eq_b(tl.tp, "default"):                                 testmat = _movieScript.gTEprops.defaultmaterial                                                            ad = LingoGlobal.op_eq(nonsolidtilesets.getpos(testmat),LingoNumber(0))                                                    elif (LingoGlobal.op_eq_b(tl.tp, "tileHead") or LingoGlobal.op_eq_b(tl.tp, "tileBody")):                             tlps = tl.data[LingoNumber(1)]                            if LingoGlobal.op_eq_b(tl.tp, "tileBody"):                                 tlps = LingoGlobal.VOID                                if (((tl.data[LingoNumber(1)].locv > LingoNumber(0) and tl.data[LingoNumber(1)].loch > LingoNumber(0)) and tl.data[LingoNumber(1)].locv < _movieScript.gLOprops.size.locv) and tl.data[LingoNumber(1)].loch < _movieScript.gLOprops.size.loch):                                     if LingoGlobal.op_eq_b(_global.ilk(_movieScript.gTEprops.tlmatrix[tl.data[LingoNumber(1)].loch][tl.data[LingoNumber(1)].locv][tl.data[LingoNumber(2)]].data), list):                                         tlps = _movieScript.gTEprops.tlmatrix[tl.data[LingoNumber(1)].loch][tl.data[LingoNumber(1)].locv][tl.data[LingoNumber(2)]].data[LingoNumber(1)]                                                                                                                                        ad = LingoNumber(1)                            if LingoGlobal.op_ne_b(tlps, LingoGlobal.VOID):                                 if (tlps.loch > LingoNumber(2) and tlps.loch <= _movieScript.gTiles.count):                                     if tlps.locv <= _movieScript.gTiles[tlps.loch].tls.count:                                         if LingoGlobal.op_ne_b(_movieScript.gTiles[tlps.loch].tls[tlps.locv].tags, LingoGlobal.VOID):                                             ad = LingoGlobal.op_eq(_movieScript.gTiles[tlps.loch].tls[tlps.locv].tags.getpos("nonSolid"),LingoNumber(0))                                                                                                                                                                                                                                cell.add(ad)
                    tmp_d = d                                    l.add(cell)
                tmp_c = c                            _movieScript.solidMtrx.add(l)
            tmp_q = q                            return None            def createshortcuts(self):         q = None        c = None        diditwork = None        tp = None        holedir = None        stps = None        pos = None        stp = None        lastdir = None        rpt = None        dirsl = None        dir = None        _movieScript.gShortcuts = LingoPropertyList(dict(scs = LingoList(),indexl = LingoList()))        for tmp_q in LingoGlobal.pyrange(LingoNumber(2), LingoGlobal.op_sub(_movieScript.gLEProps.matrix.count,LingoNumber(1))):             q = tmp_q            for tmp_c in LingoGlobal.pyrange(LingoNumber(2), LingoGlobal.op_sub(_movieScript.gLEProps.matrix[LingoNumber(1)].count,LingoNumber(1))):                 c = tmp_c                if _movieScript.gLEProps.matrix[q][c][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(4)) > LingoNumber(0):                     diditwork = LingoNumber(1)                    tp = "shortCut"                    holedir = LingoGlobal.point(LingoNumber(0),LingoNumber(0))                    stps = LingoNumber(0)                    pos = LingoGlobal.point(q,c)                    stp = LingoNumber(0)                    lastdir = LingoGlobal.point(LingoNumber(0),LingoNumber(0))                    rpt = LingoNumber(0)                    while LingoGlobal.ToBool(LingoGlobal.op_eq(stp,LingoNumber(0))):                         rpt = LingoGlobal.op_add(rpt,LingoNumber(1))                        if rpt > LingoNumber(1000):                             diditwork = LingoNumber(0)                            stp = LingoNumber(1)                                                    dirsl = LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)))                        dirsl.deleteone(lastdir)
                        dirsl.addat(LingoNumber(1),lastdir)
                        dirsl.deleteone(-lastdir)
                        for tmp_dir in dirsl:                             dir = tmp_dir                            if LingoGlobal.ToBool(LingoGlobal.op_add(pos,dir).inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1))))):                                 if _movieScript.gLEProps.matrix[LingoGlobal.op_add(pos.loch,dir.loch)][LingoGlobal.op_add(pos.locv,dir.locv)][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(6)) > LingoNumber(0):                                     stp = LingoNumber(1)                                    tp = "playerHole"                                    pos = LingoGlobal.point(q,c)                                    lastdir = dir                                    break                                                                    elif _movieScript.gLEProps.matrix[LingoGlobal.op_add(pos.loch,dir.loch)][LingoGlobal.op_add(pos.locv,dir.locv)][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(7)) > LingoNumber(0):                                     stp = LingoNumber(1)                                    tp = "lizardHole"                                    pos = LingoGlobal.point(q,c)                                    lastdir = dir                                    break                                                                    elif _movieScript.gLEProps.matrix[LingoGlobal.op_add(pos.loch,dir.loch)][LingoGlobal.op_add(pos.locv,dir.locv)][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(19)) > LingoNumber(0):                                     stp = LingoNumber(1)                                    tp = "WHAMH"                                    pos = LingoGlobal.point(q,c)                                    lastdir = dir                                    break                                                                    elif _movieScript.gLEProps.matrix[LingoGlobal.op_add(pos.loch,dir.loch)][LingoGlobal.op_add(pos.locv,dir.locv)][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(21)) > LingoNumber(0):                                     stp = LingoNumber(1)                                    tp = "scavengerHole"                                    pos = LingoGlobal.point(q,c)                                    lastdir = dir                                    break                                                                    elif _movieScript.gLEProps.matrix[LingoGlobal.op_add(pos.loch,dir.loch)][LingoGlobal.op_add(pos.locv,dir.locv)][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(4)) > LingoNumber(0):                                     stp = LingoNumber(1)                                    pos = LingoGlobal.op_add(pos,dir)                                    lastdir = dir                                    break                                                                    elif _movieScript.gLEProps.matrix[LingoGlobal.op_add(pos.loch,dir.loch)][LingoGlobal.op_add(pos.locv,dir.locv)][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(5)) > LingoNumber(0):                                     stps = LingoGlobal.op_add(stps,LingoNumber(1))                                    pos = LingoGlobal.op_add(pos,dir)                                    lastdir = dir                                    break                                                                                                                        if LingoGlobal.op_eq_b(holedir, LingoGlobal.point(LingoNumber(0),LingoNumber(0))):                             holedir = lastdir                                                                        if LingoGlobal.ToBool(diditwork):                         _movieScript.gShortcuts.indexl.add(LingoGlobal.point(q,c))
                        _movieScript.gShortcuts.scs.add(tp)                                    tmp_c = c                            tmp_q = q                            return None            