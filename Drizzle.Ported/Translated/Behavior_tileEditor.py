from Drizzle.Runtime import *## Behavior script: tileEditor#class tileEditor(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         mstile = None        q = None        l = None        rct = None        actn = None        actn2 = None        mdpnt = None        tile = None        ttgs = None        if LingoGlobal.ToBool(_movieScript.showControls):             _global.sprite(LingoNumber(23)).blend = LingoNumber(100)                    else:            _global.sprite(LingoNumber(23)).blend = LingoNumber(0)                    mstile = LingoGlobal.op_add(LingoGlobal.op_div(_global._mouse.mouseloc,LingoGlobal.point(LingoNumber(16.0000),LingoNumber(16.0000))),LingoGlobal.point(LingoNumber(0.4999),LingoNumber(0.4999)))        mstile = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.point(mstile.loch.integer,mstile.locv.integer),LingoGlobal.point(-LingoNumber(1),-LingoNumber(1))),_movieScript.gLEProps.campos)        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(4)):             q = tmp_q            if ((LingoGlobal.ToBool(_global._key.keypressed(LingoList(LingoNumber(86),LingoNumber(91),LingoNumber(88),LingoNumber(84))[q])) and LingoGlobal.op_eq_b(_movieScript.gDirectionKeys[q], LingoNumber(0))) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.gLEProps.campos = LingoGlobal.op_add(_movieScript.gLEProps.campos,LingoGlobal.op_mul(LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)))[q],LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoNumber(9),_global._key.keypressed(LingoNumber(83)))),LingoGlobal.op_mul(LingoNumber(34),_global._key.keypressed(LingoNumber(85))))))                if not LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(92))):                     if _movieScript.gLEProps.campos.loch < -LingoNumber(1):                         _movieScript.gLEProps.campos.loch = -LingoNumber(1)                                            if _movieScript.gLEProps.campos.locv < -LingoNumber(1):                         _movieScript.gLEProps.campos.locv = -LingoNumber(1)                                            if _movieScript.gLEProps.campos.loch > LingoGlobal.op_sub(_movieScript.gLEProps.matrix.count,LingoNumber(51)):                         _movieScript.gLEProps.campos.loch = LingoGlobal.op_sub(_movieScript.gLEProps.matrix.count,LingoNumber(51))                                            if _movieScript.gLEProps.campos.locv > LingoGlobal.op_sub(_movieScript.gLEProps.matrix[LingoNumber(1)].count,LingoNumber(39)):                         _movieScript.gLEProps.campos.locv = LingoGlobal.op_sub(_movieScript.gLEProps.matrix[LingoNumber(1)].count,LingoNumber(39))                                                            for tmp_l in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(3)):                     l = tmp_l                    _movieScript.lvleditdraw(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),_movieScript.gLOprops.size.loch,_movieScript.gLOprops.size.locv),l)
                    _movieScript.tedraw(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),_movieScript.gLOprops.size.loch,_movieScript.gLOprops.size.locv),l)
                    tmp_l = l                                    _movieScript.drawshortcutsimg(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),_movieScript.gLOprops.size.loch,_movieScript.gLOprops.size.locv),LingoNumber(16),LingoNumber(1))            _movieScript.gDirectionKeys[q] = _global._key.keypressed(LingoList(LingoNumber(86),LingoNumber(91),LingoNumber(88),LingoNumber(84))[q])            tmp_q = q                    rct = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.rect(LingoNumber(0),LingoNumber(0),_movieScript.gLOprops.size.loch,_movieScript.gLOprops.size.locv),LingoGlobal.rect(_movieScript.gLOprops.extratiles[LingoNumber(1)],_movieScript.gLOprops.extratiles[LingoNumber(2)],-_movieScript.gLOprops.extratiles[LingoNumber(3)],-_movieScript.gLOprops.extratiles[LingoNumber(4)])),LingoGlobal.rect(_movieScript.gLEProps.campos,_movieScript.gLEProps.campos))        _global.sprite(LingoNumber(71)).rect = LingoGlobal.op_mul(LingoGlobal.op_add(rct.intersect(LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(52),LingoNumber(40))),LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoNumber(1),LingoNumber(1))),LingoGlobal.rect(LingoNumber(16),LingoNumber(16),LingoNumber(16),LingoNumber(16)))        if LingoGlobal.ToBool(self.checkkey("Q")):             self.pickuptile(mstile)        if LingoGlobal.ToBool(self.checkkey("L")):             _movieScript.gTEprops.worklayer = LingoGlobal.op_add(_movieScript.gTEprops.worklayer,LingoNumber(1))            if _movieScript.gTEprops.worklayer > LingoNumber(3):                 _movieScript.gTEprops.worklayer = LingoNumber(1)                            self.writematerial(mstile)
            self.changelayer()        actn = LingoNumber(0)        actn2 = LingoNumber(0)        _movieScript.gTEprops.keys.m1 = LingoGlobal.op_and(_global._mouse.mousedown,LingoGlobal.op_ne(_global._movie.window.sizestate,minimized))        if (LingoGlobal.ToBool(_movieScript.gTEprops.keys.m1) and LingoGlobal.op_eq_b(_movieScript.gTEprops.lastkeys.m1, LingoNumber(0))):             actn = LingoNumber(1)                    _movieScript.gTEprops.lastkeys.m1 = _movieScript.gTEprops.keys.m1        _movieScript.gTEprops.keys.m2 = LingoGlobal.op_and(_global._mouse.rightmousedown,LingoGlobal.op_ne(_global._movie.window.sizestate,minimized))        if (LingoGlobal.ToBool(_movieScript.gTEprops.keys.m2) and LingoGlobal.op_eq_b(_movieScript.gTEprops.lastkeys.m2, LingoNumber(0))):             actn2 = LingoNumber(1)                    _movieScript.gTEprops.lastkeys.m2 = _movieScript.gTEprops.keys.m2        if LingoGlobal.op_ne_b(mstile, _movieScript.gTEprops.lstmsps):             self.writematerial(mstile)
            actn = _movieScript.gTEprops.keys.m1            actn2 = _movieScript.gTEprops.keys.m2            self.istilepositionlegal(mstile)        _movieScript.gTEprops.lstmsps = mstile        if LingoGlobal.op_ne_b(_movieScript.gTEprops.specialedit, LingoNumber(0)):             _global.sprite(LingoNumber(19)).visibility = LingoNumber(1)            _global.member("default material").text = LingoGlobal.concat_space("SPECIAL EDIT:",_global.str(_movieScript.gTEprops.specialedit))            if LingoGlobal.ToBool(actn):                 self.specialaction(mstile)            if LingoGlobal.ToBool(actn2):                 _movieScript.gTEprops.specialedit = LingoNumber(0)                            _global.sprite(LingoNumber(19)).visibility = LingoGlobal.op_ne(_movieScript.gTEprops.specialedit,LingoNumber(0))                    else:            if LingoGlobal.ToBool(actn):                 self.action(mstile)            if LingoGlobal.ToBool(actn2):                 self.deletetile(mstile)                    if LingoGlobal.ToBool(self.checkkey("W")):             self.updatetilemenu(LingoGlobal.point(LingoNumber(0),-LingoNumber(1)))        if LingoGlobal.ToBool(self.checkkey("S")):             self.updatetilemenu(LingoGlobal.point(LingoNumber(0),LingoNumber(1)))        if LingoGlobal.ToBool(self.checkkey("A")):             self.updatetilemenu(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)))        if LingoGlobal.ToBool(self.checkkey("D")):             self.updatetilemenu(LingoGlobal.point(LingoNumber(1),LingoNumber(0)))        if LingoGlobal.op_eq_b(_movieScript.gTEprops.tooltype, "material"):             if (LingoGlobal.ToBool(_global._key.keypressed("F")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _global.sprite(LingoNumber(88)).rect = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(mstile,LingoNumber(16)),LingoGlobal.op_mul(LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),LingoNumber(1))),LingoNumber(16))),LingoGlobal.rect(-LingoNumber(16),-LingoNumber(16),LingoNumber(16),LingoNumber(16))),LingoGlobal.rect(LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16))))                            elif (LingoGlobal.ToBool(_global._key.keypressed("V")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _global.sprite(LingoNumber(88)).rect = LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(mstile,LingoNumber(16)),LingoGlobal.op_mul(LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),LingoNumber(1))),LingoNumber(16))),LingoGlobal.rect(-LingoNumber(32),-LingoNumber(32),LingoNumber(32),LingoNumber(32))),LingoGlobal.rect(LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16))))                            else:                _global.sprite(LingoNumber(88)).rect = LingoGlobal.op_sub(LingoGlobal.rect(LingoGlobal.op_mul(mstile,LingoNumber(16)),LingoGlobal.op_mul(LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),LingoNumber(1))),LingoNumber(16))),LingoGlobal.rect(LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16))))                            _global.sprite(LingoNumber(13)).loc = LingoGlobal.point(-LingoNumber(2000),-LingoNumber(2000))                    elif LingoGlobal.op_eq_b(_movieScript.gTEprops.tooltype, "special"):             _global.sprite(LingoNumber(88)).color = _movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv].color            match _movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv].placemethod.lower():                 case "rect":                    if LingoGlobal.op_eq_b(_movieScript.specialRectPoint, LingoGlobal.VOID):                         _global.sprite(LingoNumber(88)).rect = LingoGlobal.op_sub(LingoGlobal.rect(LingoGlobal.op_mul(mstile,LingoNumber(16)),LingoGlobal.op_mul(LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),LingoNumber(1))),LingoNumber(16))),LingoGlobal.rect(LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16))))                        if (LingoGlobal.ToBool(actn) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657))))):                             _movieScript.specialRectPoint = mstile                                                                        else:                        rct = LingoGlobal.rect(_movieScript.specialRectPoint,LingoGlobal.op_add(_movieScript.specialRectPoint,LingoGlobal.point(LingoNumber(1),LingoNumber(1)))).union(LingoGlobal.rect(mstile,LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),LingoNumber(1)))))                        _global.sprite(LingoNumber(88)).rect = LingoGlobal.op_sub(LingoGlobal.op_mul(rct,LingoNumber(16)),LingoGlobal.rect(LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16))))                        if (LingoGlobal.ToBool(actn2) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657))))):                             _movieScript.specialRectPoint = LingoGlobal.VOID                                                    elif (LingoGlobal.ToBool(actn) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657))))):                             _movieScript.specialRectPoint = LingoGlobal.VOID                            self.specialrectplacement(LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),-LingoNumber(1),-LingoNumber(1))))                                                                        _global.sprite(LingoNumber(13)).loc = LingoGlobal.point(-LingoNumber(2000),-LingoNumber(2000))                    else:            _global.sprite(LingoNumber(88)).rect = LingoGlobal.rect(-LingoNumber(5),-LingoNumber(5),-LingoNumber(5),-LingoNumber(5))            mdpnt = LingoGlobal.point(LingoGlobal.op_add(LingoGlobal.op_mul(_movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv].sz.loch,LingoNumber(0.5000)),LingoNumber(0.4999)).integer,LingoGlobal.op_add(LingoGlobal.op_mul(_movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv].sz.locv,LingoNumber(0.5000)),LingoNumber(0.4999)).integer)            _global.sprite(LingoNumber(13)).loc = LingoGlobal.op_mul(LingoGlobal.op_sub(LingoGlobal.op_sub(LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),LingoNumber(1))),mdpnt),_movieScript.gLEProps.campos),LingoNumber(16))                    if (LingoGlobal.ToBool(_global._key.keypressed("E")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             self.updatetilemenu(LingoGlobal.point(LingoNumber(0),LingoNumber(0)))        if (((LingoGlobal.ToBool(_global._key.keypressed("C")) and LingoGlobal.ToBool(_global._key.keypressed("X"))) and LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(48)))) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             self.deletealltiles()        if LingoGlobal.op_eq_b(_movieScript.gEnvEditorProps.waterlevel, -LingoNumber(1)):             _global.sprite(LingoNumber(9)).rect = LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(0),LingoNumber(0))                    else:            rct = LingoGlobal.op_sub(LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_sub(LingoGlobal.op_sub(_movieScript.gLOprops.size.locv,_movieScript.gEnvEditorProps.waterlevel),_movieScript.gLOprops.extratiles[LingoNumber(4)]),_movieScript.gLOprops.size.loch,_movieScript.gLOprops.size.locv),LingoGlobal.rect(_movieScript.gLEProps.campos,_movieScript.gLEProps.campos))            _global.sprite(LingoNumber(9)).rect = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_add(rct.intersect(LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(52),LingoNumber(40))),LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoNumber(1),LingoNumber(1))),LingoGlobal.rect(LingoNumber(16),LingoNumber(16),LingoNumber(16),LingoNumber(16))),LingoGlobal.rect(LingoNumber(0),-LingoNumber(8),LingoNumber(0),LingoNumber(0)))                    _global.script("levelOverview").gotoeditor()
        tile = _movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv]        ttgs = tile[tags]        if (LingoGlobal.op_ne_b(ttgs, LingoGlobal.VOID) and (((((ttgs.getpos("Station Larger Sign") > LingoNumber(0) or ttgs.getpos("Station Larger Sign B") > LingoNumber(0)) or ttgs.getpos("Small Asian Sign Station") > LingoNumber(0)) or ttgs.getpos("Small Asian Sign On Wall Station") > LingoNumber(0)) or ttgs.getpos("Small Asian Sign Station B") > LingoNumber(0)) or ttgs.getpos("Small Asian Sign On Wall Station B") > LingoNumber(0))):             _global.member("Drought Reserve text").text = LingoGlobal.concat("THIS TILE IS RESERVED FOR THE CUSTOM REGION ",LingoGlobal.QUOTE,"FORSAKEN STATION",LingoGlobal.QUOTE,", SEE WITH THE CREATOR OF THE REGION TO US IT.")                    else:            _global.member("Drought Reserve text").text = ""                    _global.go(_global.the_frame)        return None            def deletealltiles(self):         q = None        l = None        c = None        _movieScript.gTEprops.tlmatrix = LingoList()        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gLOprops.size.loch):             q = tmp_q            l = LingoList()            for tmp_c in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gLOprops.size.locv):                 c = tmp_c                l.add(LingoList(LingoPropertyList(dict(tp = "default",data = LingoNumber(0))),LingoPropertyList(dict(tp = "default",data = LingoNumber(0))),LingoPropertyList(dict(tp = "default",data = LingoNumber(0)))))
                tmp_c = c                            _movieScript.gTEprops.tlmatrix.add(l)
            tmp_q = q                    for tmp_q in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(3)):             q = tmp_q            _movieScript.tedraw(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),_movieScript.gLOprops.size.loch,_movieScript.gLOprops.size.locv),q)
            tmp_q = q                            return None            def checkkey(self, key):         rtrn = None        rtrn = LingoNumber(0)        _movieScript.gTEprops.keys[LingoGlobal.symbol(key)] = LingoGlobal.op_and(_global._key.keypressed(key),LingoGlobal.op_ne(_global._movie.window.sizestate,minimized))        if (LingoGlobal.ToBool(_movieScript.gTEprops.keys[LingoGlobal.symbol(key)]) and LingoGlobal.op_eq_b(_movieScript.gTEprops.lastkeys[LingoGlobal.symbol(key)], LingoNumber(0))):             rtrn = LingoNumber(1)                    _movieScript.gTEprops.lastkeys[LingoGlobal.symbol(key)] = _movieScript.gTEprops.keys[LingoGlobal.symbol(key)]        return rtrn                    def writematerial(self, mstile):         txt = None        dt = None        _global.sprite(LingoNumber(8)).visibility = LingoNumber(0)        if LingoGlobal.ToBool(mstile.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1))))):             txt = ""            if LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657)))):                 match _movieScript.gLEProps.matrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer][LingoNumber(1)] if value is not None else 9999999999:                     case 1:                        txt = "Wall"                                            case 2:                        txt = "Eastward Slope"                                            case 3:                        txt = "Westward Slope"                                            case 4:                        txt = "Ceiling Slope"                                            case 5:                        txt = "Ceiling Slope"                                            case 6:                        txt = "Floor"                                            case 7:                        txt = "Short Cut Entrance"                        _global.sprite(LingoNumber(8)).visibility = LingoNumber(1)                                                                        else:                txt = ""                            if LingoGlobal.op_ne_b(txt, ""):                 match _movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].tp.lower():                     case "material":                        txt += str(LingoGlobal.concat_space(" - Material:",_global.str(_movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].data)))                                            case "tilehead":                        txt += str(LingoGlobal.concat_space(" - Tile:",_movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].data[LingoNumber(2)]))                        if _movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].data.count > LingoNumber(2):                             txt += str(LingoGlobal.concat_space(" :: Additional Data:",_movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].data[LingoNumber(3)]))                                                                        case "tilebody":                        dt = _movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].data                        if (((dt[LingoNumber(1)].loch > LingoNumber(0) and dt[LingoNumber(1)].locv > LingoNumber(0)) and dt[LingoNumber(1)].loch < LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1))) and dt[LingoNumber(1)].locv < LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1))):                             if LingoGlobal.op_eq_b(_movieScript.gTEprops.tlmatrix[dt[LingoNumber(1)].loch][dt[LingoNumber(1)].locv][dt[LingoNumber(2)]].tp, "tileHead"):                                 txt += str(LingoGlobal.concat_space(" - Tile:",_movieScript.gTEprops.tlmatrix[dt[LingoNumber(1)].loch][dt[LingoNumber(1)].locv][dt[LingoNumber(2)]].data[LingoNumber(2)]))                                                            else:                                txt += str(" - Stray Tile Fragment")                                                                                    else:                            txt += str(" - Stray Tile Fragment")                                                                                                    _global.member("editor1tool").text = txt                    else:            _global.member("editor1tool").text = ""                            return None            def updatetilemenu(self, mv):         txt = None        tl = None        if (LingoGlobal.op_eq_b(mv, LingoGlobal.VOID) or LingoGlobal.op_eq_b(mv, _global.script("tileEditor"))):             mv = LingoGlobal.point(LingoNumber(0),LingoNumber(0))                    _movieScript.gTEprops.tmpos = LingoGlobal.op_add(_movieScript.gTEprops.tmpos,mv)        if LingoGlobal.op_ne_b(mv.loch, LingoNumber(0)):             if _movieScript.gTEprops.tmpos.loch < LingoNumber(1):                 _movieScript.gTEprops.tmpos.loch = _movieScript.gTiles.count                            elif _movieScript.gTEprops.tmpos.loch > _movieScript.gTiles.count:                 _movieScript.gTEprops.tmpos.loch = LingoNumber(1)                            _movieScript.gTEprops.tmpos.locv = _movieScript.gTEprops.tmsavposl[_movieScript.gTEprops.tmpos.loch]                    elif LingoGlobal.op_ne_b(mv.locv, LingoNumber(0)):             if _movieScript.gTEprops.tmpos.locv < LingoNumber(1):                 _movieScript.gTEprops.tmpos.locv = _movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls.count                            elif _movieScript.gTEprops.tmpos.locv > _movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls.count:                 _movieScript.gTEprops.tmpos.locv = LingoNumber(1)                            _movieScript.gTEprops.tmsavposl[_movieScript.gTEprops.tmpos.loch] = _movieScript.gTEprops.tmpos.locv                    _movieScript.gTEprops.tmpos.loch = _movieScript.restrict(_movieScript.gTEprops.tmpos.loch,LingoNumber(1),_movieScript.gTiles.count)        _movieScript.gTEprops.tmpos.locv = _movieScript.restrict(_movieScript.gTEprops.tmpos.locv,LingoNumber(1),_movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls.count)        txt = ""        txt += str(LingoGlobal.concat_space("[",_movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].nm,"]"))        txt += str(LingoGlobal.RETURN)        for tmp_tl in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls.count):             tl = tmp_tl            if LingoGlobal.op_eq_b(tl, _movieScript.gTEprops.tmpos.locv):                 txt += str(LingoGlobal.concat_space("-",_movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[tl].nm,"-",LingoGlobal.RETURN))                            else:                txt += str(LingoGlobal.concat_space(_movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[tl].nm,LingoGlobal.RETURN))                            tmp_tl = tl                    _global.member("tileMenu").text = txt        if _movieScript.gTEprops.tmpos.loch <= _movieScript.getlastmatcat():             _global.sprite(LingoNumber(19)).visibility = LingoNumber(1)            _movieScript.gTEprops.tooltype = "material"            _movieScript.gTEprops.tooldata = _movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv].nm            _global.member("tilePreview").image = _global.image(LingoNumber(1),LingoNumber(1),LingoNumber(1))            if (LingoGlobal.ToBool(_global._key.keypressed("E")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 if LingoGlobal.op_ne_b(_movieScript.gTEprops.defaultmaterial, _movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv].nm):                     _movieScript.gTEprops.defaultmaterial = _movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv].nm                    _global.member("default material").text = LingoGlobal.concat_space("Default material:",_movieScript.gTEprops.defaultmaterial,"(Press 'E' to change)")                                                        elif LingoGlobal.op_eq_b(_movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].nm, "special"):             _movieScript.gTEprops.tooltype = "special"            _movieScript.gTEprops.tooldata = _movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv].nm            _global.member("tilePreview").image = _global.image(LingoNumber(1),LingoNumber(1),LingoNumber(1))                    else:            if LingoGlobal.op_eq_b(_movieScript.gTEprops.specialedit, LingoNumber(0)):                 _global.sprite(LingoNumber(19)).visibility = LingoNumber(0)                            _movieScript.gTEprops.tooltype = "tile"            _movieScript.gTEprops.tooldata = "TILE"            self.drawtilepreview()        self.istilepositionlegal(_movieScript.gTEprops.lstmsps)        return None            def action(self, mstile):         l = None        q = None        if (LingoGlobal.ToBool(mstile.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1))))) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657))))):             match _movieScript.gTEprops.tooltype.lower():                 case "material":                    l = LingoList(mstile)                    if (LingoGlobal.ToBool(_global._key.keypressed("F")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                         l = LingoList(mstile,LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),LingoNumber(0))),LingoGlobal.op_add(mstile,LingoGlobal.point(-LingoNumber(1),LingoNumber(0))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(0),LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(0),-LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(-LingoNumber(1),-LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(-LingoNumber(1),LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),-LingoNumber(1))))                                            elif (LingoGlobal.ToBool(_global._key.keypressed("V")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                         l = LingoList(mstile,LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),LingoNumber(0))),LingoGlobal.op_add(mstile,LingoGlobal.point(-LingoNumber(1),LingoNumber(0))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(0),LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(0),-LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(-LingoNumber(1),-LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(-LingoNumber(1),LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),-LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(0),-LingoNumber(2))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),-LingoNumber(2))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(2),-LingoNumber(2))),LingoGlobal.op_add(mstile,LingoGlobal.point(-LingoNumber(1),-LingoNumber(2))),LingoGlobal.op_add(mstile,LingoGlobal.point(-LingoNumber(2),-LingoNumber(2))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(0),LingoNumber(2))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(1),LingoNumber(2))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(2),LingoNumber(2))),LingoGlobal.op_add(mstile,LingoGlobal.point(-LingoNumber(1),LingoNumber(2))),LingoGlobal.op_add(mstile,LingoGlobal.point(-LingoNumber(2),LingoNumber(2))),LingoGlobal.op_add(mstile,LingoGlobal.point(-LingoNumber(2),LingoNumber(0))),LingoGlobal.op_add(mstile,LingoGlobal.point(-LingoNumber(2),LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(-LingoNumber(2),-LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(2),LingoNumber(0))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(2),LingoNumber(1))),LingoGlobal.op_add(mstile,LingoGlobal.point(LingoNumber(2),-LingoNumber(1))))                                            for tmp_q in l:                         q = tmp_q                        if LingoGlobal.ToBool(q.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1))))):                             if LingoGlobal.op_eq_b(LingoList("tileHead","tileBody").getpos(_movieScript.gTEprops.tlmatrix[q.loch][q.locv][_movieScript.gTEprops.worklayer].tp), LingoNumber(0)):                                 _movieScript.gTEprops.tlmatrix[q.loch][q.locv][_movieScript.gTEprops.worklayer].tp = "material"                                _movieScript.gTEprops.tlmatrix[q.loch][q.locv][_movieScript.gTEprops.worklayer].data = _movieScript.gTEprops.tooldata                                                            _movieScript.tedraw(LingoGlobal.rect(q,q),_movieScript.gTEprops.worklayer)                                                            case "tile":                    if ((((LingoGlobal.ToBool(self.istilepositionlegal(mstile)) or LingoGlobal.ToBool(_global._key.keypressed("F"))) or LingoGlobal.ToBool(_global._key.keypressed("V"))) or LingoGlobal.ToBool(_global._key.keypressed("G"))) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                         self.placetile(mstile,_movieScript.gTEprops.tmpos)                                                                return None            def deletetile(self, mstile):         f = None        f1 = None        f2 = None        f3 = None        dt = None        if (LingoGlobal.ToBool(mstile.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1))))) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657))))):             match _movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].tp.lower():                 case "material":                    f = LingoNumber(0)                    f1 = LingoNumber(0)                    if (LingoGlobal.ToBool(_global._key.keypressed("F")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                         f = -LingoNumber(1)                        f1 = LingoNumber(1)                                            elif (LingoGlobal.ToBool(_global._key.keypressed("V")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                         f = -LingoNumber(2)                        f1 = LingoNumber(2)                                            for tmp_F2 in LingoGlobal.pyrange(f, f1):                         f2 = tmp_F2                        for tmp_F3 in LingoGlobal.pyrange(f, f1):                             f3 = tmp_F3                            if (((LingoGlobal.op_add(mstile.loch,f2) > LingoNumber(0) and LingoGlobal.op_add(mstile.locv,f3) > LingoNumber(0)) and LingoGlobal.op_add(mstile.loch,f2) < LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1))) and LingoGlobal.op_add(mstile.locv,f3) < LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1))):                                 _movieScript.gTEprops.tlmatrix[LingoGlobal.op_add(mstile.loch,f2)][LingoGlobal.op_add(mstile.locv,f3)][_movieScript.gTEprops.worklayer].tp = "default"                                _movieScript.gTEprops.tlmatrix[LingoGlobal.op_add(mstile.loch,f2)][LingoGlobal.op_add(mstile.locv,f3)][_movieScript.gTEprops.worklayer].data = LingoNumber(0)                                                            tmp_F3 = f3                                                    tmp_F2 = f2                                            _movieScript.tedraw(LingoGlobal.rect(LingoGlobal.op_add(mstile,f),LingoGlobal.op_add(mstile,f1)),_movieScript.gTEprops.worklayer)                case "tilehead":                    self.deletetiletile(mstile,_movieScript.gTEprops.worklayer)                case "tilebody":                    dt = _movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].data                    if (((dt[LingoNumber(1)].loch > LingoNumber(0) and dt[LingoNumber(1)].locv > LingoNumber(0)) and dt[LingoNumber(1)].loch < LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1))) and dt[LingoNumber(1)].locv < LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1))):                         if LingoGlobal.op_eq_b(_movieScript.gTEprops.tlmatrix[dt[LingoNumber(1)].loch][dt[LingoNumber(1)].locv][dt[LingoNumber(2)]].tp, "tileHead"):                             self.deletetiletile(dt[LingoNumber(1)],dt[LingoNumber(2)])                        else:                            _movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].tp = "default"                            _movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].data = LingoNumber(0)                            _movieScript.tedraw(LingoGlobal.rect(mstile,mstile),_movieScript.gTEprops.worklayer)                                            else:                        _movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].tp = "default"                        _movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].data = LingoNumber(0)                        _movieScript.tedraw(LingoGlobal.rect(mstile,mstile),_movieScript.gTEprops.worklayer)                                                                return None            def drawtilepreview(self):         tl = None        mdpnt = None        offst = None        n = None        q = None        c = None        cl = None        drps = None        _global.member("tilePreview").image = _global.image(LingoGlobal.op_mul(LingoNumber(85),LingoNumber(5)),LingoGlobal.op_mul(LingoNumber(85),LingoNumber(5)),LingoNumber(16))        tl = _movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv]        mdpnt = LingoGlobal.point(LingoGlobal.op_add(LingoGlobal.op_mul(tl.sz.loch,LingoNumber(0.5000)),LingoNumber(0.4999)).integer,LingoGlobal.op_add(LingoGlobal.op_mul(tl.sz.locv,LingoNumber(0.5000)),LingoNumber(0.4999)).integer)        offst = LingoGlobal.op_sub(LingoGlobal.point(LingoGlobal.op_mul(LingoNumber(3),LingoNumber(5)),LingoGlobal.op_mul(LingoNumber(3),LingoNumber(5))),mdpnt)        if LingoGlobal.op_ne_b(tl.specs2, LingoGlobal.VOID):             n = LingoNumber(1)            for tmp_q in LingoGlobal.pyrange(LingoNumber(1), tl.sz.loch):                 q = tmp_q                for tmp_c in LingoGlobal.pyrange(LingoNumber(1), tl.sz.locv):                     c = tmp_c                    if LingoGlobal.op_ne_b(tl.specs2[n], -LingoNumber(1)):                         _global.member("tilePreview").image.copypixels(_global.member(LingoGlobal.concat("prvw",_global.str(tl.specs2[n]))).image,LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_add(LingoGlobal.op_sub(q,LingoNumber(1)),offst.loch),LingoNumber(16)),LingoGlobal.op_mul(LingoGlobal.op_add(LingoGlobal.op_sub(c,LingoNumber(1)),offst.locv),LingoNumber(16)),LingoGlobal.op_mul(LingoGlobal.op_add(q,offst.loch),LingoNumber(16)),LingoGlobal.op_mul(LingoGlobal.op_add(c,offst.locv),LingoNumber(16))),LingoGlobal.rect(LingoNumber(5),LingoNumber(0),LingoNumber(5),LingoNumber(0))),_global.member(LingoGlobal.concat("prvw",_global.str(tl.specs2[n]))).image.rect,LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(50),LingoNumber(50),LingoNumber(50)))))                    n = LingoGlobal.op_add(n,LingoNumber(1))                    tmp_c = c                                    tmp_q = q                                    n = LingoNumber(1)        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), tl.sz.loch):             q = tmp_q            for tmp_c in LingoGlobal.pyrange(LingoNumber(1), tl.sz.locv):                 c = tmp_c                if LingoGlobal.op_ne_b(tl.specs[n], -LingoNumber(1)):                     cl = _global.color(LingoNumber(150),LingoNumber(150),LingoNumber(150))                    _global.member("tilePreview").image.copypixels(_global.member(LingoGlobal.concat("prvw",_global.str(tl.specs[n]))).image,LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_add(LingoGlobal.op_sub(q,LingoNumber(1)),offst.loch),LingoNumber(16)),LingoGlobal.op_mul(LingoGlobal.op_add(LingoGlobal.op_sub(c,LingoNumber(1)),offst.locv),LingoNumber(16)),LingoGlobal.op_mul(LingoGlobal.op_add(q,offst.loch),LingoNumber(16)),LingoGlobal.op_mul(LingoGlobal.op_add(c,offst.locv),LingoNumber(16))),LingoGlobal.rect(LingoNumber(0),LingoNumber(5),LingoNumber(0),LingoNumber(5))),_global.member(LingoGlobal.concat("prvw",_global.str(tl.specs[n]))).image.rect,LingoPropertyList(dict(ink = LingoNumber(36),color = cl)))                n = LingoGlobal.op_add(n,LingoNumber(1))                tmp_c = c                            tmp_q = q                    _global.member("tileMouse").image = _global.image(LingoGlobal.op_mul(tl.sz.loch,LingoNumber(16)),LingoGlobal.op_mul(tl.sz.locv,LingoNumber(16)),LingoNumber(16))        if (tl.ptpos > LingoNumber(60000) and LingoGlobal.ToBool(_movieScript.getboolconfig("More tile previews"))):             drps = LingoGlobal.op_sub(tl.ptpos,LingoNumber(60000))            _global.member("tileMouse").image.copypixels(_global.member("previewTilesDR").image,_global.member("tileMouse").image.rect,LingoGlobal.rect(drps,LingoNumber(0),LingoGlobal.op_add(drps,LingoGlobal.op_mul(tl.sz.loch,LingoNumber(16))),LingoGlobal.op_mul(tl.sz.locv,LingoNumber(16))),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(150),LingoNumber(150),LingoNumber(150)))))        else:            _global.member("tileMouse").image.copypixels(_global.member("previewTiles").image,_global.member("tileMouse").image.rect,LingoGlobal.rect(tl.ptpos,LingoNumber(0),LingoGlobal.op_add(tl.ptpos,LingoGlobal.op_mul(tl.sz.loch,LingoNumber(16))),LingoGlobal.op_mul(tl.sz.locv,LingoNumber(16))),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(150),LingoNumber(150),LingoNumber(150)))))        _global.member("tileMouse").regpoint = LingoGlobal.point(LingoNumber(0),LingoNumber(0))                return None            def istilepositionlegal(self, mstile):         rtrn = None        tl = None        mdpnt = None        strt = None        n = None        q = None        c = None        rtrn = LingoNumber(1)        if (LingoGlobal.op_eq_b(mstile.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1)))), LingoGlobal.FALSE) or LingoGlobal.op_eq_b(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657))), LingoGlobal.FALSE)):             rtrn = LingoNumber(0)                    if LingoGlobal.op_eq_b(_movieScript.gTEprops.tooltype, "tile"):             tl = _movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv]            mdpnt = LingoGlobal.point(LingoGlobal.op_add(LingoGlobal.op_mul(tl.sz.loch,LingoNumber(0.5000)),LingoNumber(0.4999)).integer,LingoGlobal.op_add(LingoGlobal.op_mul(tl.sz.locv,LingoNumber(0.5000)),LingoNumber(0.4999)).integer)            strt = LingoGlobal.op_add(LingoGlobal.op_sub(mstile,mdpnt),LingoGlobal.point(LingoNumber(1),LingoNumber(1)))            if (LingoGlobal.op_ne_b(tl.specs2, LingoGlobal.VOID) and _movieScript.gTEprops.worklayer < LingoNumber(3)):                 n = LingoNumber(1)                for tmp_q in LingoGlobal.pyrange(strt.loch, LingoGlobal.op_sub(LingoGlobal.op_add(strt.loch,tl.sz.loch),LingoNumber(1))):                     q = tmp_q                    for tmp_c in LingoGlobal.pyrange(strt.locv, LingoGlobal.op_sub(LingoGlobal.op_add(strt.locv,tl.sz.locv),LingoNumber(1))):                         c = tmp_c                        if (((LingoGlobal.op_ne_b(tl.specs2[n], -LingoNumber(1)) and LingoGlobal.ToBool(LingoGlobal.point(q,c).inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1)))))) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657))))) and _movieScript.gTEprops.worklayer < LingoNumber(3)):                             if (LingoGlobal.op_ne_b(_movieScript.afamvlvledit(LingoGlobal.point(q,c),LingoGlobal.op_add(_movieScript.gTEprops.worklayer,LingoNumber(1))), tl.specs2[n]) or LingoList("tileHead","tileBody").getpos(_movieScript.gTEprops.tlmatrix[q][c][LingoGlobal.op_add(_movieScript.gTEprops.worklayer,LingoNumber(1))].tp) > LingoNumber(0)):                                 rtrn = LingoNumber(0)                                break                                                                                    n = LingoGlobal.op_add(n,LingoNumber(1))                        tmp_c = c                                            if LingoGlobal.op_eq_b(rtrn, LingoNumber(0)):                         break                                            tmp_q = q                                                if LingoGlobal.op_eq_b(rtrn, LingoNumber(1)):                 n = LingoNumber(1)                for tmp_q in LingoGlobal.pyrange(strt.loch, LingoGlobal.op_sub(LingoGlobal.op_add(strt.loch,tl.sz.loch),LingoNumber(1))):                     q = tmp_q                    for tmp_c in LingoGlobal.pyrange(strt.locv, LingoGlobal.op_sub(LingoGlobal.op_add(strt.locv,tl.sz.locv),LingoNumber(1))):                         c = tmp_c                        if ((LingoGlobal.op_ne_b(tl.specs[n], -LingoNumber(1)) and LingoGlobal.ToBool(LingoGlobal.point(q,c).inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1)))))) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657))))):                             if (LingoGlobal.op_ne_b(_movieScript.afamvlvledit(LingoGlobal.point(q,c),_movieScript.gTEprops.worklayer), tl.specs[n]) or LingoList("tileHead","tileBody").getpos(_movieScript.gTEprops.tlmatrix[q][c][_movieScript.gTEprops.worklayer].tp) > LingoNumber(0)):                                 rtrn = LingoNumber(0)                                break                                                                                    n = LingoGlobal.op_add(n,LingoNumber(1))                        tmp_c = c                                            if LingoGlobal.op_eq_b(rtrn, LingoNumber(0)):                         break                                            tmp_q = q                                                        _global.sprite(LingoNumber(88)).color = _global.color(LingoNumber(255),LingoGlobal.op_mul(LingoNumber(255),rtrn),LingoGlobal.op_mul(LingoNumber(255),rtrn))        _global.sprite(LingoNumber(13)).color = _global.color(LingoNumber(255),LingoGlobal.op_mul(LingoNumber(255),rtrn),LingoGlobal.op_mul(LingoNumber(255),rtrn))        return rtrn                    def pickuptile(self, mstile):         nc = None        q = None        dt = None        if (LingoGlobal.ToBool(mstile.inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1))))) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657))))):             match _movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].tp.lower():                 case "material":                    for tmp_nc in LingoGlobal.pyrange(LingoNumber(1), _movieScript.getlastmatcat()):                         nc = tmp_nc                        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gTiles[nc].tls.count):                             q = tmp_q                            if LingoGlobal.op_eq_b(_movieScript.gTiles[nc].tls[q].nm, _movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].data):                                 _movieScript.gTEprops.tmpos = LingoGlobal.point(nc,q)                                self.updatetilemenu(LingoGlobal.point(LingoNumber(0),LingoNumber(0)))
                                break                                                            tmp_q = q                                                    tmp_nc = nc                                                            case "tilehead":                    _movieScript.gTEprops.tmpos = _movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].data[LingoNumber(1)]                    self.updatetilemenu(LingoGlobal.point(LingoNumber(0),LingoNumber(0)))                case "tilebody":                    dt = _movieScript.gTEprops.tlmatrix[mstile.loch][mstile.locv][_movieScript.gTEprops.worklayer].data                    if LingoGlobal.op_eq_b(_movieScript.gTEprops.tlmatrix[dt[LingoNumber(1)].loch][dt[LingoNumber(1)].locv][dt[LingoNumber(2)]].tp, "tileHead"):                         _movieScript.gTEprops.tmpos = _movieScript.gTEprops.tlmatrix[dt[LingoNumber(1)].loch][dt[LingoNumber(1)].locv][dt[LingoNumber(2)]].data[LingoNumber(1)]                        self.updatetilemenu(LingoGlobal.point(LingoNumber(0),LingoNumber(0)))                                                                return None            def placetile(self, plctile, tmpos):         forceadaptterrain = None        tl = None        mdpnt = None        strt = None        n = None        q = None        c = None        if (((plctile.loch < LingoNumber(1) or plctile.locv < LingoNumber(1)) or plctile.loch > _movieScript.gTEprops.tlmatrix.count) or plctile.locv > _movieScript.gTEprops.tlmatrix[LingoNumber(1)].count):             return LingoGlobal.VOID                    forceadaptterrain = LingoGlobal.op_and(_global._key.keypressed("G"),LingoGlobal.op_ne(_global._movie.window.sizestate,minimized))        tl = _movieScript.gTiles[tmpos.loch].tls[tmpos.locv]        mdpnt = LingoGlobal.point(LingoGlobal.op_add(LingoGlobal.op_mul(tl.sz.loch,LingoNumber(0.5000)),LingoNumber(0.4999)).integer,LingoGlobal.op_add(LingoGlobal.op_mul(tl.sz.locv,LingoNumber(0.5000)),LingoNumber(0.4999)).integer)        strt = LingoGlobal.op_add(LingoGlobal.op_sub(plctile,mdpnt),LingoGlobal.point(LingoNumber(1),LingoNumber(1)))        _movieScript.gTEprops.tlmatrix[plctile.loch][plctile.locv][_movieScript.gTEprops.worklayer].tp = "tileHead"        _movieScript.gTEprops.tlmatrix[plctile.loch][plctile.locv][_movieScript.gTEprops.worklayer].data = LingoList(tmpos,tl.nm)        if LingoGlobal.op_eq_b(tl.nm, "Chain Holder"):             _movieScript.gTEprops.tlmatrix[plctile.loch][plctile.locv][_movieScript.gTEprops.worklayer].data.add("NONE")
            _movieScript.gTEprops.specialedit = LingoList("Attatch Chain",plctile,_movieScript.gTEprops.worklayer)                    _movieScript.tedraw(LingoGlobal.rect(plctile.loch,plctile.locv,plctile.loch,plctile.locv),_movieScript.gTEprops.worklayer)
        if (LingoGlobal.op_ne_b(tl.specs2, LingoGlobal.VOID) and _movieScript.gTEprops.worklayer < LingoNumber(3)):             n = LingoNumber(1)            for tmp_q in LingoGlobal.pyrange(strt.loch, LingoGlobal.op_sub(LingoGlobal.op_add(strt.loch,tl.sz.loch),LingoNumber(1))):                 q = tmp_q                for tmp_c in LingoGlobal.pyrange(strt.locv, LingoGlobal.op_sub(LingoGlobal.op_add(strt.locv,tl.sz.locv),LingoNumber(1))):                     c = tmp_c                    if ((LingoGlobal.op_ne_b(tl.specs2[n], -LingoNumber(1)) and LingoGlobal.ToBool(LingoGlobal.point(q,c).inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1)))))) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657))))):                         _movieScript.gTEprops.tlmatrix[q][c][LingoGlobal.op_add(_movieScript.gTEprops.worklayer,LingoNumber(1))].tp = "tileBody"                        _movieScript.gTEprops.tlmatrix[q][c][LingoGlobal.op_add(_movieScript.gTEprops.worklayer,LingoNumber(1))].data = LingoList(plctile,_movieScript.gTEprops.worklayer)                        _movieScript.tedraw(LingoGlobal.rect(q,c,q,c),LingoGlobal.op_add(_movieScript.gTEprops.worklayer,LingoNumber(1)))
                        if LingoGlobal.ToBool(forceadaptterrain):                             _movieScript.gLEProps.matrix[q][c][LingoGlobal.op_add(_movieScript.gTEprops.worklayer,LingoNumber(1))][LingoNumber(1)] = tl.specs2[n]                                                                        n = LingoGlobal.op_add(n,LingoNumber(1))                    tmp_c = c                                    tmp_q = q                                    n = LingoNumber(1)        for tmp_q in LingoGlobal.pyrange(strt.loch, LingoGlobal.op_sub(LingoGlobal.op_add(strt.loch,tl.sz.loch),LingoNumber(1))):             q = tmp_q            for tmp_c in LingoGlobal.pyrange(strt.locv, LingoGlobal.op_sub(LingoGlobal.op_add(strt.locv,tl.sz.locv),LingoNumber(1))):                 c = tmp_c                if ((LingoGlobal.op_ne_b(tl.specs[n], -LingoNumber(1)) and LingoGlobal.ToBool(LingoGlobal.point(q,c).inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1)))))) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657))))):                     if LingoGlobal.op_ne_b(LingoGlobal.point(q,c), plctile):                         _movieScript.gTEprops.tlmatrix[q][c][_movieScript.gTEprops.worklayer].tp = "tileBody"                        _movieScript.gTEprops.tlmatrix[q][c][_movieScript.gTEprops.worklayer].data = LingoList(plctile,_movieScript.gTEprops.worklayer)                        _movieScript.tedraw(LingoGlobal.rect(q,c,q,c),_movieScript.gTEprops.worklayer)                    if LingoGlobal.ToBool(forceadaptterrain):                         _movieScript.gLEProps.matrix[q][c][_movieScript.gTEprops.worklayer][LingoNumber(1)] = tl.specs[n]                                                            n = LingoGlobal.op_add(n,LingoNumber(1))                tmp_c = c                            tmp_q = q                    if LingoGlobal.ToBool(forceadaptterrain):             _movieScript.lvleditdraw(LingoGlobal.rect(strt,LingoGlobal.op_add(strt,tl.sz)),LingoNumber(1))
            _movieScript.lvleditdraw(LingoGlobal.rect(strt,LingoGlobal.op_add(strt,tl.sz)),LingoNumber(2))
            _movieScript.lvleditdraw(LingoGlobal.rect(strt,LingoGlobal.op_add(strt,tl.sz)),LingoNumber(3))                return None            def deletetiletile(self, ps, lr):         tl = None        mdpnt = None        strt = None        n = None        q = None        c = None        rct = None        tl = _movieScript.gTEprops.tlmatrix[ps.loch][ps.locv][lr].data[LingoNumber(1)]        tl = _movieScript.gTiles[tl.loch].tls[tl.locv]        mdpnt = LingoGlobal.point(LingoGlobal.op_add(LingoGlobal.op_mul(tl.sz.loch,LingoNumber(0.5000)),LingoNumber(0.4999)).integer,LingoGlobal.op_add(LingoGlobal.op_mul(tl.sz.locv,LingoNumber(0.5000)),LingoNumber(0.4999)).integer)        strt = LingoGlobal.op_add(LingoGlobal.op_sub(ps,mdpnt),LingoGlobal.point(LingoNumber(1),LingoNumber(1)))        if (LingoGlobal.op_ne_b(tl.specs2, LingoNumber(0)) and lr < LingoNumber(3)):             n = LingoNumber(1)            for tmp_q in LingoGlobal.pyrange(strt.loch, LingoGlobal.op_sub(LingoGlobal.op_add(strt.loch,tl.sz.loch),LingoNumber(1))):                 q = tmp_q                for tmp_c in LingoGlobal.pyrange(strt.locv, LingoGlobal.op_sub(LingoGlobal.op_add(strt.locv,tl.sz.locv),LingoNumber(1))):                     c = tmp_c                    if ((LingoGlobal.op_ne_b(tl.specs2[n], -LingoNumber(1)) and LingoGlobal.ToBool(LingoGlobal.point(q,c).inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1)))))) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657))))):                         _movieScript.gTEprops.tlmatrix[q][c][LingoGlobal.op_add(lr,LingoNumber(1))].tp = "default"                        _movieScript.gTEprops.tlmatrix[q][c][LingoGlobal.op_add(lr,LingoNumber(1))].data = LingoNumber(0)                        rct = LingoGlobal.op_sub(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(16)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(16)),LingoGlobal.op_mul(q,LingoNumber(16)),LingoGlobal.op_mul(c,LingoNumber(16))),LingoGlobal.rect(LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16))))                        _global.member(LingoGlobal.concat("TEimg",_global.str(LingoNumber(2)))).image.copypixels(LingoImage.Pxl,rct,LingoImage.Pxl.rect,LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))))                    n = LingoGlobal.op_add(n,LingoNumber(1))                    tmp_c = c                                    tmp_q = q                                    n = LingoNumber(1)        for tmp_q in LingoGlobal.pyrange(strt.loch, LingoGlobal.op_sub(LingoGlobal.op_add(strt.loch,tl.sz.loch),LingoNumber(1))):             q = tmp_q            for tmp_c in LingoGlobal.pyrange(strt.locv, LingoGlobal.op_sub(LingoGlobal.op_add(strt.locv,tl.sz.locv),LingoNumber(1))):                 c = tmp_c                if ((LingoGlobal.op_ne_b(tl.specs[n], -LingoNumber(1)) and LingoGlobal.ToBool(LingoGlobal.point(q,c).inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(_movieScript.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(_movieScript.gLOprops.size.locv,LingoNumber(1)))))) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657))))):                     _movieScript.gTEprops.tlmatrix[q][c][lr].tp = "default"                    _movieScript.gTEprops.tlmatrix[q][c][lr].data = LingoNumber(0)                    rct = LingoGlobal.op_sub(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(16)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(16)),LingoGlobal.op_mul(q,LingoNumber(16)),LingoGlobal.op_mul(c,LingoNumber(16))),LingoGlobal.rect(LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16))))                    _global.member(LingoGlobal.concat("TEimg",_global.str(lr))).image.copypixels(LingoImage.Pxl,rct,LingoImage.Pxl.rect,LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))))                n = LingoGlobal.op_add(n,LingoNumber(1))                tmp_c = c                            tmp_q = q                            return None            def specialaction(self, tl):         if LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(17),LingoNumber(848),LingoNumber(657)))):             match _movieScript.gTEprops.specialedit[LingoNumber(1)].lower():                 case "attatch chain":                    _movieScript.gTEprops.tlmatrix[_movieScript.gTEprops.specialedit[LingoNumber(2)].loch][_movieScript.gTEprops.specialedit[LingoNumber(2)].locv][_movieScript.gTEprops.specialedit[LingoNumber(3)]].data[LingoNumber(3)] = tl                    _movieScript.gTEprops.specialedit = LingoNumber(0)                                                                return None            def changelayer(self):         pos = None        if LingoGlobal.op_eq_b(_movieScript.gTEprops.worklayer, LingoNumber(2)):             _global.sprite(LingoNumber(1)).blend = LingoNumber(10)            _global.sprite(LingoNumber(2)).blend = LingoNumber(10)            _global.sprite(LingoNumber(3)).blend = LingoNumber(90)            _global.sprite(LingoNumber(4)).blend = LingoNumber(100)            _global.sprite(LingoNumber(5)).blend = LingoNumber(70)            _global.sprite(LingoNumber(6)).blend = LingoNumber(0)                    elif LingoGlobal.op_eq_b(_movieScript.gTEprops.worklayer, LingoNumber(1)):             _global.sprite(LingoNumber(1)).blend = LingoNumber(10)            _global.sprite(LingoNumber(2)).blend = LingoNumber(10)            _global.sprite(LingoNumber(3)).blend = LingoNumber(60)            _global.sprite(LingoNumber(4)).blend = LingoNumber(10)            _global.sprite(LingoNumber(5)).blend = LingoNumber(70)            _global.sprite(LingoNumber(6)).blend = LingoNumber(100)                    else:            _global.sprite(LingoNumber(1)).blend = LingoNumber(100)            _global.sprite(LingoNumber(2)).blend = LingoNumber(100)            _global.sprite(LingoNumber(3)).blend = LingoNumber(60)            _global.sprite(LingoNumber(4)).blend = LingoNumber(10)            _global.sprite(LingoNumber(5)).blend = LingoNumber(60)            _global.sprite(LingoNumber(6)).blend = LingoNumber(10)                    _global.member("layerText").text = LingoGlobal.concat_space("Work Layer:",_global.str(_movieScript.gTEprops.worklayer))        pos = LingoGlobal.op_sub(LingoNumber(2),_movieScript.gTEprops.worklayer)        _global.sprite(LingoNumber(1)).loc = LingoGlobal.op_add(LingoGlobal.point(LingoNumber(432),LingoNumber(336)),LingoGlobal.op_mul(LingoGlobal.point(LingoGlobal.op_add(pos,LingoNumber(1)),LingoGlobal.op_sub(-pos,LingoNumber(1))),LingoNumber(3)))        _global.sprite(LingoNumber(2)).loc = LingoGlobal.op_add(LingoGlobal.point(LingoNumber(432),LingoNumber(336)),LingoGlobal.op_mul(LingoGlobal.point(LingoGlobal.op_add(pos,LingoNumber(1)),LingoGlobal.op_sub(-pos,LingoNumber(1))),LingoNumber(3)))        _global.sprite(LingoNumber(3)).loc = LingoGlobal.op_add(LingoGlobal.point(LingoNumber(432),LingoNumber(336)),LingoGlobal.op_mul(LingoGlobal.point(pos,-pos),LingoNumber(3)))        _global.sprite(LingoNumber(4)).loc = LingoGlobal.op_add(LingoGlobal.point(LingoNumber(432),LingoNumber(336)),LingoGlobal.op_mul(LingoGlobal.point(pos,-pos),LingoNumber(3)))        _global.sprite(LingoNumber(5)).loc = LingoGlobal.op_add(LingoGlobal.point(LingoNumber(432),LingoNumber(336)),LingoGlobal.op_mul(LingoGlobal.point(LingoGlobal.op_sub(pos,LingoNumber(1)),LingoGlobal.op_add(-pos,LingoNumber(1))),LingoNumber(3)))        _global.sprite(LingoNumber(6)).loc = LingoGlobal.op_add(LingoGlobal.point(LingoNumber(432),LingoNumber(336)),LingoGlobal.op_mul(LingoGlobal.point(LingoGlobal.op_sub(pos,LingoNumber(1)),LingoGlobal.op_add(-pos,LingoNumber(1))),LingoNumber(3)))                return None            def specialrectplacement(self, rct):         px = None        py = None        lookfortilecat = None        strlength = None        q = None        patterns = None        a = None        b = None        currentpattern = None        possiblepatterns = None        tl = None        match _movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv].nm.lower():             case "rect clear":                for tmp_px in LingoGlobal.pyrange(rct.left, rct.right):                     px = tmp_px                    for tmp_py in LingoGlobal.pyrange(rct.top, rct.bottom):                         py = tmp_py                        self.deletetile(LingoGlobal.point(px,py))
                        tmp_py = py                                            tmp_px = px                                                case "sh pattern box" | "sh grate box" | "alt grate box":                self.placetile(LingoGlobal.point(rct.left,rct.top),LingoGlobal.point(LingoNumber(6),LingoNumber(5)))
                self.placetile(LingoGlobal.point(rct.right,rct.top),LingoGlobal.point(LingoNumber(6),LingoNumber(6)))
                self.placetile(LingoGlobal.point(rct.right,rct.bottom),LingoGlobal.point(LingoNumber(6),LingoNumber(7)))
                self.placetile(LingoGlobal.point(rct.left,rct.bottom),LingoGlobal.point(LingoNumber(6),LingoNumber(8)))
                for tmp_px in LingoGlobal.pyrange(LingoGlobal.op_add(rct.left,LingoNumber(1)), LingoGlobal.op_sub(rct.right,LingoNumber(1))):                     px = tmp_px                    self.placetile(LingoGlobal.point(px,rct.top),LingoGlobal.point(LingoNumber(6),LingoNumber(1)))
                    self.placetile(LingoGlobal.point(px,rct.bottom),LingoGlobal.point(LingoNumber(6),LingoNumber(3)))
                    tmp_px = px                                    for tmp_py in LingoGlobal.pyrange(LingoGlobal.op_add(rct.top,LingoNumber(1)), LingoGlobal.op_sub(rct.bottom,LingoNumber(1))):                     py = tmp_py                    self.placetile(LingoGlobal.point(rct.left,py),LingoGlobal.point(LingoNumber(6),LingoNumber(4)))
                    self.placetile(LingoGlobal.point(rct.right,py),LingoGlobal.point(LingoNumber(6),LingoNumber(2)))
                    tmp_py = py                                    lookfortilecat = "SU patterns"                strlength = LingoNumber(10)                if LingoGlobal.op_eq_b(_movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv].nm, "SH grate box"):                     lookfortilecat = "SU grates"                    strlength = LingoNumber(8)                                    elif LingoGlobal.op_eq_b(_movieScript.gTiles[_movieScript.gTEprops.tmpos.loch].tls[_movieScript.gTEprops.tmpos.locv].nm, "Alt Grate Box"):                     lookfortilecat = "Drought Alt Grates"                    strlength = LingoNumber(9)                                    for tmp_q in LingoGlobal.pyrange(_movieScript.getfirsttilecat(), _movieScript.gTiles.count):                     q = tmp_q                    if LingoGlobal.op_eq_b(_movieScript.gTiles[q].nm, lookfortilecat):                         lookfortilecat = q                        break                                            tmp_q = q                                    patterns = LingoList()                patterns.add(LingoPropertyList(dict(tiles = LingoList("A"),upper = "dense",lower = "dense",tall = LingoNumber(1),freq = LingoNumber(5))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("B1"),upper = "espaced",lower = "dense",tall = LingoNumber(1),freq = LingoNumber(5))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("B2"),upper = "dense",lower = "espaced",tall = LingoNumber(1),freq = LingoNumber(5))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("B3"),upper = "ospaced",lower = "dense",tall = LingoNumber(1),freq = LingoNumber(5))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("B4"),upper = "dense",lower = "ospaced",tall = LingoNumber(1),freq = LingoNumber(5))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("C1"),upper = "espaced",lower = "espaced",tall = LingoNumber(1),freq = LingoNumber(5))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("C2"),upper = "ospaced",lower = "ospaced",tall = LingoNumber(1),freq = LingoNumber(5))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("E1"),upper = "ospaced",lower = "espaced",tall = LingoNumber(1),freq = LingoNumber(5))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("E2"),upper = "espaced",lower = "ospaced",tall = LingoNumber(1),freq = LingoNumber(5))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("F1"),upper = "dense",lower = "dense",tall = LingoNumber(2),freq = LingoNumber(1))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("F2"),upper = "dense",lower = "dense",tall = LingoNumber(2),freq = LingoNumber(1))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("F1","F2"),upper = "dense",lower = "dense",tall = LingoNumber(2),freq = LingoNumber(5))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("F3"),upper = "dense",lower = "dense",tall = LingoNumber(2),freq = LingoNumber(5))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("F4"),upper = "dense",lower = "dense",tall = LingoNumber(2),freq = LingoNumber(5))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("G1","G2"),upper = "dense",lower = "ospaced",tall = LingoNumber(2),freq = LingoNumber(5))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("I"),upper = "espaced",lower = "dense",tall = LingoNumber(1),freq = LingoNumber(4))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("J1"),upper = "ospaced",lower = "ospaced",tall = LingoNumber(2),freq = LingoNumber(1))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("J2"),upper = "ospaced",lower = "ospaced",tall = LingoNumber(2),freq = LingoNumber(1))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("J1","J2"),upper = "ospaced",lower = "ospaced",tall = LingoNumber(2),freq = LingoNumber(2))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("J3"),upper = "espaced",lower = "espaced",tall = LingoNumber(2),freq = LingoNumber(1))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("J4"),upper = "espaced",lower = "espaced",tall = LingoNumber(2),freq = LingoNumber(1))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("J3","J4"),upper = "espaced",lower = "espaced",tall = LingoNumber(2),freq = LingoNumber(2))))
                patterns.add(LingoPropertyList(dict(tiles = LingoList("B1","I"),upper = "espaced",lower = "dense",tall = LingoNumber(1),freq = LingoNumber(2))))
                for tmp_q in LingoGlobal.pyrange(LingoNumber(1), patterns.count):                     q = tmp_q                    for tmp_a in LingoGlobal.pyrange(LingoNumber(1), patterns[q].tiles.count):                         a = tmp_a                        for tmp_b in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gTiles[lookfortilecat].tls.count):                             b = tmp_b                            if LingoGlobal.op_eq_b(patterns[q].tiles[a], LingoGlobal.chars(_movieScript.gTiles[lookfortilecat].tls[b].nm,strlength,LingoGlobal.lengthmember_helper(_movieScript.gTiles[lookfortilecat].tls[b].nm))):                                 patterns[q].tiles[a] = b                                                            tmp_b = b                                                    tmp_a = a                                            tmp_q = q                                    py = LingoGlobal.op_add(rct.top,LingoNumber(1))                currentpattern = patterns[_global.random(patterns.count)]                while LingoGlobal.ToBool(LingoGlobal.op_lt(py,rct.bottom)):                     possiblepatterns = LingoList()                    for tmp_q in LingoGlobal.pyrange(LingoNumber(1), patterns.count):                         q = tmp_q                        if (LingoGlobal.op_eq_b(patterns[q].upper, currentpattern.lower) and LingoGlobal.op_add(py,patterns[q].tall) < LingoGlobal.op_add(rct.bottom,LingoNumber(1))):                             for tmp_a in LingoGlobal.pyrange(LingoNumber(1), patterns[q].freq):                                 a = tmp_a                                possiblepatterns.add(q)
                                tmp_a = a                                                                                    tmp_q = q                                            currentpattern = patterns[possiblepatterns[_global.random(possiblepatterns.count)]]                    tl = _global.random(currentpattern.tiles.count)                    for tmp_px in LingoGlobal.pyrange(LingoGlobal.op_add(rct.left,LingoNumber(1)), LingoGlobal.op_sub(rct.right,LingoNumber(1))):                         px = tmp_px                        tl = LingoGlobal.op_add(tl,LingoNumber(1))                        if tl > currentpattern.tiles.count:                             tl = LingoNumber(1)                                                    self.placetile(LingoGlobal.point(px,py),LingoGlobal.point(lookfortilecat,currentpattern.tiles[tl]))
                        tmp_px = px                                            py = LingoGlobal.op_add(py,currentpattern.tall)                                                                return None            