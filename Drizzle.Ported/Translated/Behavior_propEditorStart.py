from Drizzle.Runtime import *## Behavior script: propEditorStart#class propEditorStart(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         l = None        q = None        prop = None        actualsettings = None        idealsettings = None        i = None        smbl = None        propsettings = None        self._movieScript.preciseSnap = LingoNumber(0)        self._movieScript.snapToGrid = LingoNumber(0)        self._movieScript.stg = LingoNumber(0)        self._movieScript.ps = LingoNumber(0)        self._global._movie.exitlock = LingoGlobal.TRUE        self._global.member("propMenu").alignment = left        self._global.member("TEimg1").image = self._global.image(LingoGlobal.op_mul(LingoNumber(52),LingoNumber(16)),LingoGlobal.op_mul(LingoNumber(40),LingoNumber(16)),LingoNumber(16))        self._global.member("TEimg2").image = self._global.image(LingoGlobal.op_mul(LingoNumber(52),LingoNumber(16)),LingoGlobal.op_mul(LingoNumber(40),LingoNumber(16)),LingoNumber(16))        self._global.member("TEimg3").image = self._global.image(LingoGlobal.op_mul(LingoNumber(52),LingoNumber(16)),LingoGlobal.op_mul(LingoNumber(40),LingoNumber(16)),LingoNumber(16))        self._global.member("levelEditImage1").image = self._global.image(LingoGlobal.op_mul(LingoNumber(52),LingoNumber(16)),LingoGlobal.op_mul(LingoNumber(40),LingoNumber(16)),LingoNumber(16))        self._global.member("levelEditImage2").image = self._global.image(LingoGlobal.op_mul(LingoNumber(52),LingoNumber(16)),LingoGlobal.op_mul(LingoNumber(40),LingoNumber(16)),LingoNumber(16))        self._global.member("levelEditImage3").image = self._global.image(LingoGlobal.op_mul(LingoNumber(52),LingoNumber(16)),LingoGlobal.op_mul(LingoNumber(40),LingoNumber(16)),LingoNumber(16))        self._global.member("levelEditImageShortCuts").image = self._global.image(LingoGlobal.op_mul(LingoNumber(52),LingoNumber(16)),LingoGlobal.op_mul(LingoNumber(40),LingoNumber(16)),LingoNumber(16))        self._global.member("ropePreview").image = self._global.image(LingoGlobal.op_mul(LingoNumber(52),LingoNumber(16)),LingoGlobal.op_mul(LingoNumber(40),LingoNumber(16)),LingoNumber(1))        self._global.sprite(LingoNumber(269)).loc = LingoGlobal.point(LingoNumber(432),LingoNumber(336))        self._movieScript.tedraw(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),self._movieScript.gLOprops.size.loch,self._movieScript.gLOprops.size.locv),LingoNumber(1))
        self._movieScript.tedraw(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),self._movieScript.gLOprops.size.loch,self._movieScript.gLOprops.size.locv),LingoNumber(2))
        self._movieScript.tedraw(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),self._movieScript.gLOprops.size.loch,self._movieScript.gLOprops.size.locv),LingoNumber(3))
        self._movieScript.lvleditdraw(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),self._movieScript.gLOprops.size.loch,self._movieScript.gLOprops.size.locv),LingoNumber(1))
        self._movieScript.lvleditdraw(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),self._movieScript.gLOprops.size.loch,self._movieScript.gLOprops.size.locv),LingoNumber(2))
        self._movieScript.lvleditdraw(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),self._movieScript.gLOprops.size.loch,self._movieScript.gLOprops.size.locv),LingoNumber(3))
        self._movieScript.drawshortcutsimg(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),self._movieScript.gLOprops.size.loch,self._movieScript.gLOprops.size.locv),LingoNumber(16))
        self._movieScript.gDirectionKeys = LingoList(LingoNumber(0),LingoNumber(0),LingoNumber(0),LingoNumber(0))        self._global.sprite(LingoNumber(250)).blend = LingoNumber(20)        self._global.sprite(LingoNumber(251)).blend = LingoNumber(20)        self._global.sprite(LingoNumber(252)).blend = LingoNumber(40)        self._global.sprite(LingoNumber(253)).blend = LingoNumber(40)        self._global.sprite(LingoNumber(254)).blend = LingoNumber(90)        self._global.sprite(LingoNumber(255)).blend = LingoNumber(90)        self._global.sprite(LingoNumber(257)).blend = LingoNumber(80)        self._global.sprite(LingoNumber(257)).visibility = LingoNumber(0)        self._movieScript.gPEprops.worklayer = LingoNumber(1)        self._global.sprite(LingoNumber(250)).loc = LingoGlobal.point(LingoNumber(432),LingoNumber(336))        self._global.sprite(LingoNumber(251)).loc = LingoGlobal.point(LingoNumber(432),LingoNumber(336))        self._global.sprite(LingoNumber(252)).loc = LingoGlobal.point(LingoNumber(432),LingoNumber(336))        self._global.sprite(LingoNumber(253)).loc = LingoGlobal.point(LingoNumber(432),LingoNumber(336))        self._global.sprite(LingoNumber(254)).loc = LingoGlobal.point(LingoNumber(432),LingoNumber(336))        self._global.sprite(LingoNumber(255)).loc = LingoGlobal.point(LingoNumber(432),LingoNumber(336))        self._global.sprite(LingoNumber(260)).loc = LingoGlobal.point(LingoNumber(432),LingoNumber(336))        self._global.sprite(LingoNumber(262)).loc = LingoGlobal.point(LingoNumber(432),LingoNumber(336))        l = LingoPropertyList(dict(w = LingoNumber(0),a = LingoNumber(0),s = LingoNumber(0),d = LingoNumber(0),l = LingoNumber(0),n = LingoNumber(0),m1 = LingoNumber(0),m2 = LingoNumber(0),c = LingoNumber(0),z = LingoNumber(0)))        self._movieScript.gPEprops.lastkeys = l.duplicate()        self._movieScript.gPEprops.keys = l.duplicate()        self._movieScript.peSavedFlip = LingoGlobal.point(LingoNumber(0),LingoNumber(0))        self._movieScript.peSavedStretch = LingoGlobal.point(LingoNumber(0),LingoNumber(0))        self._movieScript.peScrollPos = LingoNumber(0)        self._movieScript.gPEblink = LingoNumber(0)        self._movieScript.peFreeQuad = LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),LingoNumber(0)))        self._movieScript.settingCursor = LingoNumber(1)        self._movieScript.gPEprops.pmsavposl = LingoList()        tmp_q=int(LingoNumber(1))        while tmp_q < self._movieScript.gProps.count:             q = tmp_q            self._movieScript.gPEprops.pmsavposl.add(LingoNumber(1))
            tmp_q = q            tmp_q += 1                    self._movieScript.gPEprops.pmpos = LingoGlobal.point(LingoNumber(1),LingoNumber(1))        for tmp_prop in self._movieScript.gPEprops.props:             prop = tmp_prop            actualsettings = prop[LingoNumber(5)].settings            idealsettings = self._movieScript.gProps[prop[LingoNumber(3)].loch].prps[prop[LingoNumber(3)].locv].settings            tmp_i=int(LingoNumber(1))            while tmp_i < idealsettings.count:                 i = tmp_i                smbl = idealsettings.getpropat(i)                if LingoGlobal.op_eq_b(actualsettings.findpos(smbl), LingoGlobal.VOID):                     actualsettings.addprop(smbl,idealsettings[i])                tmp_i = i                tmp_i += 1                                    self._movieScript.editSettingsProp = -LingoNumber(1)        self._movieScript.settingsPropType = LingoGlobal.VOID        propsettings = LingoGlobal.VOID        if LingoGlobal.op_eq_b(self._movieScript.gPEprops.color, LingoNumber(0)):             self._global.member("Prop Color Text").text = LingoGlobal.concat("PROP COLOR: ","NONE")            self._global.sprite(LingoNumber(270)).color = self._global.color(LingoNumber(150),LingoNumber(150),LingoNumber(150))                    else:            self._global.member("Prop Color Text").text = LingoGlobal.concat("PROP COLOR: ",self._movieScript.gPEcolors[self._movieScript.gPEprops.color][LingoNumber(1)])            self._global.sprite(LingoNumber(270)).color = self._movieScript.gPEcolors[self._movieScript.gPEprops.color][LingoNumber(2)]                    self._global.script("propEditor").updateworklayertext()
        self._global.script("propEditor").renderpropsimage()
        self._global.call(updatepropmenu,LingoGlobal.point(LingoNumber(0),LingoNumber(0)))
        self._global.member("propMenu").text = self._global.member("propBaseMenu").text        self._global.member("Drought Reserve text").text = ""                return None            