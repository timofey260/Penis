from Drizzle.Runtime import *## Behavior script: loadLevel#class loadLevel(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         txt = None        f = None        q = None        up = None        dwn = None        lft = None        rgth = None        if LingoGlobal.ToBool(_movieScript.showControls):             _global.sprite(LingoNumber(32)).blend = LingoNumber(100)                    else:            _global.sprite(LingoNumber(32)).blend = LingoNumber(0)                    if ((LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(56))) and LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(48)))) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             _global._player.appminimize()        if LingoGlobal.ToBool(_movieScript.checkexit()):             _global._player.quit()        txt = "Use the up and down keys to select a project. Use enter to open it."        txt += str(LingoGlobal.RETURN)        for tmp_f in _movieScript.gLOADPATH:             f = tmp_f            txt += str(LingoGlobal.concat(f,"/"))                    txt += str(LingoGlobal.RETURN)        txt += str(LingoGlobal.RETURN)        for tmp_q in LingoGlobal.pyrange(_movieScript.ldPrps.listscrollpos, LingoGlobal.op_add(_movieScript.ldPrps.listscrollpos,_movieScript.ldPrps.listshowtotal)):             q = tmp_q            if q > _movieScript.projects.count:                 break                            else:                if LingoGlobal.op_ne_b(q, _movieScript.ldPrps.currproject):                     txt += str(_movieScript.projects[q])                                    else:                    txt += str(LingoGlobal.concat_space("<",_movieScript.projects[q],">"))                                    txt += str(LingoGlobal.RETURN)                            tmp_q = q                    _global.member("ProjectsL").text = txt        up = _global._key.keypressed(LingoNumber(126))        dwn = _global._key.keypressed(LingoNumber(125))        lft = _global._key.keypressed(LingoNumber(123))        rgth = _global._key.keypressed(LingoNumber(124))        if LingoGlobal.op_eq_b(_global._movie.window.sizestate, minimized):             up = LingoGlobal.FALSE            dwn = LingoGlobal.FALSE            lft = LingoGlobal.FALSE            rgth = LingoGlobal.FALSE                    if (LingoGlobal.ToBool(up) and LingoGlobal.op_eq_b(_movieScript.ldPrps.lstup, LingoNumber(0))):             _movieScript.ldPrps.currproject = LingoGlobal.op_sub(_movieScript.ldPrps.currproject,LingoNumber(1))            if _movieScript.ldPrps.currproject < LingoNumber(1):                 _movieScript.ldPrps.currproject = _movieScript.projects.count                                    if (LingoGlobal.ToBool(dwn) and LingoGlobal.op_eq_b(_movieScript.ldPrps.lstdwn, LingoNumber(0))):             _movieScript.ldPrps.currproject = LingoGlobal.op_add(_movieScript.ldPrps.currproject,LingoNumber(1))            if _movieScript.ldPrps.currproject > _movieScript.projects.count:                 _movieScript.ldPrps.currproject = LingoNumber(1)                                    if _movieScript.ldPrps.currproject < _movieScript.ldPrps.listscrollpos:             _movieScript.ldPrps.listscrollpos = _movieScript.ldPrps.currproject                    elif _movieScript.ldPrps.currproject > LingoGlobal.op_add(_movieScript.ldPrps.listscrollpos,_movieScript.ldPrps.listshowtotal):             _movieScript.ldPrps.listscrollpos = LingoGlobal.op_sub(_movieScript.ldPrps.currproject,_movieScript.ldPrps.listshowtotal)                    if ((LingoGlobal.ToBool(rgth) and LingoGlobal.op_eq_b(_movieScript.ldPrps.rgth, LingoNumber(0))) and _movieScript.projects.count > LingoNumber(0)):             if LingoGlobal.op_eq_b(LingoGlobal.chars(_movieScript.projects[_movieScript.ldPrps.currproject],LingoNumber(1),LingoNumber(1)), "#"):                 self.loadsubfolder(_movieScript.projects[_movieScript.ldPrps.currproject])                    elif (LingoGlobal.ToBool(lft) and LingoGlobal.op_eq_b(_movieScript.ldPrps.lft, LingoNumber(0))):             if _movieScript.gLOADPATH.count > LingoNumber(0):                 _movieScript.gLOADPATH.deleteat(_movieScript.gLOADPATH.count)
                _global._movie.go(LingoNumber(2))                    _movieScript.ldPrps.lstup = up        _movieScript.ldPrps.lstdwn = dwn        _movieScript.ldPrps.lft = lft        _movieScript.ldPrps.rgth = rgth        if (LingoGlobal.ToBool(_global._key.keypressed("N")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             _movieScript.gLoadedName = "New Project"            _global.member("level Name").text = "New Project"            _global._movie.go(LingoNumber(7))        elif ((LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(36))) and _movieScript.projects.count > LingoNumber(0)) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             if LingoGlobal.op_ne_b(LingoGlobal.chars(_movieScript.projects[_movieScript.ldPrps.currproject],LingoNumber(1),LingoNumber(1)), "#"):                 self.loadlevel(_movieScript.projects[_movieScript.ldPrps.currproject])
                _global._movie.go(LingoNumber(7))                    _global.go(_global.the_frame)        return None            def loadsubfolder(self, fldrname):         _movieScript.gLOADPATH.add(LingoGlobal.chars(fldrname,LingoNumber(2),LingoGlobal.lengthmember_helper(fldrname)))
        _global._movie.go(LingoNumber(2))        return None            def loadlevel(self, lvlname, fullpath):         pth = None        f = None        objfileio = None        lastbackslash = None        q = None        l2 = None        sv2 = None        l1 = None        valenv = None        sav = None        wantedrect = None        img = None        if LingoGlobal.ToBool(fullpath):             pth = ""                    else:            pth = LingoGlobal.concat(_global.the_moviePath,"LevelEditorProjects",_global.the_dirSeparator)            for tmp_f in _movieScript.gLOADPATH:                 f = tmp_f                pth = LingoGlobal.concat(pth,f,_global.the_dirSeparator)                                    objfileio = _global.new(_global.xtra("fileio"))        objfileio.openfile(LingoGlobal.concat(pth,lvlname,".txt"),LingoNumber(0))
        if LingoGlobal.op_eq_b(fullpath, LingoNumber(1)):             _movieScript.gLoadedName = ""            lastbackslash = LingoNumber(0)            for tmp_q in LingoGlobal.pyrange(LingoNumber(1), LingoGlobal.lengthmember_helper(lvlname)):                 q = tmp_q                if LingoGlobal.op_eq_b(LingoGlobal.chars(lvlname,q,q), _global.the_dirSeparator):                     lastbackslash = q                                    tmp_q = q                            _movieScript.gLoadedName = LingoGlobal.chars(lvlname,LingoGlobal.op_add(lastbackslash,LingoNumber(1)),LingoGlobal.lengthmember_helper(lvlname))            _global.put(_movieScript.gLoadedName)        else:            _movieScript.gLoadedName = lvlname                    _global.member("level Name").text = lvlname        l2 = objfileio.readfile()        objfileio.closefile()
        sv2 = _movieScript.gLOprops.duplicate()        l1 = _global.value(LingoGlobal.linemember_helper(l2)[LingoNumber(1)])        _movieScript.gLEProps.matrix = l1        l1 = _global.value(LingoGlobal.linemember_helper(l2)[LingoNumber(2)])        _movieScript.gTEprops = l1        l1 = _global.value(LingoGlobal.linemember_helper(l2)[LingoNumber(3)])        _movieScript.gEEprops = l1        l1 = _global.value(LingoGlobal.linemember_helper(l2)[LingoNumber(4)])        _movieScript.gLightEProps = l1        l1 = _global.value(LingoGlobal.linemember_helper(l2)[LingoNumber(5)])        _movieScript.gLevel = l1        l1 = _global.value(LingoGlobal.linemember_helper(l2)[LingoNumber(6)])        _movieScript.gLOprops = l1        if LingoGlobal.op_eq_b(_movieScript.gLOprops.findpos(light), LingoGlobal.VOID):             _movieScript.gLOprops.addprop(light,LingoNumber(1))        if LingoGlobal.op_eq_b(_movieScript.gTEprops.findpos(specialedit), LingoGlobal.VOID):             _movieScript.gTEprops.addprop(specialedit,LingoNumber(0))        if LingoGlobal.op_eq_b(_movieScript.gLOprops.findpos(size), LingoGlobal.VOID):             _movieScript.gLOprops.addprop(size,LingoGlobal.point(LingoNumber(52),LingoNumber(40)))        if LingoGlobal.op_eq_b(_movieScript.gLOprops.findpos(extratiles), LingoGlobal.VOID):             _movieScript.gLOprops.addprop(extratiles,LingoList(LingoNumber(1),LingoNumber(1),LingoNumber(1),LingoNumber(3)))        _movieScript.gLOprops.pals = LingoList(LingoPropertyList(dict(detcol = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)))))        if LingoGlobal.op_eq_b(_global.value(LingoGlobal.linemember_helper(l2)[LingoNumber(7)]), LingoGlobal.VOID):             _movieScript.gCameraProps.cameras = LingoList(LingoGlobal.op_sub(LingoGlobal.point(LingoGlobal.op_mul(_movieScript.gLOprops.size.loch,LingoNumber(10)),LingoGlobal.op_mul(_movieScript.gLOprops.size.locv,LingoNumber(10))),LingoGlobal.point(LingoGlobal.op_mul(LingoNumber(35),LingoNumber(20)),LingoGlobal.op_mul(LingoNumber(20),LingoNumber(20)))))                    else:            _movieScript.gCameraProps = _global.value(LingoGlobal.linemember_helper(l2)[LingoNumber(7)])                    valenv = _global.value(LingoGlobal.linemember_helper(l2)[LingoNumber(8)])        if ((LingoGlobal.op_eq_b(valenv, LingoGlobal.VOID) or LingoGlobal.op_ne_b(_global.ilk(valenv), proplist)) or LingoGlobal.op_eq_b(valenv.findpos(waterlevel), LingoGlobal.VOID)):             _movieScript.resetgenveditorprops()        else:            _movieScript.gEnvEditorProps = valenv                    if (LingoGlobal.op_eq_b(_global.value(LingoGlobal.linemember_helper(l2)[LingoNumber(9)]), LingoGlobal.VOID) or LingoGlobal.op_ne_b(LingoGlobal.chars(LingoGlobal.linemember_helper(l2)[LingoNumber(9)],LingoNumber(1),LingoNumber(6)), "[#prop")):             _movieScript.resetpropeditorprops()        else:            _movieScript.gPEprops = _global.value(LingoGlobal.linemember_helper(l2)[LingoNumber(9)])                    if LingoGlobal.op_eq_b(_movieScript.gPEprops.findpos(color), LingoGlobal.VOID):             _movieScript.gPEprops.addprop(color,LingoNumber(0))        if LingoGlobal.op_eq_b(_movieScript.gPEprops.findpos(props), LingoGlobal.VOID):             _movieScript.gPEprops.addprop(props,LingoList())        _movieScript.gTEprops.tmpos = LingoGlobal.point(LingoNumber(2),LingoNumber(1))        self.versionfix()
        _global.member("lightImage").image = _global.image(LingoGlobal.op_add(LingoGlobal.op_mul(_movieScript.gLOprops.size.loch,LingoNumber(20)),LingoNumber(300)),LingoGlobal.op_add(LingoGlobal.op_mul(_movieScript.gLOprops.size.locv,LingoNumber(20)),LingoNumber(300)),LingoNumber(1))        sav = _global.member("lightImage")        _global.member("lightImage").importfileinto(LingoGlobal.concat(pth,lvlname,".png"))
        sav.name = "lightImage"        if LingoGlobal.op_ne_b(_global.member("lightImage").image.rect, LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_add(LingoGlobal.op_mul(_movieScript.gLOprops.size.loch,LingoNumber(20)),LingoNumber(300)),LingoGlobal.op_add(LingoGlobal.op_mul(_movieScript.gLOprops.size.locv,LingoNumber(20)),LingoNumber(300)))):             wantedrect = LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_add(LingoGlobal.op_mul(_movieScript.gLOprops.size.loch,LingoNumber(20)),LingoNumber(300)),LingoGlobal.op_add(LingoGlobal.op_mul(_movieScript.gLOprops.size.locv,LingoNumber(20)),LingoNumber(300)))            img = _global.image(wantedrect.width,wantedrect.height,LingoNumber(1))            img.copypixels(_global.member("lightImage").image,LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_div(wantedrect.width,LingoNumber(2)),LingoGlobal.op_div(wantedrect.height,LingoNumber(2)),LingoGlobal.op_div(wantedrect.width,LingoNumber(2)),LingoGlobal.op_div(wantedrect.height,LingoNumber(2))),LingoGlobal.rect(LingoGlobal.op_div(-_global.member("lightImage").rect.width,LingoNumber(2)),LingoGlobal.op_div(-_global.member("lightImage").image.rect.height,LingoNumber(2)),LingoGlobal.op_div(_global.member("lightImage").image.rect.width,LingoNumber(2)),LingoGlobal.op_div(_global.member("lightImage").image.rect.height,LingoNumber(2)))),_global.member("lightImage").image.rect)
            _global.member("lightImage").image = img            _global.put("Adapted light rect")        _movieScript.gLASTDRAWWASFULLANDMINI = LingoNumber(0)        _global.put(LingoGlobal.concat(pth,_global.the_dirSeparator,lvlname,".png"))        return None            def versionfix(self):         q = None        c = None        d = None        huntnew = None        pnt = None        found = None        cat = None        tl = None        correctreference = None        a = None        b = None        lz = None        ef = None        sd = None        op = None        rotop = None        lay = None        op2 = None        clr = None        op3 = None        gaf = None        grd = None        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gLOprops.size.loch):             q = tmp_q            for tmp_c in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gLOprops.size.locv):                 c = tmp_c                for tmp_d in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(3)):                     d = tmp_d                    if LingoGlobal.op_eq_b(_movieScript.gTEprops.tlmatrix[q][c][d].tp, "tileHead"):                         huntnew = ""                        if _movieScript.gTEprops.tlmatrix[q][c][d].data.count < LingoNumber(2):                             huntnew = _movieScript.gTEprops.tlmatrix[q][c][d].data.nm                                                    else:                            pnt = _movieScript.gTEprops.tlmatrix[q][c][d].data[LingoNumber(1)]                            if _movieScript.gTiles.count >= pnt.loch:                                 if _movieScript.gTiles[pnt.loch].tls.count >= pnt.locv:                                     if LingoGlobal.op_ne_b(_movieScript.gTiles[pnt.loch].tls[pnt.locv].nm, _movieScript.gTEprops.tlmatrix[q][c][d].data[LingoNumber(2)]):                                         huntnew = _movieScript.gTEprops.tlmatrix[q][c][d].data[LingoNumber(2)]                                                                                                            else:                                    huntnew = _movieScript.gTEprops.tlmatrix[q][c][d].data[LingoNumber(2)]                                                                                                else:                                huntnew = _movieScript.gTEprops.tlmatrix[q][c][d].data[LingoNumber(2)]                                                                                    found = LingoNumber(0)                        if LingoGlobal.op_ne_b(huntnew, ""):                             _movieScript.gTEprops.tlmatrix[q][c][d].data = LingoList(LingoGlobal.point(LingoNumber(2),LingoNumber(1)),"NOT FOUND")                            for tmp_cat in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gTiles.count):                                 cat = tmp_cat                                for tmp_tl in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gTiles[cat].tls.count):                                     tl = tmp_tl                                    if LingoGlobal.op_eq_b(_movieScript.gTiles[cat].tls[tl].nm, huntnew):                                         _movieScript.gTEprops.tlmatrix[q][c][d].data = LingoList(LingoGlobal.point(cat,tl),huntnew)                                        found = LingoNumber(1)                                        break                                                                            tmp_tl = tl                                                                    if LingoGlobal.ToBool(found):                                     break                                                                    tmp_cat = cat                                                            if not LingoGlobal.ToBool(found):                                 _movieScript.writeexception("Tile Not Found",LingoGlobal.concat("the tile ",LingoGlobal.QUOTE,huntnew,LingoGlobal.QUOTE," is missing in the Init.txt file from your Graphics folder."))
                                _global.put(LingoGlobal.concat("Warning: unknown tile '",huntnew,"' in map file. Replacing with default material."))
                                _movieScript.gTEprops.tlmatrix[q][c][d] = LingoPropertyList(dict(tp = "default",data = LingoNumber(0)))                                                                                                        tmp_d = d                                    tmp_c = c                            tmp_q = q                    for tmp_q in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gLEProps.toolmatrix.count):             q = tmp_q            for tmp_c in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gLEProps.toolmatrix[LingoNumber(1)].count):                 c = tmp_c                if LingoGlobal.op_eq_b(_movieScript.gLEProps.toolmatrix[q][c], "save"):                     _movieScript.gLEProps.toolmatrix[q][c] = ""                                    tmp_c = c                            tmp_q = q                    for tmp_q in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gPEprops.props.count):             q = tmp_q            correctreference = LingoGlobal.TRUE            if _movieScript.gPEprops.props[q][LingoNumber(3)].loch > _movieScript.gProps.count:                 correctreference = LingoGlobal.FALSE                            elif _movieScript.gPEprops.props[q][LingoNumber(3)].locv > _movieScript.gProps[_movieScript.gPEprops.props[q][LingoNumber(3)].loch].prps.count:                 correctreference = LingoGlobal.FALSE                            elif LingoGlobal.op_ne_b(_movieScript.gProps[_movieScript.gPEprops.props[q][LingoNumber(3)].loch].prps[_movieScript.gPEprops.props[q][LingoNumber(3)].locv].nm, _movieScript.gPEprops.props[q][LingoNumber(2)]):                 correctreference = LingoGlobal.FALSE                            if LingoGlobal.op_eq_b(correctreference, LingoGlobal.FALSE):                 for tmp_a in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gProps.count):                     a = tmp_a                    for tmp_b in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gProps[a].prps.count):                         b = tmp_b                        if LingoGlobal.op_eq_b(_movieScript.gProps[a].prps[b].nm, _movieScript.gPEprops.props[q][LingoNumber(2)]):                             correctreference = LingoGlobal.TRUE                            _movieScript.gPEprops.props[q][LingoNumber(3)] = LingoGlobal.point(a,b)                            break                                                    tmp_b = b                                            if LingoGlobal.op_eq_b(correctreference, LingoGlobal.TRUE):                         break                                            tmp_a = a                                                if LingoGlobal.op_eq_b(_movieScript.gPEprops.props[q].count, LingoNumber(4)):                 _movieScript.gPEprops.props[q].add(LingoPropertyList(dict(settings = _movieScript.gProps[_movieScript.gPEprops.props[q][LingoNumber(3)].loch].prps[_movieScript.gPEprops.props[q][LingoNumber(3)].locv].settings.duplicate())))            if LingoGlobal.op_eq_b(correctreference, LingoGlobal.FALSE):                 _movieScript.writeexception("Prop Not Found",LingoGlobal.concat("the prop ",LingoGlobal.QUOTE,_global.str(_movieScript.gPEprops.props[q][LingoNumber(2)]),LingoGlobal.QUOTE," is missing in the Init.txt file from your Props folder."))
                _movieScript.gPEprops.props[q][LingoNumber(3)] = LingoGlobal.point(LingoNumber(1),LingoNumber(1))                            tmp_q = q                    for tmp_lz in _movieScript.gLevel.lizards:             lz = tmp_lz            if LingoGlobal.op_eq_b(lz.count, LingoNumber(3)):                 lz.add(LingoNumber(1))                    if LingoGlobal.op_eq_b(_movieScript.gLevel.findpos(waterdrips), LingoGlobal.VOID):             _movieScript.gLevel.addprop(waterdrips,LingoNumber(1))        if LingoGlobal.op_eq_b(_movieScript.gLevel.findpos(tags), LingoGlobal.VOID):             _movieScript.gLevel.addprop(tags,LingoList())        if LingoGlobal.op_ne_b(_movieScript.gLevel.findpos(lightdynamic), LingoGlobal.VOID):             _movieScript.gLevel.deleteprop(lightdynamic)
            _movieScript.gLevel.addprop(lighttype,"Static")        if LingoGlobal.op_ne_b(_movieScript.gLevel.findpos(lightblend), LingoGlobal.VOID):             _movieScript.gLevel.deleteprop(lightblend)        if LingoGlobal.op_eq_b(_movieScript.gLOprops.findpos(tileseed), LingoGlobal.VOID):             _movieScript.gLOprops.addprop(tileseed,_global.random(LingoNumber(400)))        if LingoGlobal.op_eq_b(_movieScript.gLOprops.findpos(colglows), LingoGlobal.VOID):             _movieScript.gLOprops.addprop(colglows,LingoList(LingoNumber(0),LingoNumber(0)))        if LingoGlobal.op_eq_b(_movieScript.gLEProps.findpos(campos), LingoGlobal.VOID):             _movieScript.gLEProps.addprop(campos,LingoGlobal.point(LingoNumber(0),LingoNumber(0)))        if LingoGlobal.op_eq_b(_movieScript.gCameraProps.findpos(quads), LingoGlobal.VOID):             _movieScript.gCameraProps.addprop(quads,LingoList())
            for tmp_q in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gCameraProps.cameras.count):                 q = tmp_q                _movieScript.gCameraProps.quads.add(LingoList(LingoList(LingoNumber(0),LingoNumber(0)),LingoList(LingoNumber(0),LingoNumber(0)),LingoList(LingoNumber(0),LingoNumber(0)),LingoList(LingoNumber(0),LingoNumber(0))))
                tmp_q = q                                    if LingoGlobal.op_eq_b(_movieScript.gLevel.findpos(music), LingoGlobal.VOID):             _movieScript.gLevel.addprop(music,"NONE")        for tmp_ef in _movieScript.gEEprops.effects:             ef = tmp_ef            sd = LingoNumber(0)            for tmp_op in ef.options:                 op = tmp_op                if LingoGlobal.op_eq_b(op[LingoNumber(1)], "seed"):                     sd = LingoNumber(1)                    break                                                if LingoGlobal.op_eq_b(sd, LingoNumber(0)):                 ef.options.add(LingoList("Seed",LingoList(),_global.random(LingoNumber(500))))            rotop = LingoNumber(0)            for tmp_op in ef.options:                 op = tmp_op                if LingoGlobal.op_eq_b(op[LingoNumber(1)], "Rotate"):                     rotop = LingoNumber(1)                    break                                                if (LingoGlobal.op_eq_b(rotop, LingoNumber(0)) and LingoGlobal.op_eq_b(ef.nm, "Little Flowers")):                 ef.options.add(LingoList("Rotate",LingoList("On","Off"),"Off"))            lay = LingoNumber(0)            for tmp_op2 in ef.options:                 op2 = tmp_op2                if LingoGlobal.op_eq_b(op2[LingoNumber(1)], "Layers"):                     lay = LingoNumber(1)                    if LingoGlobal.op_ne_b(op2[LingoNumber(2)], LingoList("All","1","2","3","1:st and 2:nd","2:nd and 3:rd")):                         op2[LingoNumber(2)] = LingoList("All","1","2","3","1:st and 2:nd","2:nd and 3:rd")                                            break                                                if (LingoGlobal.op_eq_b(lay, LingoNumber(0)) and LingoGlobal.op_eq_b(LingoList("BlackGoo","Super BlackGoo","Stained Glass Properties").getpos(ef.nm), LingoNumber(0))):                 if LingoList("Fungi Flowers","Lighthouse Flowers","Colored Fungi Flowers","Colored Lighthouse Flowers","Fern","Giant Mushroom","Sprawlbush","featherFern","Fungus Tree").getpos(ef.nm) > LingoNumber(0):                     ef.options.add(LingoList("Layers",LingoList("All","1","2","3","1:st and 2:nd","2:nd and 3:rd"),"1"))                else:                    ef.options.add(LingoList("Layers",LingoList("All","1","2","3","1:st and 2:nd","2:nd and 3:rd"),"All"))                            clr = LingoNumber(0)            for tmp_op3 in ef.options:                 op3 = tmp_op3                if LingoGlobal.op_eq_b(op3[LingoNumber(1)], "Color"):                     clr = LingoNumber(1)                    if LingoGlobal.op_ne_b(op3[LingoNumber(2)], LingoList("Color1","Color2","Dead")):                         op3[LingoNumber(2)] = LingoList("Color1","Color2","Dead")                                            break                                                if (LingoGlobal.op_eq_b(clr, LingoNumber(0)) and LingoList("DaddyCorruption").getpos(ef.nm) > LingoNumber(0)):                 ef.options.add(LingoList("Color",LingoList("Color1","Color2","Dead"),"Color2"))            gaf = LingoNumber(0)            for tmp_grd in ef.options:                 grd = tmp_grd                if LingoGlobal.op_eq_b(grd[LingoNumber(1)], "Affect Gradients and Decals"):                     gaf = LingoNumber(1)                    break                                                if (LingoGlobal.op_eq_b(gaf, LingoNumber(0)) and LingoList("Melt","Super Melt","Destructive Melt","Rust","Barnacles").getpos(ef.nm) > LingoNumber(0)):                 ef.options.add(LingoList("Affect Gradients and Decals",LingoList("Yes","No"),"No"))            if (LingoGlobal.op_eq_b(gaf, LingoNumber(0)) and LingoList("Slime","SlimeX3","Fat Slime").getpos(ef.nm) > LingoNumber(0)):                 ef.options.add(LingoList("Affect Gradients and Decals",LingoList("Yes","No"),"Yes"))            if LingoGlobal.op_eq_b(ef.findpos(crossscreen), LingoGlobal.VOID):                 ef.addprop(crossscreen,LingoNumber(0))
                if LingoList("Hang Roots","Growers","Wires","Chains").getpos(ef.nm) > LingoNumber(0):                     ef.crossscreen = LingoNumber(1)                                                if LingoList("Arm Growers","Growers","Mini Growers","Rollers","Thorn Growers","Garbage Spirals","Spinets","Small Springs","Wires","Chains","Colored Wires","Colored Chains","Hang Roots","Thick Roots","Shadow Plants","Colored Hang Roots","Colored Thick Roots","Colored Shadow Plants","Root Plants").getpos(ef.nm) > LingoNumber(0):                 ef.crossscreen = LingoNumber(1)                            else:                ef.crossscreen = LingoNumber(0)                            if LingoList("Slime","Fat Slime","Scales","SlimeX3","DecalsOnlySlime","Melt","Rust","Barnacles","Colored Barnacles","Clovers","Erode","Sand","Super Erode","Ultra Super Erode","Roughen","Impacts","Super Melt","Destructive Melt").getpos(ef.nm) > LingoNumber(0):                 ef.tp = "standardErosion"                            else:                ef.tp = "nn"                            if LingoList("Slime","DecalsOnlySlime").getpos(ef.nm) > LingoNumber(0):                 ef.repeats = LingoNumber(130)                ef.affectopenareas = LingoNumber(0.5000)                            if LingoList("Fat Slime").getpos(ef.nm) > LingoNumber(0):                 ef.repeats = LingoNumber(200)                ef.affectopenareas = LingoNumber(0.5000)                            if LingoList("Scales").getpos(ef.nm) > LingoNumber(0):                 ef.repeats = LingoNumber(200)                ef.affectopenareas = LingoNumber(0.0500)                            if LingoList("SlimeX3").getpos(ef.nm) > LingoNumber(0):                 ef.repeats = LingoGlobal.op_mul(LingoNumber(130),LingoNumber(3))                ef.affectopenareas = LingoNumber(0.5000)                            if LingoList("Melt","Super Erode","Ultra Super Erode").getpos(ef.nm) > LingoNumber(0):                 ef.repeats = LingoNumber(60)                ef.affectopenareas = LingoNumber(0.5000)                            if LingoList("Rust").getpos(ef.nm) > LingoNumber(0):                 ef.repeats = LingoNumber(60)                ef.affectopenareas = LingoNumber(0.2000)                            if LingoList("Barnacles","Colored Barnacles").getpos(ef.nm) > LingoNumber(0):                 ef.repeats = LingoNumber(60)                ef.affectopenareas = LingoNumber(0.3000)                            if LingoList("Clovers").getpos(ef.nm) > LingoNumber(0):                 ef.repeats = LingoNumber(20)                ef.affectopenareas = LingoNumber(0.2000)                            if LingoList("Erode","Sand").getpos(ef.nm) > LingoNumber(0):                 ef.repeats = LingoNumber(80)                ef.affectopenareas = LingoNumber(0.5000)                            if LingoList("Roughen").getpos(ef.nm) > LingoNumber(0):                 ef.repeats = LingoNumber(30)                ef.affectopenareas = LingoNumber(0.0500)                            if LingoList("Impacts").getpos(ef.nm) > LingoNumber(0):                 ef.repeats = LingoNumber(75)                ef.affectopenareas = LingoNumber(0.0500)                            if LingoList("Super Melt","Destructive Melt").getpos(ef.nm) > LingoNumber(0):                 ef.repeats = LingoNumber(50)                ef.affectopenareas = LingoNumber(0.5000)                                            return None            