from Drizzle.Runtime import *## Behavior script: renderColors#class renderColors(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         if ((LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(56))) and LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(48)))) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             self._global._player.appminimize()        if LingoGlobal.ToBool(self._movieScript.checkexit()):             self._global._player.quit()        if LingoGlobal.ToBool(self._movieScript.gViewRender):             if LingoGlobal.ToBool(self._movieScript.checkexitrender()):                 self._global._movie.go(LingoNumber(9))            self.newframe()
            if LingoGlobal.ToBool(self._movieScript.keepLooping):                 self._global.go(self._global.the_frame)                    else:            while LingoGlobal.ToBool(self._movieScript.keepLooping):                 self.newframe()                    self._movieScript.keepLooping = LingoNumber(1)                return None            def newframe(self):         self._global.sprite(LingoNumber(59)).locv = LingoGlobal.op_sub(self._movieScript.c,LingoNumber(8))        tmp_q = LingoNumber(1)        while tmp_q.IntValue < LingoNumber(1400):             q = tmp_q            layer = LingoNumber(1)            getcolor = self._global.member("finalImage").image.getpixel(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(self._movieScript.c,LingoNumber(1)))            if LingoGlobal.op_ne_b(getcolor, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                 if (getcolor.green > LingoNumber(7) and getcolor.green < LingoNumber(11)):                     pass                                    elif LingoGlobal.op_eq_b(getcolor, self._global.color(LingoNumber(0),LingoNumber(11),LingoNumber(0))):                     self._global.member("finalImage").image.setpixel(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(self._movieScript.c,LingoNumber(1)),self._global.color(LingoNumber(10),LingoNumber(0),LingoNumber(0)))                else:                    if LingoGlobal.op_eq_b(getcolor, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                         layer = LingoNumber(0)                                            lowresdepth = self._movieScript.dptsL.getpos(self._global.member("dpImage").image.getpixel(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(self._movieScript.c,LingoNumber(1))))                    fgdp = self._movieScript.fogDptsL.getpos(self._global.member("fogImage").image.getpixel(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(self._movieScript.c,LingoNumber(1))))                    fogfac = LingoGlobal.op_div(LingoGlobal.op_sub(LingoNumber(255),self._global.member("fogImage").image.getpixel(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(self._movieScript.c,LingoNumber(1))).red),LingoNumber(255.0000))                    fogfac = LingoGlobal.op_mul(LingoGlobal.op_sub(fogfac,LingoNumber(0.0275)),LingoGlobal.op_div(LingoNumber(1.0000),LingoNumber(0.9411)))                    rainbowfac = LingoNumber(0)                    if fogfac <= LingoNumber(0.2000):                         for tmp_dsplc in LingoList(LingoGlobal.point(-LingoNumber(2),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(2)),LingoGlobal.point(LingoNumber(2),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),LingoNumber(2)),LingoGlobal.point(-LingoNumber(1),-LingoNumber(1)),LingoGlobal.point(LingoNumber(1),-LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(1)),LingoGlobal.point(-LingoNumber(1),LingoNumber(1))):                             dsplc = tmp_dsplc                            otherfogfac = LingoGlobal.op_div(LingoGlobal.op_sub(LingoNumber(255),self._global.member("fogImage").image.getpixel(self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(q,LingoNumber(1)),dsplc.loch),LingoNumber(0),LingoNumber(1339)),self._movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(self._movieScript.c,LingoNumber(1)),dsplc.locv),LingoNumber(0),LingoNumber(799))).red),LingoNumber(255.0000))                            otherfogfac = LingoGlobal.op_mul(LingoGlobal.op_sub(otherfogfac,LingoNumber(0.0275)),LingoGlobal.op_div(LingoNumber(1.0000),LingoNumber(0.9411)))                            rainbowfac = LingoGlobal.op_add(rainbowfac,LingoGlobal.op_mul(LingoGlobal.op_gt(LingoGlobal.abs(LingoGlobal.op_sub(fogfac,otherfogfac)),LingoNumber(0.0333)),LingoGlobal.op_add(self._movieScript.restrict(LingoGlobal.op_sub(fogfac,otherfogfac),LingoNumber(0),LingoNumber(1)),LingoNumber(1))))                            if rainbowfac > LingoNumber(5):                                 break                                                                                    rainbowfac = LingoGlobal.op_gt(rainbowfac,LingoNumber(5))                                            col = self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0))                    transp = LingoGlobal.FALSE                    palcol = LingoNumber(2)                    effectcolor = LingoNumber(0)                    dark = LingoNumber(0)                    match self._global.str(getcolor).lower():                         case "color( 255, 0, 0 )":                            palcol = LingoNumber(1)                                                    case "color( 0, 255, 0 )":                            palcol = LingoNumber(2)                                                    case "color( 0, 0, 255 )":                            palcol = LingoNumber(3)                                                    case "color( 255, 0, 255 )":                            palcol = LingoNumber(2)                            effectcolor = LingoNumber(1)                                                    case "color( 0, 255, 255 )":                            palcol = LingoNumber(2)                            effectcolor = LingoNumber(2)                                                    case "color( 255, 150, 255 )":                            palcol = LingoNumber(3)                            effectcolor = LingoNumber(1)                                                    case "color( 150, 255, 255 )":                            palcol = LingoNumber(3)                            effectcolor = LingoNumber(2)                                                    case "color( 150, 0, 0 )":                            palcol = LingoNumber(1)                            dark = LingoNumber(1)                                                    case "color( 0, 150, 0 )":                            palcol = LingoNumber(2)                            dark = LingoNumber(1)                                                    case "color( 0, 0, 150 )":                            palcol = LingoNumber(3)                            dark = LingoNumber(1)                                                    case "color( 150, 0, 150 )":                            palcol = LingoNumber(1)                            effectcolor = LingoNumber(1)                                                    case "color( 0, 150, 150 )":                            palcol = LingoNumber(1)                            effectcolor = LingoNumber(2)                                                                        if (LingoGlobal.op_eq_b(getcolor.green, LingoNumber(255)) and LingoGlobal.op_eq_b(getcolor.blue, LingoNumber(150))):                         palcol = LingoNumber(1)                        effectcolor = LingoNumber(3)                                            col.red = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(palcol,LingoNumber(1)),LingoNumber(30)),fgdp)                    if LingoGlobal.op_ne_b(self._global.member("shadowImage").image.getpixel(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(self._movieScript.c,LingoNumber(1))), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0))):                         col.red = LingoGlobal.op_add(col.red,LingoNumber(90))                                            greencol = effectcolor                    if LingoGlobal.ToBool(self._movieScript.grimeActive):                         if LingoGlobal.ToBool(rainbowfac):                             if LingoGlobal.ToBool(self._movieScript.grimeOnGradients):                                 greencol = LingoGlobal.op_add(greencol,LingoNumber(4))                                self.rainbowifypixel(LingoGlobal.point(q,self._movieScript.c))                            elif ((LingoGlobal.op_ne_b(greencol, LingoNumber(1)) and LingoGlobal.op_ne_b(greencol, LingoNumber(2))) and LingoGlobal.op_ne_b(greencol, LingoNumber(3))):                                 greencol = LingoGlobal.op_add(greencol,LingoNumber(4))                                self.rainbowifypixel(LingoGlobal.point(q,self._movieScript.c))                                                    elif LingoGlobal.op_ne_b(self._global.member("rainBowMask").image.getpixel(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(self._movieScript.c,LingoNumber(1))), self._global.color(LingoNumber(0))):                             if LingoGlobal.ToBool(self._movieScript.grimeOnGradients):                                 greencol = LingoGlobal.op_add(greencol,LingoNumber(4))                                                            elif ((LingoGlobal.op_ne_b(greencol, LingoNumber(1)) and LingoGlobal.op_ne_b(greencol, LingoNumber(2))) and LingoGlobal.op_ne_b(greencol, LingoNumber(3))):                                 greencol = LingoGlobal.op_add(greencol,LingoNumber(4))                                                                                                        if effectcolor > LingoNumber(0):                         if LingoGlobal.op_eq_b(effectcolor, LingoNumber(3)):                             col.blue = getcolor.red                                                    else:                            col.blue = LingoGlobal.op_sub(LingoNumber(255),self._global.member(LingoGlobal.concat("flattenedGradient",LingoList("A","B")[LingoGlobal.op_mod(effectcolor,LingoNumber(4))])).image.getpixel(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(self._movieScript.c,LingoNumber(1))).red)                                                    if (col.blue >= LingoNumber(255) and LingoGlobal.ToBool(self._movieScript.bkgFix)):                             col.blue = LingoNumber(254)                                                                        else:                        decalcolor = LingoNumber(0)                        if LingoGlobal.ToBool(self._movieScript.gAnyDecals):                             dcget = self._global.member("finalDecalImage").image.getpixel(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(self._movieScript.c,LingoNumber(1)))                            if LingoGlobal.op_ne_b(dcget, self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                 if LingoGlobal.op_eq_b(dcget, self._movieScript.gPEcolors[LingoNumber(1)][LingoNumber(2)]):                                     if LingoGlobal.ToBool(self._movieScript.grimeActive):                                         if LingoGlobal.ToBool(self._movieScript.grimeOnGradients):                                             if LingoGlobal.op_eq_b(self.doesgreenvaluemeanrainbow(greencol), LingoNumber(0)):                                                 greencol = LingoGlobal.op_add(greencol,LingoNumber(4))                                                                                                                                    elif ((LingoGlobal.op_ne_b(greencol, LingoNumber(1)) and LingoGlobal.op_ne_b(greencol, LingoNumber(2))) and LingoGlobal.op_ne_b(greencol, LingoNumber(3))):                                             if LingoGlobal.op_eq_b(self.doesgreenvaluemeanrainbow(greencol), LingoNumber(0)):                                                 greencol = LingoGlobal.op_add(greencol,LingoNumber(4))                                                                                                                                                                                                        else:                                    decalcolor = self._movieScript.gDecalColors.getpos(dcget)                                    if (LingoGlobal.op_eq_b(decalcolor, LingoNumber(0)) and self._movieScript.gDecalColors.count < LingoNumber(255)):                                         self._movieScript.gDecalColors.add(dcget)
                                        decalcolor = self._movieScript.gDecalColors.count                                                                            if (LingoGlobal.ToBool(self._movieScript.bkgFix) and decalcolor < LingoNumber(2)):                                         decalcolor = LingoNumber(2)                                                                            col.blue = LingoGlobal.op_sub(LingoNumber(256),decalcolor)                                    greencol = LingoGlobal.op_add(greencol,LingoNumber(8))                                                                                                                                            col.green = LingoGlobal.op_add(greencol,LingoGlobal.op_mul(dark,LingoNumber(16)))                    if LingoGlobal.op_eq_b(layer, LingoNumber(0)):                         self._global.member("finalImage").image.setpixel(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(self._movieScript.c,LingoNumber(1)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))                    else:                        self._global.member("finalImage").image.setpixel(LingoGlobal.op_sub(q,LingoNumber(1)),LingoGlobal.op_sub(self._movieScript.c,LingoNumber(1)),col)                                                tmp_q = q            tmp_q += LingoNumber(1)                    self._movieScript.c = LingoGlobal.op_add(self._movieScript.c,LingoNumber(1))        if self._movieScript.c > LingoNumber(800):             self._movieScript.c = LingoNumber(1)            self._movieScript.keepLooping = LingoNumber(0)                            return None            def rainbowifypixel(self, pxl):         if (pxl.loch < LingoNumber(2) or pxl.locv < LingoNumber(2)):             return None                    if LingoGlobal.op_eq_b(self.ispixelinfinalimagerainbowed(LingoGlobal.op_add(pxl,LingoGlobal.point(-LingoNumber(1),LingoNumber(0)))), LingoNumber(0)):             currcol = self._global.member("finalImage").image.getpixel(LingoGlobal.op_sub(LingoGlobal.op_sub(pxl.loch,LingoNumber(1)),LingoNumber(1)),LingoGlobal.op_sub(pxl.locv,LingoNumber(1)))            self._global.member("finalImage").image.setpixel(LingoGlobal.op_sub(LingoGlobal.op_sub(pxl.loch,LingoNumber(1)),LingoNumber(1)),LingoGlobal.op_sub(pxl.locv,LingoNumber(1)),self._global.color(currcol.red,LingoGlobal.op_add(currcol.green,LingoNumber(4)),currcol.blue))        if LingoGlobal.op_eq_b(self.ispixelinfinalimagerainbowed(LingoGlobal.op_add(pxl,LingoGlobal.point(LingoNumber(0),-LingoNumber(1)))), LingoNumber(0)):             currcol = self._global.member("finalImage").image.getpixel(LingoGlobal.op_sub(pxl.loch,LingoNumber(1)),LingoGlobal.op_sub(LingoGlobal.op_sub(pxl.locv,LingoNumber(1)),LingoNumber(1)))            self._global.member("finalImage").image.setpixel(LingoGlobal.op_sub(pxl.loch,LingoNumber(1)),LingoGlobal.op_sub(LingoGlobal.op_sub(pxl.locv,LingoNumber(1)),LingoNumber(1)),self._global.color(currcol.red,LingoGlobal.op_add(currcol.green,LingoNumber(4)),currcol.blue))        self._global.member("rainBowMask").image.setpixel(LingoGlobal.op_add(LingoGlobal.op_sub(pxl.loch,LingoNumber(1)),LingoNumber(1)),LingoGlobal.op_sub(pxl.locv,LingoNumber(1)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)))
        self._global.member("rainBowMask").image.setpixel(LingoGlobal.op_sub(pxl.loch,LingoNumber(1)),LingoGlobal.op_add(LingoGlobal.op_sub(pxl.locv,LingoNumber(1)),LingoNumber(1)),self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)))        return None            def ispixelinfinalimagerainbowed(self, pxl):         if (pxl.loch < LingoNumber(1) or pxl.locv < LingoNumber(1)):             return LingoNumber(0)                    elif LingoGlobal.op_eq_b(self._global.member("finalImage").image.getpixel(LingoGlobal.op_sub(pxl.loch,LingoNumber(1)),LingoGlobal.op_sub(pxl.locv,LingoNumber(1))), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):             return LingoNumber(0)                    else:            grn = self._global.member("finalImage").image.getpixel(LingoGlobal.op_sub(pxl.loch,LingoNumber(1)),LingoGlobal.op_sub(pxl.locv,LingoNumber(1))).green            return self.doesgreenvaluemeanrainbow(grn)                            return None            def doesgreenvaluemeanrainbow(self, grn):         if (grn > LingoNumber(3) and grn < LingoNumber(8)):             return LingoNumber(1)                    elif (grn > LingoNumber(11) and grn < LingoNumber(16)):             return LingoNumber(1)                    else:            return LingoNumber(0)                            return None            