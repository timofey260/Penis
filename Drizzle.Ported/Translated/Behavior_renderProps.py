from Drizzle.Runtime import *## Behavior script: renderProps#class renderProps(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         if ((LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(56))) and LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(48)))) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             _global._player.appminimize()        if LingoGlobal.ToBool(_movieScript.checkexit()):             _global._player.quit()        if LingoGlobal.ToBool(_movieScript.gViewRender):             if LingoGlobal.ToBool(_movieScript.checkexitrender()):                 _global._movie.go(LingoNumber(9))            self.newframe()
            if LingoGlobal.ToBool(_movieScript.keepLooping):                 _global.go(_global.the_frame)                    else:            while LingoGlobal.ToBool(_movieScript.keepLooping):                 self.newframe()                            return None            def newframe(self):         propdata = None        prop = None        qd = None        dp = None        mdpoint = None        savseed = None        data = None        if LingoGlobal.op_ne_b(_movieScript.softProp, LingoGlobal.VOID):             if _movieScript.gESoftProp < LingoNumber(1):                 self.rendersoftprop()            else:                self.renderesoftprop()                    else:            if LingoGlobal.ToBool(_movieScript.gCurrentlyRenderingTrash):                 if _movieScript.c > _movieScript.gRenderTrashProps.count:                     _movieScript.gCurrentlyRenderingTrash = LingoGlobal.FALSE                    if _movieScript.propsToRender.count > LingoNumber(0):                         _movieScript.c = LingoNumber(1)                        propdata = _movieScript.propsToRender[_movieScript.c]                                            else:                        _movieScript.keepLooping = LingoGlobal.FALSE                        return None                                                            else:                    propdata = _movieScript.gRenderTrashProps[_movieScript.c]                                                else:                if _movieScript.c > _movieScript.propsToRender.count:                     _movieScript.keepLooping = LingoNumber(0)                    return None                                    propdata = _movieScript.propsToRender[_movieScript.c]                            prop = _movieScript.gProps[propdata[LingoNumber(3)].loch].prps[propdata[LingoNumber(3)].locv]            if LingoGlobal.ToBool(self.shouldthisproprender(prop,propdata[LingoNumber(4)],propdata[LingoNumber(5)].settings)):                 self.updatetext()
                qd = propdata[LingoNumber(4)]                dp = -propdata[LingoNumber(1)]                if LingoGlobal.op_eq_b(_movieScript.gCurrentlyRenderingTrash, LingoGlobal.FALSE):                     qd = LingoGlobal.op_mul(qd,LingoGlobal.op_div(LingoNumber(20.0000),LingoNumber(16.0000)))                                    mdpoint = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_add(qd[LingoNumber(1)],qd[LingoNumber(2)]),qd[LingoNumber(3)]),qd[LingoNumber(4)]),LingoNumber(4.0000))                savseed = _global.the_randomSeed                _global.the_randomSeed = _movieScript.seedfortile(_movieScript.givegridpos(mdpoint),propdata[LingoNumber(5)].settings.seed)                if LingoGlobal.op_eq_b(_movieScript.gCurrentlyRenderingTrash, LingoGlobal.FALSE):                     qd = LingoGlobal.op_sub(qd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                                    if LingoGlobal.ToBool(_movieScript.gCurrentlyRenderingTrash):                     data = LingoList()                                    else:                    data = _movieScript.propsToRender[_movieScript.c][LingoNumber(5)]                                    self.renderprop(prop,dp,qd,mdpoint,data)
                _global.the_randomSeed = savseed                            _movieScript.c = LingoGlobal.op_add(_movieScript.c,LingoNumber(1))                            return None            def shouldthisproprender(self, prop, qd, settings):         mdpoint = None        dig = None        q = None        if LingoGlobal.op_ne_b(settings.rendertime, _movieScript.afterEffects):             return LingoGlobal.FALSE                    if LingoGlobal.op_eq_b(_movieScript.gCurrentlyRenderingTrash, LingoGlobal.FALSE):             qd = LingoGlobal.op_mul(qd,LingoGlobal.op_div(LingoNumber(20.0000),LingoNumber(16.0000)))            qd = LingoGlobal.op_sub(qd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                    mdpoint = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_add(qd[LingoNumber(1)],qd[LingoNumber(2)]),qd[LingoNumber(3)]),qd[LingoNumber(4)]),LingoNumber(4.0000))        dig = LingoNumber(0)        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(4)):             q = tmp_q            if LingoGlobal.op_eq_b(_movieScript.diagwi(mdpoint,qd[q],dig), LingoGlobal.FALSE):                 dig = _movieScript.diag(mdpoint,qd[q])                            tmp_q = q                    if _movieScript.diag(mdpoint,_movieScript.closestpntinrect(LingoGlobal.rect(-LingoNumber(50),-LingoNumber(100),LingoNumber(2050),LingoNumber(1100)),mdpoint)) > dig:             return LingoGlobal.FALSE                    return LingoGlobal.TRUE                    def updatetext(self):         txt = None        viewprop = None        prp = None        propaddress = None        txt = ""        txt += str("<Rendering props>                                                Press TAB (VANILLA) / TAB + Z + R (DROUGHT) / TAB + X + C (DRY) to abort")        txt += str(LingoGlobal.RETURN)        viewprop = _movieScript.c        if LingoGlobal.op_ne_b(_movieScript.softProp, LingoGlobal.VOID):             viewprop = LingoGlobal.op_sub(_movieScript.c,LingoNumber(1))                    if LingoGlobal.op_eq_b(_movieScript.gCurrentlyRenderingTrash, LingoGlobal.TRUE):             txt += str(LingoGlobal.concat("Trash props -   ",_movieScript.c," / ",_movieScript.gRenderTrashProps.count))            txt += str(LingoGlobal.RETURN)                    else:            for tmp_prp in LingoGlobal.pyrange(LingoNumber(1), _movieScript.propsToRender.count):                 prp = tmp_prp                propaddress = _movieScript.propsToRender[prp][LingoNumber(3)]                if LingoGlobal.ToBool(self.shouldthisproprender(_movieScript.gProps[propaddress.loch].prps[propaddress.locv],_movieScript.propsToRender[prp][LingoNumber(4)],_movieScript.propsToRender[prp][LingoNumber(5)].settings)):                     if LingoGlobal.op_eq_b(prp, viewprop):                         txt += str(LingoGlobal.concat(_global.str(prp),". ->",_movieScript.propsToRender[prp][LingoNumber(2)]))                                            else:                        txt += str(LingoGlobal.concat(_global.str(prp),". ",_movieScript.propsToRender[prp][LingoNumber(2)]))                                            txt += str(LingoGlobal.RETURN)                                    tmp_prp = prp                                    _global.member("effectsL").text = txt                return None            def renderprop(self, prop, dp, qd, mdpoint, data):         tileasprop = None        q2 = None        path = None        propimage = None        if LingoGlobal.op_ne_b(_movieScript.gLastImported, prop.nm):             tileasprop = LingoNumber(0)            for tmp_q2 in LingoGlobal.pyrange(LingoNumber(1), prop.tags.count):                 q2 = tmp_q2                if LingoGlobal.op_eq_b(prop.tags[q2], "Tile"):                     tileasprop = LingoNumber(1)                    break                                    tmp_q2 = q2                            if LingoGlobal.ToBool(tileasprop):                 path = LingoGlobal.concat("Graphics",_global.the_dirSeparator,prop.nm,".png")                            else:                path = LingoGlobal.concat("Props",_global.the_dirSeparator,prop.nm,".png")                            propimage = _movieScript.cacheloadimage(path)            _movieScript.gLastImported = prop.nm            _movieScript.gLastImportedImage = propimage                    else:            propimage = _movieScript.gLastImportedImage                    if LingoGlobal.ToBool(_movieScript.checkdrinternal(prop.nm)):             propimage = _global.member(prop.nm).image                    match prop.tp.lower():             case "standard" | "variedstandard":                self.rendervoxelprop(prop,dp,qd,mdpoint,data,propimage)            case "simpledecal" | "varieddecal":                _movieScript.gAnyDecals = LingoNumber(1)                self.renderdecal(prop,dp,qd,mdpoint,data,propimage)            case "rope":                self.renderrope(prop,_movieScript.propsToRender[_movieScript.c][LingoNumber(5)],dp)            case "soft" | "variedsoft" | "antimatter" | "coloredsoft":                _movieScript.gESoftProp = LingoNumber(0)                self.initrendersoftprop(prop,qd,data,dp,propimage)            case "softeffect":                _movieScript.gESoftProp = LingoNumber(1)                self.initrendersoftprop(prop,qd,data,dp,propimage)            case "long":                self.renderlongprop(qd,prop,_movieScript.propsToRender[_movieScript.c][LingoNumber(5)],dp)                    self.doproptags(prop,dp,qd)        return None            def rendervoxelprop(self, prop, dp, qd, mdpoint, propdata, propimage):         var = None        ps = None        colored = None        effectcolora = None        effectcolorb = None        q = None        gtrect = None        q2 = None        dumpimg = None        inverseimg = None        b = None        a = None        var = LingoNumber(1)        if LingoGlobal.op_eq_b(prop.tp, "variedStandard"):             var = propdata.settings.variation                    ps = LingoNumber(1)        if LingoGlobal.ToBool(_movieScript.checkdrinternal(prop.nm)):             propimage = _global.member(prop.nm).image                    colored = LingoGlobal.op_gt(prop.tags.getpos("colored"),LingoNumber(0))        if LingoGlobal.ToBool(colored):             _movieScript.gAnyDecals = LingoNumber(1)                    effectcolora = LingoGlobal.op_gt(prop.tags.getpos("effectColorA"),LingoNumber(0))        effectcolorb = LingoGlobal.op_gt(prop.tags.getpos("effectColorB"),LingoNumber(0))        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), prop.repeatl.count):             q = tmp_q            gtrect = LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),LingoGlobal.op_mul(prop.sz.locv,LingoNumber(20)))            gtrect = LingoGlobal.op_add(LingoGlobal.op_add(gtrect,LingoGlobal.rect(LingoGlobal.op_mul(gtrect.width,LingoGlobal.op_sub(var,LingoNumber(1))),LingoGlobal.op_mul(gtrect.height,LingoGlobal.op_sub(ps,LingoNumber(1))),LingoGlobal.op_mul(gtrect.width,LingoGlobal.op_sub(var,LingoNumber(1))),LingoGlobal.op_mul(gtrect.height,LingoGlobal.op_sub(ps,LingoNumber(1))))),LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1)))            for tmp_q2 in LingoGlobal.pyrange(LingoNumber(1), prop.repeatl[q]):                 q2 = tmp_q2                match prop.colortreatment.lower():                     case "standard":                        _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(propimage,qd,gtrect,LingoPropertyList(dict(ink = LingoNumber(36))))
                        if LingoGlobal.ToBool(effectcolora):                             if LingoGlobal.op_eq_b(prop.tp, "variedStandard"):                                 _global.member(LingoGlobal.concat("gradientA",_global.str(dp))).image.copypixels(propimage,qd,LingoGlobal.op_add(gtrect,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),prop.vars),LingoNumber(0),LingoGlobal.op_mul(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),prop.vars),LingoNumber(0))),LingoPropertyList(dict(ink = LingoNumber(39))))                            else:                                _global.member(LingoGlobal.concat("gradientA",_global.str(dp))).image.copypixels(propimage,qd,LingoGlobal.op_add(gtrect,LingoGlobal.rect(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),LingoNumber(0),LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),LingoNumber(0))),LingoPropertyList(dict(ink = LingoNumber(39))))                                                    if LingoGlobal.ToBool(effectcolorb):                             if LingoGlobal.op_eq_b(prop.tp, "variedStandard"):                                 _global.member(LingoGlobal.concat("gradientB",_global.str(dp))).image.copypixels(propimage,qd,LingoGlobal.op_add(gtrect,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),prop.vars),LingoNumber(0),LingoGlobal.op_mul(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),prop.vars),LingoNumber(0))),LingoPropertyList(dict(ink = LingoNumber(39))))                            else:                                _global.member(LingoGlobal.concat("gradientB",_global.str(dp))).image.copypixels(propimage,qd,LingoGlobal.op_add(gtrect,LingoGlobal.rect(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),LingoNumber(0),LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),LingoNumber(0))),LingoPropertyList(dict(ink = LingoNumber(39))))                                                                        case "bevel":                        dumpimg = _global.image(gtrect.width,gtrect.height,LingoNumber(1))                        dumpimg.copypixels(propimage,dumpimg.rect,gtrect)
                        inverseimg = _movieScript.makesilhouttefromimg(dumpimg,LingoNumber(1))                        dumpimg = _global.image(_global.member(LingoGlobal.concat("layer",_global.str(dp))).image.width,_global.member(LingoGlobal.concat("layer",_global.str(dp))).image.height,LingoNumber(32))                        dumpimg.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                        for tmp_b in LingoGlobal.pyrange(LingoNumber(1), prop.bevel):                             b = tmp_b                            for tmp_a in LingoList(LingoList(_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),LingoGlobal.point(-LingoNumber(1),-LingoNumber(1))),LingoList(_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1))),LingoList(_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),LingoGlobal.point(-LingoNumber(1),LingoNumber(0))),LingoList(_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)),LingoGlobal.point(LingoNumber(1),LingoNumber(1))),LingoList(_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)),LingoGlobal.point(LingoNumber(0),LingoNumber(1))),LingoList(_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)),LingoGlobal.point(LingoNumber(1),LingoNumber(0)))):                                 a = tmp_a                                dumpimg.copypixels(inverseimg,LingoGlobal.op_add(qd,LingoList(LingoGlobal.op_mul(a[LingoNumber(2)],b),LingoGlobal.op_mul(a[LingoNumber(2)],b),LingoGlobal.op_mul(a[LingoNumber(2)],b),LingoGlobal.op_mul(a[LingoNumber(2)],b))),inverseimg.rect,LingoPropertyList(dict(color = a[LingoNumber(1)],ink = LingoNumber(36))))                            tmp_b = b                                                    dumpimg.copypixels(inverseimg,qd,inverseimg.rect,LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),ink = LingoNumber(36))))
                        inverseimg = _global.image(dumpimg.width,dumpimg.height,LingoNumber(1))                        inverseimg.copypixels(LingoImage.Pxl,inverseimg.rect,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)))
                        inverseimg.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))))
                        dumpimg.copypixels(inverseimg,dumpimg.rect,inverseimg.rect,LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),ink = LingoNumber(36))))
                        _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(dumpimg,dumpimg.rect,dumpimg.rect,LingoPropertyList(dict(ink = LingoNumber(36))))                                    if ((LingoGlobal.ToBool(colored) and LingoGlobal.op_eq_b(effectcolora, LingoGlobal.FALSE)) and LingoGlobal.op_eq_b(effectcolorb, LingoGlobal.FALSE)):                     if LingoGlobal.op_eq_b(prop.tp, "variedStandard"):                         _global.member(LingoGlobal.concat("layer",_global.str(dp),"dc")).image.copypixels(propimage,qd,LingoGlobal.op_add(gtrect,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),prop.vars),LingoNumber(0),LingoGlobal.op_mul(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),prop.vars),LingoNumber(0))),LingoPropertyList(dict(ink = LingoNumber(36))))                    else:                        _global.member(LingoGlobal.concat("layer",_global.str(dp),"dc")).image.copypixels(propimage,qd,LingoGlobal.op_add(gtrect,LingoGlobal.rect(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),LingoNumber(0),LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),LingoNumber(0))),LingoPropertyList(dict(ink = LingoNumber(36))))                                    dp = LingoGlobal.op_add(dp,LingoNumber(1))                if dp > LingoNumber(29):                     break                                    tmp_q2 = q2                            ps = LingoGlobal.op_add(ps,LingoNumber(1))            if dp > LingoNumber(29):                 break                            tmp_q = q                            return None            def renderdecal(self, prop, dp, qd, mdpoint, data, propimage):         rnd = None        ps = None        depthzero = None        testdp = None        dirq = None        actualdepth = None        averagesz = None        getrect = None        clr = None        q = None        rnd = LingoNumber(1)        ps = LingoNumber(1)        if LingoGlobal.ToBool(_movieScript.checkdrinternal(prop.nm)):             propimage = _global.member(prop.nm).image                    depthzero = dp        for tmp_testDp in LingoList(LingoNumber(0),LingoNumber(10),LingoNumber(20)):             testdp = tmp_testDp            if (dp <= testdp and LingoGlobal.op_add(dp,prop.depth) > testdp):                 depthzero = testdp                break                                    dirq = self.directionsquad()        actualdepth = prop.depth        if LingoGlobal.op_add(dp,prop.depth) > LingoNumber(29):             actualdepth = LingoGlobal.op_sub(LingoNumber(29),dp)                    averagesz = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_add(_movieScript.diag(qd[LingoNumber(1)],qd[LingoNumber(2)]),_movieScript.diag(qd[LingoNumber(2)],qd[LingoNumber(3)])),_movieScript.diag(qd[LingoNumber(3)],qd[LingoNumber(4)])),_movieScript.diag(qd[LingoNumber(4)],qd[LingoNumber(1)])),LingoNumber(4.0000))        averagesz = LingoGlobal.op_div(LingoGlobal.op_add(averagesz,LingoNumber(80.0000)),LingoNumber(2.0000))        averagesz = LingoGlobal.op_div(averagesz,LingoNumber(12.0000))        averagesz = LingoGlobal.op_div(averagesz,LingoGlobal.op_div(LingoGlobal.op_add(LingoNumber(4.0000),actualdepth),LingoNumber(5.0000)))        dirq = LingoGlobal.op_mul(dirq,averagesz)        getrect = propimage.rect        if LingoGlobal.op_eq_b(prop.tp, "variedDecal"):             getrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(prop.pxlsize.loch,LingoGlobal.op_sub(data.settings.variation,LingoNumber(1))),LingoNumber(0),LingoGlobal.op_mul(prop.pxlsize.loch,data.settings.variation),prop.pxlsize.locv),LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1)))                    clr = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0))        if LingoGlobal.op_ne_b(data.settings.findpos(color), LingoGlobal.VOID):             if data.settings.color > LingoNumber(0):                 clr = _movieScript.gPEcolors[data.settings.color][LingoNumber(2)]                                    for tmp_q in LingoGlobal.pyrange(LingoNumber(1), data.settings.customdepth):             q = tmp_q            _global.member(LingoGlobal.concat("layer",_global.str(dp),"dc")).image.copypixels(propimage,LingoGlobal.op_add(qd,LingoGlobal.op_mul(dirq,LingoGlobal.op_sub(dp,depthzero))),getrect,LingoPropertyList(dict(ink = LingoNumber(36),color = clr)))
            dp = LingoGlobal.op_add(dp,LingoNumber(1))            if dp > LingoNumber(29):                 break                            tmp_q = q                            return None            def directionsquad(self):         qdirs = None        frst = None        l1 = None        q = None        qdirs = LingoList()        frst = _movieScript.degtovec(_global.random(LingoNumber(360)))        l1 = LingoList(LingoList(_global.random(LingoNumber(100)),frst),LingoList(_global.random(LingoNumber(100)),-frst),LingoList(_global.random(LingoNumber(100)),_movieScript.degtovec(_global.random(LingoNumber(360)))),LingoList(_global.random(LingoNumber(100)),_movieScript.degtovec(_global.random(LingoNumber(360)))))        l1.sort()
        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(4)):             q = tmp_q            qdirs.add(l1[q][LingoNumber(2)])
            tmp_q = q                    return qdirs                    def renderrope(self, prop, data, dp):         lastpos = None        lastdir = None        lastperp = None        q = None        pos = None        dir = None        perp = None        lastpos = data.points[LingoNumber(1)]        lastdir = _movieScript.movetopoint(data.points[LingoNumber(1)],data.points[LingoNumber(2)],LingoNumber(1.0000))        lastperp = self.correctperp(lastdir)        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), data.points.count):             q = tmp_q            pos = data.points[q]            if q < data.points.count:                 dir = _movieScript.movetopoint(data.points[q],data.points[LingoGlobal.op_add(q,LingoNumber(1))],LingoNumber(1.0000))                            else:                dir = lastdir                            perp = self.correctperp(dir)            self.renderropesegment(q,prop,data,dp,pos,dir,perp,lastpos,lastdir,lastperp)
            lastpos = pos            lastdir = dir            lastperp = perp            tmp_q = q                            return None            def correctperp(self, dir):         return _movieScript.givedirfor90degrtoline(LingoGlobal.op_add(-dir,LingoGlobal.point(LingoNumber(0.0010),-LingoNumber(0.0010))),dir)                    def renderropesegment(self, num, prop, data, dp, pos, dir, perp, lastpos, lastdir, lastperp):         wdth = None        pastqd = None        rctc = None        a = None        jointsize = None        col = None        myperp = None        dr = None        dst = None        b = None        pnta = None        pntb = None        aprp = None        bprp = None        pstdp = None        mdpnt = None        i = None        possiblepositions = None        uselastpos = None        uselastdir = None        uselastperp = None        apoint = None        indx = None        bpoint = None        apos = None        adp = None        bpos = None        bdp = None        ahandle = None        bhandle = None        c2 = None        cpos = None        mnclamp = None        a2 = None        match prop.nm.lower():             case "wire" | "zero-g wire":                wdth = LingoGlobal.op_div(data.settings.thickness,LingoNumber(2.0000))                pastqd = LingoList(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_sub(lastpos,LingoGlobal.op_mul(lastperp,wdth)))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(LingoImage.Pxl,pastqd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)))))            case "christmas wire":                wdth = LingoNumber(8.5000)                pastqd = LingoList(LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_sub(lastpos,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(lastperp,wdth)))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(_global.member(LingoGlobal.concat("christmasWireGraf",_movieScript.lG)).image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(17),LingoNumber(25)),LingoPropertyList(dict(ink = LingoNumber(36))))
                _global.member(LingoGlobal.concat("gradientA",_global.str(dp))).image.copypixels(_global.member("christmasWireGrad").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(17),LingoNumber(25)),LingoPropertyList(dict(ink = LingoNumber(39))))
                _global.member(LingoGlobal.concat("gradientB",_global.str(dp))).image.copypixels(_global.member("christmasWireGrad").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(17),LingoNumber(25)),LingoPropertyList(dict(ink = LingoNumber(39))))
                if LingoGlobal.op_eq_b(_movieScript.lG, "1"):                     _movieScript.lG = "2"                                    else:                    _movieScript.lG = "1"                                                case "ornate wire":                wdth = LingoNumber(8.5000)                pastqd = LingoList(LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_sub(lastpos,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(lastperp,wdth)))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                rctc = LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(17),LingoNumber(25))                _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(_global.member("tangledWireGraf").image,pastqd,rctc,LingoPropertyList(dict(ink = LingoNumber(36))))
                _global.member(LingoGlobal.concat("gradientA",_global.str(dp))).image.copypixels(_global.member("tangledWireGrad").image,pastqd,rctc,LingoPropertyList(dict(ink = LingoNumber(39))))
                _global.member(LingoGlobal.concat("gradientB",_global.str(dp))).image.copypixels(_global.member("tangledWireGrad").image,pastqd,rctc,LingoPropertyList(dict(ink = LingoNumber(39))))            case "tube":                wdth = LingoNumber(5.0000)                pastqd = LingoList(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_sub(lastpos,LingoGlobal.op_mul(lastperp,wdth)))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                for tmp_a in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(4)):                     a = tmp_a                    if LingoGlobal.op_add(dp,a) <= LingoNumber(30):                         _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_sub(LingoGlobal.op_add(dp,a),LingoNumber(1))))).image.copypixels(_global.member("tubeGraf").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(LingoGlobal.op_sub(a,LingoNumber(1)),LingoNumber(10)),LingoNumber(10),LingoGlobal.op_mul(a,LingoNumber(10))),LingoPropertyList(dict(ink = LingoNumber(36))))                    else:                        break                                            tmp_a = a                                                case "thickwire":                wdth = LingoNumber(2)                pastqd = LingoList(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_sub(lastpos,LingoGlobal.op_mul(lastperp,wdth)))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                for tmp_a in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(3)):                     a = tmp_a                    if LingoGlobal.op_add(dp,a) <= LingoNumber(30):                         _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_sub(LingoGlobal.op_add(dp,a),LingoNumber(1))))).image.copypixels(_global.member("thickWireGraf").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(LingoGlobal.op_sub(a,LingoNumber(1)),LingoNumber(4)),LingoNumber(4),LingoGlobal.op_mul(a,LingoNumber(4))),LingoPropertyList(dict(ink = LingoNumber(36))))                    else:                        break                                            tmp_a = a                                                case "ridgedtube":                wdth = LingoNumber(5)                pastqd = LingoList(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_sub(lastpos,LingoGlobal.op_mul(lastperp,wdth)))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                for tmp_a in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(4)):                     a = tmp_a                    if LingoGlobal.op_add(dp,a) <= LingoNumber(30):                         _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_sub(LingoGlobal.op_add(dp,a),LingoNumber(1))))).image.copypixels(_global.member("ridgedTubeGraf").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(LingoGlobal.op_sub(a,LingoNumber(1)),LingoNumber(10)),LingoNumber(5),LingoGlobal.op_mul(a,LingoNumber(10))),LingoPropertyList(dict(ink = LingoNumber(36))))                    else:                        break                                            tmp_a = a                                                case "fuel hose" | "zero-g tube":                wdth = LingoNumber(7)                jointsize = LingoNumber(6)                col = LingoNumber(0)                if LingoGlobal.op_eq_b(prop.nm, "Zero-G Tube"):                     wdth = LingoNumber(6)                    jointsize = LingoNumber(4)                    if LingoGlobal.op_eq_b(data.settings.applycolor, LingoNumber(1)):                         col = LingoNumber(1)                        _movieScript.gAnyDecals = LingoNumber(1)                                                            myperp = lastperp                pastqd = LingoList(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(myperp,wdth)),LingoGlobal.op_add(pos,LingoGlobal.op_mul(myperp,wdth)),LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(myperp,wdth)),LingoGlobal.op_sub(lastpos,LingoGlobal.op_mul(myperp,wdth)))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                for tmp_a in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(5)):                     a = tmp_a                    if LingoGlobal.op_add(dp,a) <= LingoNumber(30):                         _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_sub(LingoGlobal.op_add(dp,a),LingoNumber(1))))).image.copypixels(_global.member("fuelHoseGraf").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_sub(a,LingoNumber(1)),LingoNumber(16))),LingoNumber(14),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(a,LingoNumber(16)))),LingoPropertyList(dict(ink = LingoNumber(36))))
                        if LingoGlobal.op_eq_b(col, LingoNumber(1)):                             _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_sub(LingoGlobal.op_add(dp,a),LingoNumber(1))),"dc")).image.copypixels(_global.member("fuelHoseCol").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_sub(a,LingoNumber(1)),LingoNumber(16))),LingoNumber(14),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(a,LingoNumber(16)))),LingoPropertyList(dict(ink = LingoNumber(36))))                                            else:                        break                                            tmp_a = a                                    for tmp_a in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(4)):                     a = tmp_a                    if LingoGlobal.op_add(dp,a) <= LingoNumber(29):                         _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_add(dp,a)))).image.copypixels(_global.member("fuelHoseJoint").image,LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-jointsize,-jointsize,jointsize,jointsize)),LingoGlobal.rect(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)))),LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_sub(a,LingoNumber(1)),LingoNumber(12))),LingoNumber(12),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(a,LingoNumber(12)))),LingoPropertyList(dict(ink = LingoNumber(36))))                    else:                        break                                            tmp_a = a                                                case "broken fuel hose":                dr = _movieScript.movetopoint(pos,lastpos,LingoNumber(1.0000))                dst = _movieScript.diag(pos,lastpos)                for tmp_b in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(2)):                     b = tmp_b                    wdth = LingoNumber(5)                    pnta = LingoGlobal.op_add(pos,LingoGlobal.op_mul(LingoGlobal.op_mul(dr,LingoGlobal.op_div(dst,LingoNumber(3.0000))),b))                    pntb = LingoGlobal.op_add(pos,LingoGlobal.op_mul(LingoGlobal.op_mul(dr,LingoGlobal.op_div(dst,LingoNumber(3.0000))),LingoGlobal.op_add(b,LingoNumber(1))))                    aprp = _movieScript.movetopoint(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(_movieScript.lerp(lastperp.loch,perp.loch,LingoGlobal.op_div(b,LingoNumber(3.0000))),_movieScript.lerp(lastperp.locv,perp.locv,LingoGlobal.op_div(b,LingoNumber(3.0000)))),LingoNumber(1.0000))                    bprp = _movieScript.movetopoint(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(_movieScript.lerp(lastperp.loch,perp.loch,LingoGlobal.op_div(LingoGlobal.op_add(b,LingoNumber(1)),LingoNumber(3.0000))),_movieScript.lerp(lastperp.locv,perp.locv,LingoGlobal.op_div(LingoGlobal.op_add(b,LingoNumber(1)),LingoNumber(3.0000)))),LingoNumber(1.0000))                    pastqd = LingoList(LingoGlobal.op_sub(pnta,LingoGlobal.op_mul(aprp,wdth)),LingoGlobal.op_add(pnta,LingoGlobal.op_mul(aprp,wdth)),LingoGlobal.op_add(pntb,LingoGlobal.op_mul(bprp,wdth)),LingoGlobal.op_sub(pntb,LingoGlobal.op_mul(bprp,wdth)))                    pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                    for tmp_a in LingoGlobal.pyrange(LingoNumber(2), LingoNumber(5)):                         a = tmp_a                        if LingoGlobal.op_add(dp,a) <= LingoNumber(29):                             _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_add(dp,a)))).image.copypixels(_global.member("ridgedTubeGraf").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(LingoGlobal.op_sub(a,LingoNumber(1)),LingoNumber(10)),LingoNumber(5),LingoGlobal.op_mul(a,LingoNumber(10))),LingoPropertyList(dict(ink = LingoNumber(36))))                        else:                            break                                                    tmp_a = a                                            tmp_b = b                                    if _global.random(LingoNumber(5)) < LingoNumber(4):                     wdth = LingoNumber(7)                    myperp = lastperp                    pastqd = LingoList(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(myperp,wdth)),LingoGlobal.op_add(pos,LingoGlobal.op_mul(myperp,wdth)),LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(myperp,wdth)),LingoGlobal.op_sub(lastpos,LingoGlobal.op_mul(myperp,wdth)))                    pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                    for tmp_a in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(5)):                         a = tmp_a                        if LingoGlobal.op_add(dp,a) <= LingoNumber(30):                             _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_sub(LingoGlobal.op_add(dp,a),LingoNumber(1))))).image.copypixels(_global.member("fuelHoseGraf").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_sub(a,LingoNumber(1)),LingoNumber(16))),LingoNumber(14),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(a,LingoNumber(16)))),LingoPropertyList(dict(ink = LingoNumber(36))))                        else:                            break                                                    tmp_a = a                                            for tmp_a in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(4)):                         a = tmp_a                        if LingoGlobal.op_add(dp,a) <= LingoNumber(29):                             _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_add(dp,a)))).image.copypixels(_global.member("fuelHoseJoint").image,LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(6),-LingoNumber(6),LingoNumber(6),LingoNumber(6))),LingoGlobal.rect(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)))),LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_sub(a,LingoNumber(1)),LingoNumber(12))),LingoNumber(12),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(a,LingoNumber(12)))),LingoPropertyList(dict(ink = LingoNumber(36))))                        else:                            break                                                    tmp_a = a                                                                        case "large chain" | "large chain 2":                dr = _movieScript.movetopoint(pos,lastpos,LingoNumber(1.0000))                dst = _movieScript.diag(pos,lastpos)                if LingoGlobal.op_eq_b(LingoGlobal.op_mod(num,LingoNumber(2)), LingoNumber(0)):                     wdth = LingoNumber(10)                                    else:                    wdth = LingoNumber(3.5000)                                    pnta = LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(dr,LingoNumber(11)))                pntb = LingoGlobal.op_sub(pos,LingoGlobal.op_mul(dr,LingoNumber(11)))                pastqd = LingoList(LingoGlobal.op_sub(pnta,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_add(pnta,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_add(pntb,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_sub(pntb,LingoGlobal.op_mul(lastperp,wdth)))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                if LingoGlobal.op_eq_b(prop.nm, "Large Chain"):                     for tmp_a in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(5)):                         a = tmp_a                        pstdp = _movieScript.restrict(LingoGlobal.op_add(dp,a),LingoNumber(0),LingoNumber(29))                        _global.member(LingoGlobal.concat("layer",_global.str(pstdp))).image.copypixels(_global.member("largeChainGraf").image,pastqd,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(a,LingoNumber(50))),LingoGlobal.op_add(LingoNumber(20),LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(7))),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(50)))),LingoPropertyList(dict(ink = LingoNumber(36))))
                        _global.member(LingoGlobal.concat("layer",_global.str(pstdp))).image.copypixels(_global.member("largeChainGrafHighLight").image,LingoGlobal.op_add(pastqd,LingoList(LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)))),LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(a,LingoNumber(50))),LingoGlobal.op_add(LingoNumber(20),LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(7))),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(50)))),LingoPropertyList(dict(ink = LingoNumber(36))))
                        pstdp = _movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_add(dp,LingoNumber(4)),a),LingoNumber(0),LingoNumber(29))                        b = LingoGlobal.op_sub(LingoNumber(5),a)                        _global.member(LingoGlobal.concat("layer",_global.str(pstdp))).image.copypixels(_global.member("largeChainGraf").image,pastqd,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(b,LingoNumber(50))),LingoGlobal.op_add(LingoNumber(20),LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(7))),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(b,LingoNumber(1)),LingoNumber(50)))),LingoPropertyList(dict(ink = LingoNumber(36))))
                        _global.member(LingoGlobal.concat("layer",_global.str(pstdp))).image.copypixels(_global.member("largeChainGrafHighLight").image,LingoGlobal.op_add(pastqd,LingoList(LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)))),LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(b,LingoNumber(50))),LingoGlobal.op_add(LingoNumber(20),LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(7))),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(b,LingoNumber(1)),LingoNumber(50)))),LingoPropertyList(dict(ink = LingoNumber(36))))
                        tmp_a = a                                                            else:                    for tmp_a in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(5)):                         a = tmp_a                        pstdp = _movieScript.restrict(LingoGlobal.op_add(dp,a),LingoNumber(0),LingoNumber(29))                        _global.member(LingoGlobal.concat("layer",_global.str(pstdp))).image.copypixels(_global.member("largeChainGraf2").image,pastqd,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(a,LingoNumber(50))),LingoGlobal.op_add(LingoNumber(20),LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(7))),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(50)))),LingoPropertyList(dict(ink = LingoNumber(36))))
                        _global.member(LingoGlobal.concat("layer",_global.str(pstdp))).image.copypixels(_global.member("largeChainGraf2HighLight").image,LingoGlobal.op_add(pastqd,LingoList(LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)))),LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(a,LingoNumber(50))),LingoGlobal.op_add(LingoNumber(20),LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(7))),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(50)))),LingoPropertyList(dict(ink = LingoNumber(36))))
                        pstdp = _movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_add(dp,LingoNumber(4)),a),LingoNumber(0),LingoNumber(29))                        b = LingoGlobal.op_sub(LingoNumber(5),a)                        _global.member(LingoGlobal.concat("layer",_global.str(pstdp))).image.copypixels(_global.member("largeChainGraf2").image,pastqd,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(b,LingoNumber(50))),LingoGlobal.op_add(LingoNumber(20),LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(7))),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(b,LingoNumber(1)),LingoNumber(50)))),LingoPropertyList(dict(ink = LingoNumber(36))))
                        _global.member(LingoGlobal.concat("layer",_global.str(pstdp))).image.copypixels(_global.member("largeChainGraf2HighLight").image,LingoGlobal.op_add(pastqd,LingoList(LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)))),LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(b,LingoNumber(50))),LingoGlobal.op_add(LingoNumber(20),LingoGlobal.op_mul(LingoGlobal.op_eq(LingoGlobal.op_mod(num,LingoNumber(2)),LingoNumber(1)),LingoNumber(7))),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(b,LingoNumber(1)),LingoNumber(50)))),LingoPropertyList(dict(ink = LingoNumber(36))))
                        tmp_a = a                                                                        case "bike chain":                dr = _movieScript.movetopoint(pos,lastpos,LingoNumber(1.0000))                dst = _movieScript.diag(pos,lastpos)                wdth = LingoNumber(17)                pnta = LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(dr,LingoNumber(17)))                pntb = LingoGlobal.op_sub(pos,LingoGlobal.op_mul(dr,LingoNumber(17)))                pastqd = LingoList(LingoGlobal.op_sub(pnta,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_add(pnta,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_add(pntb,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_sub(pntb,LingoGlobal.op_mul(lastperp,wdth)))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                _movieScript.renderbeveledimage(_global.member("BikeChainBolt").image,dp,LingoGlobal.op_sub(LingoList(LingoGlobal.op_add(lastpos,LingoGlobal.point(-LingoNumber(8),-LingoNumber(8))),LingoGlobal.op_add(lastpos,LingoGlobal.point(LingoNumber(8),-LingoNumber(8))),LingoGlobal.op_add(lastpos,LingoGlobal.point(LingoNumber(8),LingoNumber(8))),LingoGlobal.op_add(lastpos,LingoGlobal.point(-LingoNumber(8),LingoNumber(8)))),LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)))),LingoNumber(2))
                for tmp_a in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(9)):                     a = tmp_a                    pstdp = _movieScript.restrict(LingoGlobal.op_add(dp,a),LingoNumber(0),LingoNumber(29))                    _global.member(LingoGlobal.concat("layer",_global.str(pstdp))).image.copypixels(_global.member("BikeChainBolt").image,LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.rect(lastpos,lastpos),LingoGlobal.rect(-LingoNumber(8),-LingoNumber(8),LingoNumber(8),LingoNumber(8))),LingoGlobal.rect(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)))),_global.member("BikeChainBolt").image.rect,LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                    tmp_a = a                                    if LingoGlobal.op_eq_b(LingoGlobal.op_mod(num,LingoNumber(2)), LingoNumber(0)):                     pstdp = _movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(1)),LingoNumber(0),LingoNumber(29))                    _movieScript.renderbeveledimage(_global.member("BikeChainSegment").image,pstdp,pastqd,LingoNumber(1))
                    pstdp = _movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(2)),LingoNumber(0),LingoNumber(29))                    _global.member(LingoGlobal.concat("layer",_global.str(pstdp))).image.copypixels(_global.member("BikeChainSegment").image,pastqd,_global.member("BikeChainSegment").image.rect,LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                    pstdp = _movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(8)),LingoNumber(0),LingoNumber(29))                    _movieScript.renderbeveledimage(_global.member("BikeChainSegment").image,pstdp,pastqd,LingoNumber(1))
                    pstdp = _movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(9)),LingoNumber(0),LingoNumber(29))                    _global.member(LingoGlobal.concat("layer",_global.str(pstdp))).image.copypixels(_global.member("BikeChainSegment").image,pastqd,_global.member("BikeChainSegment").image.rect,LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))                else:                    pstdp = _movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(3)),LingoNumber(0),LingoNumber(29))                    _movieScript.renderbeveledimage(_global.member("BikeChainSegment").image,pstdp,pastqd,LingoNumber(1))
                    pstdp = _movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(4)),LingoNumber(0),LingoNumber(29))                    _global.member(LingoGlobal.concat("layer",_global.str(pstdp))).image.copypixels(_global.member("BikeChainSegment").image,pastqd,_global.member("BikeChainSegment").image.rect,LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                    pstdp = _movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(6)),LingoNumber(0),LingoNumber(29))                    _movieScript.renderbeveledimage(_global.member("BikeChainSegment").image,pstdp,pastqd,LingoNumber(1))
                    pstdp = _movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(7)),LingoNumber(0),LingoNumber(29))                    _global.member(LingoGlobal.concat("layer",_global.str(pstdp))).image.copypixels(_global.member("BikeChainSegment").image,pastqd,_global.member("BikeChainSegment").image.rect,LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))                            case "fat hose":                wdth = LingoNumber(20)                pastqd = LingoList(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_sub(lastpos,LingoGlobal.op_mul(lastperp,wdth)))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                for tmp_a in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(4)):                     a = tmp_a                    if LingoGlobal.op_add(LingoGlobal.op_add(dp,a),LingoNumber(1)) <= LingoNumber(29):                         _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_add(LingoGlobal.op_add(dp,a),LingoNumber(1))))).image.copypixels(_global.member("fatHoseGraf").image,pastqd,LingoGlobal.rect(LingoNumber(40),LingoGlobal.op_mul(a,LingoNumber(40)),LingoNumber(80),LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(40))),LingoPropertyList(dict(ink = LingoNumber(36))))                    else:                        break                                            tmp_a = a                                    pastqd = LingoList(LingoGlobal.op_sub(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_mul(dir,LingoNumber(5))),LingoGlobal.op_sub(LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_mul(dir,LingoNumber(5))),LingoGlobal.op_add(LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_mul(dir,LingoNumber(5))),LingoGlobal.op_add(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_mul(dir,LingoNumber(5))))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                for tmp_a in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(5)):                     a = tmp_a                    if LingoGlobal.op_add(dp,a) <= LingoNumber(29):                         _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_add(dp,a)))).image.copypixels(_global.member("fatHoseGraf").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(a,LingoNumber(10)),LingoNumber(40),LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(10))),LingoPropertyList(dict(ink = LingoNumber(36))))                    else:                        break                                            tmp_a = a                                    mdpnt = LingoGlobal.op_div(LingoGlobal.op_add(pos,lastpos),LingoNumber(2))                mdpnt = LingoGlobal.op_sub(mdpnt,LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)))                _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(_global.member("fatHoseGraf").image,LingoGlobal.op_add(LingoGlobal.rect(mdpnt,mdpnt),LingoGlobal.rect(-LingoNumber(5),-LingoNumber(5),LingoNumber(5),LingoNumber(5))),LingoGlobal.rect(LingoNumber(80),LingoNumber(0),LingoNumber(90),LingoNumber(10)),LingoPropertyList(dict(ink = LingoNumber(36))))            case "wire bunch" | "wire bunch 2":                if (LingoGlobal.op_eq_b(LingoGlobal.op_mod(num,LingoNumber(2)), LingoNumber(0)) or LingoGlobal.op_eq_b(num, data.points.count)):                     dr = _movieScript.movetopoint(pos,lastpos,LingoNumber(1.0000))                    if LingoGlobal.op_eq_b(_movieScript.wireBunchSav, LingoGlobal.VOID):                         _movieScript.wireBunchSav = LingoList()                        _movieScript.wireBunchSav.add(LingoList(lastpos,lastdir))
                        for tmp_i in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(19)):                             i = tmp_i                            _movieScript.wireBunchSav.add(_movieScript.degtovec(_global.random(LingoNumber(360))))
                            tmp_i = i                                                                        possiblepositions = LingoList()                    for tmp_i in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(10)):                         i = tmp_i                        possiblepositions.add(_movieScript.degtovec(LingoGlobal.op_mul(LingoGlobal.op_div(i.float,LingoNumber(10.0000)),LingoNumber(360))))
                        tmp_i = i                                            for tmp_i in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(6)):                         i = tmp_i                        possiblepositions.add(LingoGlobal.op_mul(_movieScript.degtovec(LingoGlobal.op_mul(LingoGlobal.op_div(i.float,LingoNumber(6.0000)),LingoNumber(360))),LingoNumber(0.7500)))
                        tmp_i = i                                            for tmp_i in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(3)):                         i = tmp_i                        possiblepositions.add(LingoGlobal.op_mul(_movieScript.degtovec(LingoGlobal.op_mul(LingoGlobal.op_div(i.float,LingoNumber(3.0000)),LingoNumber(360))),LingoNumber(0.5000)))
                        tmp_i = i                                            uselastpos = _movieScript.wireBunchSav[LingoNumber(1)][LingoNumber(1)]                    uselastdir = _movieScript.wireBunchSav[LingoNumber(1)][LingoNumber(2)]                    uselastperp = _movieScript.givedirfor90degrtoline(-uselastdir,uselastdir)                    for tmp_i in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(19)):                         i = tmp_i                        apoint = _movieScript.wireBunchSav[LingoGlobal.op_add(i,LingoNumber(1))]                        indx = _global.random(possiblepositions.count)                        bpoint = possiblepositions[indx]                        possiblepositions.deleteat(indx)
                        apos = LingoGlobal.op_add(uselastpos,LingoGlobal.op_mul(LingoGlobal.op_mul(uselastperp,apoint.loch),LingoNumber(18)))                        adp = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_add(dp,LingoNumber(2.5000)),LingoGlobal.op_mul(apoint.locv,LingoNumber(2.5000))).integer,LingoNumber(1))                        bpos = LingoGlobal.op_add(pos,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,bpoint.loch),LingoNumber(18)))                        bdp = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_add(dp,LingoNumber(2.5000)),LingoGlobal.op_mul(bpoint.locv,LingoNumber(2.5000))).integer,LingoNumber(1))                        ahandle = LingoGlobal.op_add(apos,LingoGlobal.op_mul(uselastdir,_movieScript.lerp(LingoGlobal.op_div(_movieScript.diag(apos,bpos),LingoNumber(2.0000)),LingoGlobal.op_add(LingoNumber(40),_global.random(LingoNumber(40))).float,LingoNumber(0.5000))))                        bhandle = LingoGlobal.op_sub(bpos,LingoGlobal.op_mul(dir,_movieScript.lerp(LingoGlobal.op_div(_movieScript.diag(apos,bpos),LingoNumber(2.0000)),LingoGlobal.op_add(LingoNumber(40),_global.random(LingoNumber(40))).float,LingoNumber(0.5000))))                        c2 = _movieScript.lerpvector(apoint,bpoint,LingoNumber(0.5000))                        cpos = LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(LingoGlobal.op_mul(lastperp,c2.loch),LingoNumber(18)))                        ahandle = _movieScript.lerpvector(ahandle,cpos,LingoNumber(0.5000))                        bhandle = _movieScript.lerpvector(bhandle,cpos,LingoNumber(0.5000))                        if LingoGlobal.op_eq_b(_global.random(LingoNumber(35)), LingoNumber(1)):                             bpos = LingoGlobal.op_add(LingoGlobal.op_add(apos,LingoGlobal.op_mul(uselastdir,LingoNumber(60.0000))),LingoGlobal.op_mul(_movieScript.degtovec(_global.random(LingoNumber(360))),_global.random(LingoNumber(60))))                            bhandle = _movieScript.lerpvector(bhandle,LingoGlobal.op_add(bpos,LingoGlobal.op_mul(_movieScript.degtovec(_global.random(LingoNumber(360))),_global.random(LingoNumber(30)))),LingoNumber(0.5000))                                                    elif LingoGlobal.op_eq_b(_global.random(LingoNumber(35)), LingoNumber(1)):                             apos = LingoGlobal.op_add(LingoGlobal.op_sub(bpos,LingoGlobal.op_mul(dir,LingoNumber(60.0000))),LingoGlobal.op_mul(_movieScript.degtovec(_global.random(LingoNumber(360))),_global.random(LingoNumber(60))))                            ahandle = _movieScript.lerpvector(ahandle,LingoGlobal.op_add(apos,LingoGlobal.op_mul(_movieScript.degtovec(_global.random(LingoNumber(360))),_global.random(LingoNumber(30)))),LingoNumber(0.5000))                                                    self.drawbezierwire(lastdir,apos,ahandle,bpos,bhandle,adp,bdp)
                        _movieScript.wireBunchSav[LingoGlobal.op_add(i,LingoNumber(1))] = bpoint                        tmp_i = i                                            _movieScript.wireBunchSav[LingoNumber(1)][LingoNumber(1)] = pos                    _movieScript.wireBunchSav[LingoNumber(1)][LingoNumber(2)] = dir                                    wdth = LingoNumber(20)                pastqd = LingoList(LingoGlobal.op_sub(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(dr,LingoNumber(3.5000))),LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(dr,LingoNumber(3.5000))),LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(LingoGlobal.op_add(pos,LingoGlobal.op_mul(dr,LingoNumber(3.5000))),LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_sub(LingoGlobal.op_add(pos,LingoGlobal.op_mul(dr,LingoNumber(3.5000))),LingoGlobal.op_mul(perp,wdth)))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                mnclamp = LingoNumber(0)                if dp >= LingoNumber(6):                     mnclamp = LingoNumber(6)                                    for tmp_a2 in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(10)):                     a2 = tmp_a2                    a = LingoGlobal.op_sub(LingoNumber(10),a2)                    if LingoGlobal.op_eq_b(prop.nm, "Wire Bunch"):                         _global.member(LingoGlobal.concat("layer",_global.str(_movieScript.restrict(LingoGlobal.op_sub(LingoGlobal.op_add(dp,a),LingoNumber(1)),mnclamp,LingoNumber(29))))).image.copypixels(_global.member("wireBunchGraf").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(a,LingoNumber(7))),LingoNumber(42),LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(7)))),LingoPropertyList(dict(ink = LingoNumber(36))))                    else:                        _global.member(LingoGlobal.concat("layer",_global.str(_movieScript.restrict(LingoGlobal.op_sub(LingoGlobal.op_add(dp,a),LingoNumber(1)),mnclamp,LingoNumber(29))))).image.copypixels(_global.member("wireBunchGraf2").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(a,LingoNumber(7)),LingoNumber(42),LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(7))),LingoPropertyList(dict(ink = LingoNumber(36))))                    tmp_a2 = a2                                    if LingoGlobal.op_eq_b(num, data.points.count):                     _movieScript.wireBunchSav = LingoGlobal.VOID                                                case "big big pipe":                wdth = LingoNumber(20)                pastqd = LingoList(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_sub(lastpos,LingoGlobal.op_mul(lastperp,wdth)))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                for tmp_a in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(4)):                     a = tmp_a                    if LingoGlobal.op_add(LingoGlobal.op_add(dp,a),LingoNumber(1)) <= LingoNumber(29):                         _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_add(LingoGlobal.op_add(dp,a),LingoNumber(1))))).image.copypixels(_global.member("bigBigPipeGraf").image,pastqd,LingoGlobal.rect(LingoNumber(40),LingoGlobal.op_mul(a,LingoNumber(40)),LingoNumber(80),LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(40))),LingoPropertyList(dict(ink = LingoNumber(36))))                    else:                        break                                            tmp_a = a                                    pastqd = LingoList(LingoGlobal.op_sub(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_mul(dir,LingoNumber(5))),LingoGlobal.op_sub(LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_mul(dir,LingoNumber(5))),LingoGlobal.op_add(LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_mul(dir,LingoNumber(5))),LingoGlobal.op_add(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_mul(dir,LingoNumber(5))))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                for tmp_a in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(5)):                     a = tmp_a                    if LingoGlobal.op_add(dp,a) <= LingoNumber(29):                         _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_add(dp,a)))).image.copypixels(_global.member("bigBigPipeGraf").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(a,LingoNumber(10)),LingoNumber(40),LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(10))),LingoPropertyList(dict(ink = LingoNumber(36))))                    else:                        break                                            tmp_a = a                                    mdpnt = LingoGlobal.op_div(LingoGlobal.op_add(pos,lastpos),LingoNumber(2))                mdpnt = LingoGlobal.op_sub(mdpnt,LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)))                _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(_global.member("bigBigPipeGraf").image,LingoGlobal.op_add(LingoGlobal.rect(mdpnt,mdpnt),LingoGlobal.rect(-LingoNumber(5),-LingoNumber(5),LingoNumber(5),LingoNumber(5))),LingoGlobal.rect(LingoNumber(80),LingoNumber(0),LingoNumber(90),LingoNumber(10)),LingoPropertyList(dict(ink = LingoNumber(36))))            case "ring chain":                wdth = LingoNumber(20)                pastqd = LingoList(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(lastperp,wdth)),LingoGlobal.op_sub(lastpos,LingoGlobal.op_mul(lastperp,wdth)))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                for tmp_a in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(4)):                     a = tmp_a                    if LingoGlobal.op_add(dp,a) <= LingoNumber(29):                         _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_add(dp,a)))).image.copypixels(_global.member("ringChainGraf").image,pastqd,LingoGlobal.rect(LingoNumber(40),LingoGlobal.op_mul(a,LingoNumber(40)),LingoNumber(80),LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(40))),LingoPropertyList(dict(ink = LingoNumber(36))))                    else:                        break                                            tmp_a = a                                    pastqd = LingoList(LingoGlobal.op_sub(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_mul(dir,LingoNumber(5))),LingoGlobal.op_sub(LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_mul(dir,LingoNumber(5))),LingoGlobal.op_add(LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_mul(dir,LingoNumber(5))),LingoGlobal.op_add(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_mul(dir,LingoNumber(5))))                pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))                for tmp_a in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(4)):                     a = tmp_a                    if LingoGlobal.op_add(dp,a) <= LingoNumber(29):                         _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_add(dp,a)))).image.copypixels(_global.member("ringChainGraf").image,pastqd,LingoGlobal.rect(LingoGlobal.op_sub(LingoNumber(0),LingoNumber(19)),LingoGlobal.op_mul(a,LingoNumber(10)),LingoGlobal.op_sub(LingoNumber(40),LingoNumber(19)),LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(10))),LingoPropertyList(dict(ink = LingoNumber(36))))                    else:                        break                                            tmp_a = a                                    mdpnt = LingoGlobal.op_div(LingoGlobal.op_add(pos,lastpos),LingoNumber(2))                mdpnt = LingoGlobal.op_sub(mdpnt,LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)))                _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(_global.member("ringChainGraf").image,LingoGlobal.op_add(LingoGlobal.rect(mdpnt,mdpnt),LingoGlobal.rect(-LingoNumber(5),-LingoNumber(5),LingoNumber(5),LingoNumber(5))),LingoGlobal.rect(LingoNumber(80),LingoNumber(0),LingoNumber(90),LingoNumber(10)),LingoPropertyList(dict(ink = LingoNumber(36))))                            return None            def drawbezierwire(self, startdir, a, ahandle, b, bhandle, adp, bdp):         repeats = None        lastdir = None        lastpos = None        lastperp = None        i = None        pos = None        dir = None        perp = None        wdth = None        pastqd = None        mydp = None        i2 = None        repeats = LingoGlobal.op_div(_movieScript.diag(a,b),LingoNumber(5.0000)).integer        lastdir = startdir        lastpos = LingoGlobal.op_sub(a,startdir)        lastperp = _movieScript.givedirfor90degrtoline(lastpos,a)        for tmp_i in LingoGlobal.pyrange(LingoNumber(1), repeats):             i = tmp_i            pos = _movieScript.bezier(a,ahandle,b,bhandle,LingoGlobal.op_div(i.float,repeats.float))            dir = _movieScript.movetopoint(lastpos,pos,LingoNumber(1.0000))            perp = _movieScript.givedirfor90degrtoline(lastpos,pos)            wdth = LingoNumber(2)            pastqd = LingoList(LingoGlobal.op_add(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(perp,wdth)),dir),LingoGlobal.op_add(LingoGlobal.op_add(pos,LingoGlobal.op_mul(perp,wdth)),dir),LingoGlobal.op_sub(LingoGlobal.op_add(lastpos,LingoGlobal.op_mul(lastperp,wdth)),lastdir),LingoGlobal.op_sub(LingoGlobal.op_sub(lastpos,LingoGlobal.op_mul(lastperp,wdth)),lastdir))            pastqd = LingoGlobal.op_sub(pastqd,LingoList(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20))))            mydp = _movieScript.lerp(adp,bdp,LingoGlobal.op_div(i.float,repeats.float)).integer            for tmp_i2 in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(3)):                 i2 = tmp_i2                if LingoGlobal.op_add(mydp,i2) <= LingoNumber(30):                     _global.member(LingoGlobal.concat("layer",_global.str(LingoGlobal.op_sub(LingoGlobal.op_add(mydp,i2),LingoNumber(1))))).image.copypixels(_global.member("thickWireGraf").image,pastqd,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(LingoGlobal.op_sub(i2,LingoNumber(1)),LingoNumber(4)),LingoNumber(4),LingoGlobal.op_mul(i2,LingoNumber(4))),LingoPropertyList(dict(ink = LingoNumber(36))))                else:                    break                                    tmp_i2 = i2                            lastpos = pos            lastdir = dir            lastperp = perp            tmp_i = i                            return None            def initrendersoftprop(self, prop, qd, propdata, dp, propimage):         lft = None        tp = None        rght = None        bttm = None        p = None        pasterect = None        offsetpnt = None        getrect = None        clr = None        q = None        lft = qd[LingoNumber(1)].loch        tp = qd[LingoNumber(1)].locv        rght = qd[LingoNumber(1)].loch        bttm = qd[LingoNumber(1)].locv        for tmp_p in qd:             p = tmp_p            if p.loch < lft:                 lft = p.loch                            if p.loch > rght:                 rght = p.loch                            if p.locv < tp:                 tp = p.locv                            if p.locv > bttm:                 bttm = p.locv                                    pasterect = LingoGlobal.rect(lft,tp,rght,bttm)        offsetpnt = LingoGlobal.point(lft,tp)        _global.member("softPropRender").image = _global.image(pasterect.width,pasterect.height,LingoNumber(32))        getrect = propimage.rect        if LingoGlobal.op_eq_b(prop.tp, "variedSoft"):             getrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(propdata.settings.variation,LingoNumber(1)),prop.pxlsize.loch),LingoNumber(0),LingoGlobal.op_mul(propdata.settings.variation,prop.pxlsize.loch),prop.pxlsize.locv),LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1)))                    if LingoGlobal.op_eq_b(prop.tp, "coloredSoft"):             getrect = LingoGlobal.op_add(LingoGlobal.rect(prop.pxlsize.loch,LingoNumber(0),prop.pxlsize.loch,prop.pxlsize.locv),LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1)))                    _global.member("softPropRender").image.copypixels(propimage,LingoGlobal.op_sub(qd,LingoList(offsetpnt,offsetpnt,offsetpnt,offsetpnt)),getrect)
        if (LingoGlobal.op_eq_b(prop.tp, "variedSoft") or LingoGlobal.op_eq_b(prop.tp, "coloredSoft")):             if LingoGlobal.op_eq_b(prop.colorize, LingoNumber(1)):                 if LingoGlobal.ToBool(propdata.settings.applycolor):                     _movieScript.gAnyDecals = LingoGlobal.TRUE                    _global.member("softPropColor").image = _global.image(pasterect.width,pasterect.height,LingoNumber(32))                    _global.member("softPropColor").image.copypixels(propimage,LingoGlobal.op_sub(qd,LingoList(offsetpnt,offsetpnt,offsetpnt,offsetpnt)),LingoGlobal.op_add(getrect,LingoGlobal.rect(LingoNumber(0),getrect.height,LingoNumber(0),getrect.height)))                                    if (prop.tags.getpos("effectColorA") > LingoNumber(0) or prop.tags.getpos("effectColorB") > LingoNumber(0)):             _global.member("softPropGrad").image = _global.image(pasterect.width,pasterect.height,LingoNumber(32))            _global.member("softPropGrad").image.copypixels(_global.member("previewImprt").image,LingoGlobal.op_sub(qd,LingoList(offsetpnt,offsetpnt,offsetpnt,offsetpnt)),LingoGlobal.op_add(getrect,LingoGlobal.rect(LingoNumber(0),getrect.height,LingoNumber(0),getrect.height)))        clr = LingoNumber(0)        if LingoGlobal.op_ne_b(propdata.settings.findpos(color), LingoGlobal.VOID):             if propdata.settings.color > LingoNumber(0):                 clr = _movieScript.gPEcolors[propdata.settings.color][LingoNumber(2)]                _movieScript.gAnyDecals = LingoNumber(1)                                    _movieScript.softProp = LingoPropertyList(dict(c = LingoNumber(0),pasterect = pasterect,prop = prop,propdata = propdata,dp = dp,clr = clr))        for tmp_q in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(29)):             q = tmp_q            _global.sprite(LingoGlobal.op_sub(LingoNumber(50),q)).color = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0))            tmp_q = q                            return None            def rendersoftprop(self):         effectcolora = None        effectcolorb = None        q2 = None        clr = None        dpth = None        renderfrom = None        renderto = None        painted = None        d = None        dp = None        colornumstruct = None        dir = None        palcol = None        ang = None        a = None        pnt = None        dpthremove = None        clrzclr = None        gradop = None        q = None        val = None        effectcolora = LingoGlobal.op_gt(_movieScript.softProp.prop.tags.getpos("effectColorA"),LingoNumber(0))        effectcolorb = LingoGlobal.op_gt(_movieScript.softProp.prop.tags.getpos("effectColorB"),LingoNumber(0))        for tmp_q2 in LingoGlobal.pyrange(LingoNumber(0), LingoGlobal.op_sub(_movieScript.softProp.pasterect.width,LingoNumber(1))):             q2 = tmp_q2            clr = _global.member("softPropRender").image.getpixel(q2,_movieScript.softProp.c)            if (LingoGlobal.op_ne_b(clr, _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))) and (clr.green > LingoNumber(0) or LingoGlobal.op_eq_b(_movieScript.softProp.prop.tp, "antimatter"))):                 dpth = LingoGlobal.op_div(clr.green,LingoNumber(255.0000))                if LingoGlobal.op_eq_b(_movieScript.softProp.prop.tp, "antimatter"):                     renderfrom = _movieScript.softProp.dp                    renderto = _movieScript.restrict(LingoGlobal.op_add(_movieScript.softProp.dp,LingoGlobal.op_mul(_movieScript.softProp.propdata.settings.customdepth,LingoGlobal.op_sub(LingoNumber(1.0000),dpth))).integer,LingoNumber(0),LingoNumber(29))                    painted = LingoGlobal.FALSE                    for tmp_d in LingoGlobal.pyrange(renderfrom, renderto):                         d = tmp_d                        dp = _movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_sub(renderto,d),renderfrom),LingoNumber(0),LingoNumber(29))                        if LingoGlobal.op_ne_b(_global.member(LingoGlobal.concat("layer",dp)).image.getpixel(LingoGlobal.op_add(q2,_movieScript.softProp.pasterect.left),LingoGlobal.op_add(_movieScript.softProp.c,_movieScript.softProp.pasterect.top)), _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                             _global.member(LingoGlobal.concat("layer",dp)).image.setpixel(LingoGlobal.op_add(q2,_movieScript.softProp.pasterect.left),LingoGlobal.op_add(_movieScript.softProp.c,_movieScript.softProp.pasterect.top),_global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))
                            if LingoGlobal.op_eq_b(painted, LingoGlobal.FALSE):                                 for tmp_colornumstruct in LingoList(LingoList(_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),-LingoNumber(1)),LingoList(_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)),LingoNumber(1))):                                     colornumstruct = tmp_colornumstruct                                    for tmp_dir in LingoList(LingoGlobal.point(LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),-LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)),LingoGlobal.point(LingoNumber(2),LingoNumber(0)),LingoGlobal.point(LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(LingoNumber(0),LingoNumber(2))):                                         dir = tmp_dir                                        if LingoGlobal.op_ne_b(_global.member(LingoGlobal.concat("layer",dp)).image.getpixel(LingoGlobal.op_add(LingoGlobal.op_add(q2,_movieScript.softProp.pasterect.left),LingoGlobal.op_mul(dir.loch,colornumstruct[LingoNumber(2)])),LingoGlobal.op_add(LingoGlobal.op_add(_movieScript.softProp.c,_movieScript.softProp.pasterect.top),LingoGlobal.op_mul(dir.locv,colornumstruct[LingoNumber(2)]))), _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                                             _global.member(LingoGlobal.concat("layer",dp)).image.setpixel(LingoGlobal.op_add(LingoGlobal.op_add(q2,_movieScript.softProp.pasterect.left),LingoGlobal.op_mul(dir.loch,colornumstruct[LingoNumber(2)])),LingoGlobal.op_add(LingoGlobal.op_add(_movieScript.softProp.c,_movieScript.softProp.pasterect.top),LingoGlobal.op_mul(dir.locv,colornumstruct[LingoNumber(2)])),colornumstruct[LingoNumber(1)])                                                                                                            painted = LingoGlobal.TRUE                                                                                    tmp_d = d                                                            else:                    if LingoGlobal.ToBool(effectcolora):                         palcol = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(255))                                            elif LingoGlobal.ToBool(effectcolorb):                         palcol = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(255))                                            else:                        palcol = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))                                            if LingoGlobal.op_eq_b(_movieScript.softProp.prop.selfshade, LingoNumber(0)):                         if LingoGlobal.ToBool(effectcolora):                             if clr.blue > LingoGlobal.op_mul(LingoGlobal.op_div(LingoNumber(255.0000),LingoNumber(3.0000)),LingoNumber(2.0000)):                                 palcol = _global.color(LingoNumber(255),LingoNumber(150),LingoNumber(255))                                                            elif clr.blue < LingoGlobal.op_div(LingoNumber(255.0000),LingoNumber(3.0000)):                                 palcol = _global.color(LingoNumber(150),LingoNumber(0),LingoNumber(150))                                                                                    elif LingoGlobal.ToBool(effectcolorb):                             if clr.blue > LingoGlobal.op_mul(LingoGlobal.op_div(LingoNumber(255.0000),LingoNumber(3.0000)),LingoNumber(2.0000)):                                 palcol = _global.color(LingoNumber(150),LingoNumber(255),LingoNumber(255))                                                            elif clr.blue < LingoGlobal.op_div(LingoNumber(255.0000),LingoNumber(3.0000)):                                 palcol = _global.color(LingoNumber(0),LingoNumber(150),LingoNumber(150))                                                                                    elif clr.blue > LingoGlobal.op_mul(LingoGlobal.op_div(LingoNumber(255.0000),LingoNumber(3.0000)),LingoNumber(2.0000)):                             palcol = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))                                                    elif clr.blue < LingoGlobal.op_div(LingoNumber(255.0000),LingoNumber(3.0000)):                             palcol = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))                                                                        else:                        ang = LingoNumber(0.0000)                        for tmp_a in LingoGlobal.pyrange(LingoNumber(1), _movieScript.softProp.prop.smoothshading):                             a = tmp_a                            for tmp_pnt in LingoList(LingoGlobal.point(LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1))):                                 pnt = tmp_pnt                                ang = LingoGlobal.op_add(LingoGlobal.op_add(ang,LingoGlobal.op_sub(dpth,self.softpropdepth(LingoGlobal.op_sub(LingoGlobal.point(q2,_movieScript.softProp.c),LingoGlobal.op_mul(pnt,a))))),LingoGlobal.op_sub(self.softpropdepth(LingoGlobal.op_add(LingoGlobal.point(q2,_movieScript.softProp.c),LingoGlobal.op_mul(pnt,a))),dpth))                                                            tmp_a = a                                                    ang = LingoGlobal.op_div(ang,LingoGlobal.op_mul(_movieScript.softProp.prop.smoothshading.float,LingoNumber(3.0000)))                        ang = LingoGlobal.op_mul(ang,LingoGlobal.op_sub(LingoNumber(1.0000),LingoGlobal.op_div(clr.red,LingoNumber(255.0000))))                        if LingoGlobal.op_mul(LingoGlobal.op_mul(ang,LingoNumber(10.0000)),LingoGlobal.power(dpth,_movieScript.softProp.prop.depthaffecthilites)) > _movieScript.softProp.prop.highlightborder:                             if LingoGlobal.ToBool(effectcolora):                                 palcol = _global.color(LingoNumber(255),LingoNumber(150),LingoNumber(255))                                                            elif LingoGlobal.ToBool(effectcolorb):                                 palcol = _global.color(LingoNumber(150),LingoNumber(255),LingoNumber(255))                                                            else:                                palcol = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))                                                                                    elif LingoGlobal.op_mul(-ang,LingoNumber(10.0000)) > _movieScript.softProp.prop.shadowborder:                             if LingoGlobal.ToBool(effectcolora):                                 palcol = _global.color(LingoNumber(150),LingoNumber(0),LingoNumber(150))                                                            elif LingoGlobal.ToBool(effectcolorb):                                 palcol = _global.color(LingoNumber(0),LingoNumber(150),LingoNumber(150))                                                            else:                                palcol = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))                                                                                                        dpth = LingoGlobal.op_sub(LingoNumber(1.0000),dpth)                    dpth = LingoGlobal.power(dpth,_movieScript.softProp.prop.contourexp)                    dpthremove = LingoGlobal.op_mul(dpth,_movieScript.softProp.propdata.settings.customdepth)                    renderfrom = LingoNumber(0)                    renderto = LingoNumber(0)                    if LingoGlobal.ToBool(_movieScript.softProp.prop.round):                         renderfrom = LingoGlobal.op_add(_movieScript.softProp.dp,LingoGlobal.op_div(dpthremove,LingoNumber(2.0000)))                        renderto = LingoGlobal.op_sub(LingoGlobal.op_add(_movieScript.softProp.dp,_movieScript.softProp.propdata.settings.customdepth),LingoGlobal.op_div(dpthremove,LingoNumber(2.0000)))                                            else:                        renderfrom = LingoGlobal.op_add(_movieScript.softProp.dp,dpthremove)                        renderto = LingoGlobal.op_add(_movieScript.softProp.dp,_movieScript.softProp.propdata.settings.customdepth)                                            renderfrom = _movieScript.lerp(renderfrom,LingoGlobal.op_add(_movieScript.softProp.dp,dpthremove),LingoGlobal.op_div(clr.red,LingoNumber(255.0000)))                    renderto = _movieScript.lerp(renderto,LingoGlobal.op_add(_movieScript.softProp.dp,dpthremove),LingoGlobal.op_div(clr.red,LingoNumber(255.0000)))                    for tmp_dp in LingoGlobal.pyrange(_movieScript.restrict(renderfrom.integer,LingoNumber(0),LingoNumber(29)), _movieScript.restrict(renderto.integer,LingoNumber(0),LingoNumber(29))):                         dp = tmp_dp                        _global.member(LingoGlobal.concat("layer",dp)).image.setpixel(LingoGlobal.op_add(q2,_movieScript.softProp.pasterect.left),LingoGlobal.op_add(_movieScript.softProp.c,_movieScript.softProp.pasterect.top),palcol)
                        tmp_dp = dp                                            clrzclr = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                    if LingoGlobal.op_ne_b(_movieScript.softProp.clr, LingoNumber(0)):                         clrzclr = _movieScript.softProp.clr                                            elif LingoGlobal.op_eq_b(_movieScript.softProp.prop.tp, "variedSoft"):                         if LingoGlobal.op_eq_b(_movieScript.softProp.prop.colorize, LingoNumber(1)):                             if LingoGlobal.ToBool(_movieScript.softProp.propdata.settings.applycolor):                                 clrzclr = _global.member("softPropColor").image.getpixel(q2,_movieScript.softProp.c)                                                                                                        elif LingoGlobal.op_eq_b(_movieScript.softProp.prop.tp, "coloredSoft"):                         if LingoGlobal.op_eq_b(_movieScript.softProp.prop.colorize, LingoNumber(1)):                             if LingoGlobal.ToBool(_movieScript.softProp.propdata.settings.applycolor):                                 clrzclr = _global.member("softPropColor").image.getpixel(q2,_movieScript.softProp.c)                                                                                                        if LingoGlobal.op_ne_b(clrzclr, _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                         for tmp_dp in LingoGlobal.pyrange(_movieScript.restrict(renderfrom.integer,LingoNumber(0),LingoNumber(29)), _movieScript.restrict(renderto.integer,LingoNumber(0),LingoNumber(29))):                             dp = tmp_dp                            _global.member(LingoGlobal.concat("layer",dp,"dc")).image.setpixel(LingoGlobal.op_add(q2,_movieScript.softProp.pasterect.left),LingoGlobal.op_add(_movieScript.softProp.c,_movieScript.softProp.pasterect.top),clrzclr)
                            tmp_dp = dp                                                                        gradop = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                    if (LingoGlobal.ToBool(effectcolora) or LingoGlobal.ToBool(effectcolorb)):                         gradop = _global.member("softPropGrad").image.getpixel(q2,_movieScript.softProp.c)                                            if (LingoGlobal.ToBool(effectcolora) and LingoGlobal.op_ne_b(gradop, _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))):                         for tmp_dp in LingoGlobal.pyrange(_movieScript.restrict(renderfrom.integer,LingoNumber(0),LingoNumber(29)), _movieScript.restrict(renderto.integer,LingoNumber(0),LingoNumber(29))):                             dp = tmp_dp                            _global.member(LingoGlobal.concat("gradientA",dp)).image.setpixel(LingoGlobal.op_add(q2,_movieScript.softProp.pasterect.left),LingoGlobal.op_add(_movieScript.softProp.c,_movieScript.softProp.pasterect.top),gradop)
                            tmp_dp = dp                                                                        elif (LingoGlobal.ToBool(effectcolorb) and LingoGlobal.op_ne_b(gradop, _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))):                         for tmp_dp in LingoGlobal.pyrange(_movieScript.restrict(renderfrom.integer,LingoNumber(0),LingoNumber(29)), _movieScript.restrict(renderto.integer,LingoNumber(0),LingoNumber(29))):                             dp = tmp_dp                            _global.member(LingoGlobal.concat("gradientB",dp)).image.setpixel(LingoGlobal.op_add(q2,_movieScript.softProp.pasterect.left),LingoGlobal.op_add(_movieScript.softProp.c,_movieScript.softProp.pasterect.top),gradop)
                            tmp_dp = dp                                                                                                    tmp_q2 = q2                    _movieScript.softProp.c = LingoGlobal.op_add(_movieScript.softProp.c,LingoNumber(1))        if _movieScript.softProp.c >= _movieScript.softProp.pasterect.height:             for tmp_q in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(29)):                 q = tmp_q                val = LingoGlobal.op_div(LingoGlobal.op_add(q.float,LingoNumber(1.0000)),LingoNumber(30.0000))                _global.sprite(LingoGlobal.op_sub(LingoNumber(50),q)).color = _global.color(LingoGlobal.op_mul(val,LingoNumber(255)),LingoGlobal.op_mul(val,LingoNumber(255)),LingoGlobal.op_mul(val,LingoNumber(255)))                tmp_q = q                            _movieScript.softProp = LingoGlobal.VOID                            return None            def softpropdepth(self, pxl):         clr = None        clr = _global.member("softPropRender").image.getpixel(pxl.loch,pxl.locv)        if (LingoGlobal.op_eq_b(clr, _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))) or LingoGlobal.op_eq_b(clr, LingoNumber(0))):             return LingoNumber(0.0000)                    return LingoGlobal.op_div(clr.green,LingoNumber(255.0000))                    def renderesoftprop(self):         q2 = None        clr = None        dpth = None        palcol = None        ang = None        a = None        pnt = None        dpthremove = None        renderfrom = None        renderto = None        dp = None        clrzclr = None        q = None        val = None        for tmp_q2 in LingoGlobal.pyrange(LingoNumber(0), LingoGlobal.op_sub(_movieScript.softProp.pasterect.width,LingoNumber(1))):             q2 = tmp_q2            clr = _global.member("softPropRender").image.getpixel(q2,_movieScript.softProp.c)            if LingoGlobal.op_ne_b(clr, _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                 if clr.green > LingoNumber(0):                     dpth = LingoGlobal.op_div(clr.green,LingoNumber(255.0000))                                    elif clr.blue > LingoNumber(0):                     dpth = LingoGlobal.op_div(clr.blue,LingoNumber(255.0000))                                    else:                    dpth = LingoGlobal.op_div(clr.red,LingoNumber(255.0000))                                    palcol = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))                ang = LingoNumber(0.0000)                for tmp_a in LingoGlobal.pyrange(LingoNumber(1), _movieScript.softProp.prop.smoothshading):                     a = tmp_a                    for tmp_pnt in LingoList(LingoGlobal.point(LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(1),LingoNumber(1)),LingoGlobal.point(LingoNumber(0),LingoNumber(1))):                         pnt = tmp_pnt                        ang = LingoGlobal.op_add(LingoGlobal.op_add(ang,LingoGlobal.op_sub(dpth,self.esoftpropdepth(LingoGlobal.op_sub(LingoGlobal.point(q2,_movieScript.softProp.c),LingoGlobal.op_mul(pnt,a))))),LingoGlobal.op_sub(self.esoftpropdepth(LingoGlobal.op_add(LingoGlobal.point(q2,_movieScript.softProp.c),LingoGlobal.op_mul(pnt,a))),dpth))                                            tmp_a = a                                    ang = LingoGlobal.op_div(ang,LingoGlobal.op_mul(_movieScript.softProp.prop.smoothshading.float,LingoNumber(3.0000)))                ang = LingoGlobal.op_mul(ang,LingoGlobal.op_div(LingoNumber(1.0000),LingoNumber(255.0000)))                if LingoGlobal.op_mul(LingoGlobal.op_mul(ang,LingoNumber(10.0000)),LingoGlobal.power(dpth,_movieScript.softProp.prop.depthaffecthilites)) > _movieScript.softProp.prop.highlightborder:                     palcol = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))                                    elif LingoGlobal.op_mul(-ang,LingoNumber(10.0000)) > _movieScript.softProp.prop.shadowborder:                     palcol = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))                                    dpth = LingoGlobal.op_sub(LingoNumber(1.0000),dpth)                dpth = LingoGlobal.power(dpth,_movieScript.softProp.prop.contourexp)                dpthremove = LingoGlobal.op_mul(dpth,_movieScript.softProp.propdata.settings.customdepth)                renderfrom = LingoNumber(0)                renderto = LingoNumber(0)                if LingoGlobal.ToBool(_movieScript.softProp.prop.round):                     renderfrom = LingoGlobal.op_add(_movieScript.softProp.dp,LingoGlobal.op_div(dpthremove,LingoNumber(2.0000)))                    renderto = LingoGlobal.op_sub(LingoGlobal.op_add(_movieScript.softProp.dp,_movieScript.softProp.propdata.settings.customdepth),LingoGlobal.op_div(dpthremove,LingoNumber(2.0000)))                                    else:                    renderfrom = LingoGlobal.op_add(_movieScript.softProp.dp,dpthremove)                    renderto = LingoGlobal.op_add(_movieScript.softProp.dp,_movieScript.softProp.propdata.settings.customdepth)                                    renderfrom = _movieScript.lerp(renderfrom,LingoGlobal.op_add(_movieScript.softProp.dp,dpthremove),LingoGlobal.op_div(clr.red,LingoNumber(255.0000)))                renderto = _movieScript.lerp(renderto,LingoGlobal.op_add(_movieScript.softProp.dp,dpthremove),LingoGlobal.op_div(clr.red,LingoNumber(255.0000)))                for tmp_dp in LingoGlobal.pyrange(_movieScript.restrict(renderfrom.integer,LingoNumber(0),LingoNumber(29)), _movieScript.restrict(renderto.integer,LingoNumber(0),LingoNumber(29))):                     dp = tmp_dp                    _global.member(LingoGlobal.concat("layer",dp)).image.setpixel(LingoGlobal.op_add(q2,_movieScript.softProp.pasterect.left),LingoGlobal.op_add(_movieScript.softProp.c,_movieScript.softProp.pasterect.top),palcol)
                    tmp_dp = dp                                    clrzclr = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                if LingoGlobal.op_ne_b(_movieScript.softProp.clr, LingoNumber(0)):                     clrzclr = _movieScript.softProp.clr                                    elif LingoGlobal.op_eq_b(_movieScript.softProp.prop.tp, "variedSoft"):                     if LingoGlobal.op_eq_b(_movieScript.softProp.prop.colorize, LingoNumber(1)):                         if LingoGlobal.ToBool(_movieScript.softProp.propdata.settings.applycolor):                             clrzclr = _global.member("softPropColor").image.getpixel(q2,_movieScript.softProp.c)                                                                                        elif LingoGlobal.op_eq_b(_movieScript.softProp.prop.tp, "coloredSoft"):                     if LingoGlobal.op_eq_b(_movieScript.softProp.prop.colorize, LingoNumber(1)):                         if LingoGlobal.ToBool(_movieScript.softProp.propdata.settings.applycolor):                             clrzclr = _global.member("softPropColor").image.getpixel(q2,_movieScript.softProp.c)                                                                                        if LingoGlobal.op_ne_b(clrzclr, _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))):                     if clr.blue > LingoNumber(0):                         clrzclr.green = LingoNumber(1)                                            elif clr.red > LingoNumber(0):                         clrzclr.green = LingoNumber(2)                                            for tmp_dp in LingoGlobal.pyrange(_movieScript.restrict(renderfrom.integer,LingoNumber(0),LingoNumber(29)), _movieScript.restrict(renderto.integer,LingoNumber(0),LingoNumber(29))):                         dp = tmp_dp                        _global.member(LingoGlobal.concat("layer",dp,"dc")).image.setpixel(LingoGlobal.op_add(q2,_movieScript.softProp.pasterect.left),LingoGlobal.op_add(_movieScript.softProp.c,_movieScript.softProp.pasterect.top),clrzclr)
                        tmp_dp = dp                                                                        tmp_q2 = q2                    _movieScript.softProp.c = LingoGlobal.op_add(_movieScript.softProp.c,LingoNumber(1))        if _movieScript.softProp.c >= _movieScript.softProp.pasterect.height:             for tmp_q in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(29)):                 q = tmp_q                val = LingoGlobal.op_div(LingoGlobal.op_add(q.float,LingoNumber(1.0000)),LingoNumber(30.0000))                _global.sprite(LingoGlobal.op_sub(LingoNumber(50),q)).color = _global.color(LingoGlobal.op_mul(val,LingoNumber(255)),LingoGlobal.op_mul(val,LingoNumber(255)),LingoGlobal.op_mul(val,LingoNumber(255)))                tmp_q = q                            _movieScript.softProp = LingoGlobal.VOID                            return None            def esoftpropdepth(self, pxl):         clr = None        clr = _global.member("softPropRender").image.getpixel(pxl.loch,pxl.locv)        if (LingoGlobal.op_eq_b(clr, _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))) or LingoGlobal.op_eq_b(clr, LingoNumber(0))):             return LingoNumber(0.0000)                    if clr.green > LingoNumber(0):             return LingoGlobal.op_div(clr.green,LingoNumber(255.0000))                    elif clr.blue > LingoNumber(0):             return LingoGlobal.op_div(clr.blue,LingoNumber(255.0000))                    else:            return LingoGlobal.op_div(clr.red,LingoNumber(255.0000))                            return None            def renderlongprop(self, qd, prop, data, dp):         a = None        b = None        dir = None        perp = None        dist = None        mem = None        totalsegments = None        buffer = None        qd2 = None        d = None        q = None        pnt = None        steps = None        degdir = None        stp = None        pos = None        rct = None        e = None        ornt = None        gtrect = None        thirddist = None        ps = None        dr = None        rodwidth = None        perpoffset = None        sz = None        wdth = None        a2 = None        a = LingoGlobal.op_div(LingoGlobal.op_add(qd[LingoNumber(1)],qd[LingoNumber(4)]),LingoNumber(2.0000))        b = LingoGlobal.op_div(LingoGlobal.op_add(qd[LingoNumber(2)],qd[LingoNumber(3)]),LingoNumber(2.0000))        dir = _movieScript.movetopoint(a,b,LingoNumber(1.0000))        perp = self.correctperp(dir)        dist = _movieScript.diag(a,b)        match prop.nm.lower():             case "cabinet clamp":                mem = _global.member("clampSegmentGraf")                totalsegments = LingoGlobal.op_sub(LingoGlobal.op_div(dist,mem.image.height),LingoNumber(0.5000)).integer                buffer = LingoGlobal.op_sub(dist,LingoGlobal.op_mul(totalsegments,mem.image.height))                qd2 = LingoList(LingoGlobal.op_add(LingoGlobal.op_sub(a,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.image.width),LingoNumber(0.5000))),LingoGlobal.op_mul(LingoGlobal.op_mul(dir,buffer),LingoNumber(0.5000))),LingoGlobal.op_add(LingoGlobal.op_add(a,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.image.width),LingoNumber(0.5000))),LingoGlobal.op_mul(LingoGlobal.op_mul(dir,buffer),LingoNumber(0.5000))),LingoGlobal.op_add(a,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.image.width),LingoNumber(0.5000))),LingoGlobal.op_sub(a,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.image.width),LingoNumber(0.5000))))                _global.member(LingoGlobal.concat("layer",dp)).image.copypixels(LingoImage.Pxl,qd2,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                qd2 = LingoList(LingoGlobal.op_sub(LingoGlobal.op_sub(b,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.image.width),LingoNumber(0.5000))),LingoGlobal.op_mul(LingoGlobal.op_mul(dir,buffer),LingoNumber(0.5000))),LingoGlobal.op_sub(LingoGlobal.op_add(b,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.image.width),LingoNumber(0.5000))),LingoGlobal.op_mul(LingoGlobal.op_mul(dir,buffer),LingoNumber(0.5000))),LingoGlobal.op_add(b,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.image.width),LingoNumber(0.5000))),LingoGlobal.op_sub(b,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.image.width),LingoNumber(0.5000))))                _global.member(LingoGlobal.concat("layer",dp)).image.copypixels(LingoImage.Pxl,qd2,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                d = LingoGlobal.op_div(buffer,LingoNumber(2.0000))                for tmp_q in LingoGlobal.pyrange(LingoNumber(1), totalsegments):                     q = tmp_q                    pnt = LingoGlobal.op_add(a,LingoGlobal.op_mul(d,dir))                    qd2 = LingoList(LingoGlobal.op_add(LingoGlobal.op_sub(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.image.width),LingoNumber(0.5000))),LingoGlobal.op_mul(dir,mem.image.height)),LingoGlobal.op_add(LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.image.width),LingoNumber(0.5000))),LingoGlobal.op_mul(dir,mem.image.height)),LingoGlobal.op_add(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.image.width),LingoNumber(0.5000))),LingoGlobal.op_sub(pnt,LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.image.width),LingoNumber(0.5000))))                    _global.member(LingoGlobal.concat("layer",dp)).image.copypixels(mem.image,qd2,mem.image.rect,LingoPropertyList(dict(color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),ink = LingoNumber(36))))
                    d = LingoGlobal.op_add(d,mem.image.height)                    tmp_q = q                                    mem = _global.member("clampBoltGraf")                _global.member(LingoGlobal.concat("layer",dp)).image.copypixels(mem.image,LingoGlobal.op_add(LingoGlobal.rect(a,a),LingoGlobal.rect(LingoGlobal.op_div(-mem.image.width,LingoNumber(2)),LingoGlobal.op_div(-mem.image.height,LingoNumber(2)),LingoGlobal.op_div(mem.image.width,LingoNumber(2)),LingoGlobal.op_div(mem.image.height,LingoNumber(2)))),mem.image.rect,LingoPropertyList(dict(ink = LingoNumber(36))))
                _global.member(LingoGlobal.concat("layer",dp)).image.copypixels(mem.image,LingoGlobal.op_add(LingoGlobal.rect(b,b),LingoGlobal.rect(LingoGlobal.op_div(-mem.image.width,LingoNumber(2)),LingoGlobal.op_div(-mem.image.height,LingoNumber(2)),LingoGlobal.op_div(mem.image.width,LingoNumber(2)),LingoGlobal.op_div(mem.image.height,LingoNumber(2)))),mem.image.rect,LingoPropertyList(dict(ink = LingoNumber(36))))            case "stretched pipe":                steps = LingoGlobal.op_add(LingoGlobal.op_div(_movieScript.diag(a,b),LingoNumber(20.0000)),LingoNumber(0.4999)).integer                degdir = _movieScript.lookatpoint(a,b)                stp = LingoGlobal.op_mul(_global.random(LingoNumber(100)),LingoNumber(0.0100))                for tmp_q in LingoGlobal.pyrange(LingoNumber(1), steps):                     q = tmp_q                    pos = LingoGlobal.op_add(a,LingoGlobal.op_mul(LingoGlobal.op_mul(dir,LingoNumber(20.0000)),LingoGlobal.op_sub(q,stp)))                    rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(10),-LingoNumber(11),LingoNumber(10),LingoNumber(11)))                    for tmp_e in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(0)):                         e = tmp_e                        _global.member(LingoGlobal.concat("layer",_global.str(_movieScript.restrict(LingoGlobal.op_add(dp,e),LingoNumber(0),LingoNumber(29))))).image.copypixels(_global.member("stretchedPipeGraf").image,_movieScript.rotatetoquad(rct,degdir),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(20),LingoNumber(22)),LingoPropertyList(dict(ink = LingoNumber(36))))
                        tmp_e = e                                            tmp_q = q                                                case "stretched wire":                steps = LingoGlobal.op_add(LingoGlobal.op_div(_movieScript.diag(a,b),LingoNumber(2.0000)),LingoNumber(0.4999)).integer                degdir = _movieScript.lookatpoint(a,b)                stp = LingoGlobal.op_mul(_global.random(LingoNumber(100)),LingoNumber(0.0100))                for tmp_q in LingoGlobal.pyrange(LingoNumber(1), steps):                     q = tmp_q                    pos = LingoGlobal.op_add(a,LingoGlobal.op_mul(LingoGlobal.op_mul(dir,LingoNumber(2.0000)),LingoGlobal.op_sub(q,stp)))                    rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(1),-LingoNumber(2),LingoNumber(1),LingoNumber(2)))                    for tmp_e in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(0)):                         e = tmp_e                        _global.member(LingoGlobal.concat("layer",_global.str(_movieScript.restrict(LingoGlobal.op_add(dp,e),LingoNumber(0),LingoNumber(29))))).image.copypixels(_global.member("stretchedWireGraf").image,_movieScript.rotatetoquad(rct,degdir),LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(e,LingoNumber(2)),LingoNumber(2),LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_add(e,LingoNumber(1)),LingoNumber(2)),LingoNumber(2))),LingoPropertyList(dict(ink = LingoNumber(36))))
                        tmp_e = e                                            tmp_q = q                                                case "twisted thread":                steps = LingoGlobal.op_add(LingoGlobal.op_div(_movieScript.diag(a,b),LingoNumber(8.0000)),LingoNumber(0.4999)).integer                degdir = _movieScript.lookatpoint(a,b)                stp = LingoGlobal.op_mul(_global.random(LingoNumber(100)),LingoNumber(0.0100))                for tmp_q in LingoGlobal.pyrange(LingoNumber(1), steps):                     q = tmp_q                    pos = LingoGlobal.op_add(a,LingoGlobal.op_mul(LingoGlobal.op_mul(dir,LingoNumber(8.0000)),LingoGlobal.op_sub(q,stp)))                    rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(4),-LingoNumber(4),LingoNumber(4),LingoNumber(4)))                    for tmp_e in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(0)):                         e = tmp_e                        _global.member(LingoGlobal.concat("layer",_global.str(_movieScript.restrict(LingoGlobal.op_add(dp,e),LingoNumber(0),LingoNumber(29))))).image.copypixels(_global.member("twistedThreadGraf").image,_movieScript.rotatetoquad(rct,degdir),LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(e,LingoNumber(8)),LingoNumber(8),LingoGlobal.op_mul(LingoGlobal.op_add(e,LingoNumber(1)),LingoNumber(8))),LingoPropertyList(dict(ink = LingoNumber(36))))
                        tmp_e = e                                            tmp_q = q                                                case "thick chain":                steps = LingoGlobal.op_add(LingoGlobal.op_div(_movieScript.diag(a,b),LingoNumber(12.0000)),LingoNumber(0.4999)).integer                ornt = LingoGlobal.op_sub(_global.random(LingoNumber(2)),LingoNumber(1))                degdir = _movieScript.lookatpoint(a,b)                stp = LingoGlobal.op_mul(_global.random(LingoNumber(100)),LingoNumber(0.0100))                for tmp_q in LingoGlobal.pyrange(LingoNumber(1), steps):                     q = tmp_q                    pos = LingoGlobal.op_add(a,LingoGlobal.op_mul(LingoGlobal.op_mul(dir,LingoNumber(12)),LingoGlobal.op_sub(q,stp)))                    if LingoGlobal.ToBool(ornt):                         rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(6),-LingoNumber(10),LingoNumber(6),LingoNumber(10)))                        gtrect = LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(12),LingoNumber(20))                        ornt = LingoNumber(0)                                            else:                        rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(2),-LingoNumber(10),LingoNumber(2),LingoNumber(10)))                        gtrect = LingoGlobal.rect(LingoNumber(13),LingoNumber(0),LingoNumber(16),LingoNumber(20))                        ornt = LingoNumber(1)                                            _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(_global.member("bigChainSegment").image,_movieScript.rotatetoquad(rct,degdir),gtrect,LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(5)),ink = LingoNumber(36))))
                    tmp_q = q                                                case "drill suspender":                thirddist = LingoGlobal.op_div(dist,LingoNumber(4.0000))                for tmp_q in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(2)):                     q = tmp_q                    ps = a                    dr = dir                    if LingoGlobal.op_eq_b(q, LingoNumber(2)):                         ps = b                        dr = -dir                                            qd = LingoList(LingoGlobal.op_sub(ps,perp),LingoGlobal.op_add(ps,perp),LingoGlobal.op_add(LingoGlobal.op_add(ps,LingoGlobal.op_mul(dr,thirddist)),perp),LingoGlobal.op_sub(LingoGlobal.op_add(ps,LingoGlobal.op_mul(dr,thirddist)),perp))                    _global.member(LingoGlobal.concat("layer",_movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(3)),LingoNumber(0),LingoNumber(29)))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                    qd = LingoList(LingoGlobal.op_sub(ps,LingoGlobal.op_mul(perp,LingoNumber(2))),LingoGlobal.op_add(ps,LingoGlobal.op_mul(perp,LingoNumber(2))),LingoGlobal.op_add(LingoGlobal.op_add(ps,LingoGlobal.op_mul(dr,LingoNumber(10.0000))),LingoGlobal.op_mul(perp,LingoNumber(2))),LingoGlobal.op_sub(LingoGlobal.op_add(ps,LingoGlobal.op_mul(dr,LingoNumber(10.0000))),LingoGlobal.op_mul(perp,LingoNumber(2))))                    _global.member(LingoGlobal.concat("layer",_movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(3)),LingoNumber(0),LingoNumber(29)))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                    rodwidth = LingoNumber(18.0000)                    qd = LingoList(LingoGlobal.op_sub(LingoGlobal.op_add(ps,LingoGlobal.op_mul(dr,thirddist)),LingoGlobal.op_mul(perp,rodwidth)),LingoGlobal.op_add(LingoGlobal.op_add(ps,LingoGlobal.op_mul(dr,thirddist)),LingoGlobal.op_mul(perp,rodwidth)),LingoGlobal.op_add(LingoGlobal.op_add(ps,LingoGlobal.op_mul(dr,LingoGlobal.op_sub(thirddist,LingoNumber(2.5000)))),LingoGlobal.op_mul(perp,rodwidth)),LingoGlobal.op_sub(LingoGlobal.op_add(ps,LingoGlobal.op_mul(dr,LingoGlobal.op_sub(thirddist,LingoNumber(2.5000)))),LingoGlobal.op_mul(perp,rodwidth)))                    _global.member(LingoGlobal.concat("layer",_movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(3)),LingoNumber(0),LingoNumber(29)))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                    qd = LingoList(LingoGlobal.op_sub(LingoGlobal.op_add(ps,LingoGlobal.op_mul(dr,thirddist)),LingoGlobal.op_mul(perp,LingoNumber(3))),LingoGlobal.op_add(LingoGlobal.op_add(ps,LingoGlobal.op_mul(dr,thirddist)),LingoGlobal.op_mul(perp,LingoNumber(3))),LingoGlobal.op_sub(LingoGlobal.op_sub(LingoGlobal.op_add(ps,LingoGlobal.op_mul(dr,thirddist)),LingoGlobal.op_mul(perp,LingoNumber(3))),LingoGlobal.op_mul(dr,LingoNumber(28))),LingoGlobal.op_sub(LingoGlobal.op_add(LingoGlobal.op_add(ps,LingoGlobal.op_mul(dr,thirddist)),LingoGlobal.op_mul(perp,LingoNumber(3))),LingoGlobal.op_mul(dr,LingoNumber(28))))                    qd = LingoGlobal.op_add(qd,LingoList(LingoGlobal.op_mul(dr,LingoNumber(2)),LingoGlobal.op_mul(dr,LingoNumber(2)),LingoGlobal.op_mul(dr,LingoNumber(2)),LingoGlobal.op_mul(dr,LingoNumber(2))))                    for tmp_e in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(2)):                         e = tmp_e                        _global.member(LingoGlobal.concat("layer",_movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_add(dp,LingoNumber(2)),e),LingoNumber(0),LingoNumber(29)))).image.copypixels(_global.member("DrillSuspenderClamp").image,qd,LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(_movieScript.restrict(e,LingoNumber(0),LingoNumber(1)),LingoNumber(28)),LingoNumber(6),LingoGlobal.op_mul(LingoGlobal.op_add(_movieScript.restrict(e,LingoNumber(0),LingoNumber(1)),LingoNumber(1)),LingoNumber(28))),LingoPropertyList(dict(ink = LingoNumber(36))))
                        tmp_e = e                                            _global.member(LingoGlobal.concat("layer",_movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(2)),LingoNumber(0),LingoNumber(29)))).image.copypixels(_global.member("DrillSuspenderBolt").image,LingoGlobal.op_add(LingoGlobal.rect(ps,ps),LingoGlobal.rect(-LingoNumber(3),-LingoNumber(3),LingoNumber(3),LingoNumber(3))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(6),LingoNumber(6)),LingoPropertyList(dict(ink = LingoNumber(36))))
                    for tmp_e in LingoGlobal.pyrange(LingoNumber(3), LingoNumber(4)):                         e = tmp_e                        _global.member(LingoGlobal.concat("layer",_movieScript.restrict(LingoGlobal.op_add(dp,e),LingoNumber(0),LingoNumber(29)))).image.copypixels(_global.member("DrillSuspenderBolt").image,LingoGlobal.op_add(LingoGlobal.rect(ps,ps),LingoGlobal.rect(-LingoNumber(4),-LingoNumber(4),LingoNumber(4),LingoNumber(4))),LingoGlobal.rect(LingoNumber(0),LingoNumber(6),LingoNumber(8),LingoNumber(14)),LingoPropertyList(dict(ink = LingoNumber(36))))
                        tmp_e = e                                            tmp_q = q                                    for tmp_q in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(2)):                     q = tmp_q                    perpoffset = -LingoNumber(10.0000)                    if LingoGlobal.op_eq_b(q, LingoNumber(2)):                         perpoffset = LingoNumber(10.0000)                                            rodwidth = LingoNumber(0.6500)                    qd = LingoList(LingoGlobal.op_sub(LingoGlobal.op_add(a,LingoGlobal.op_mul(dir,thirddist)),LingoGlobal.op_mul(perp,LingoGlobal.op_add(-rodwidth,perpoffset))),LingoGlobal.op_sub(LingoGlobal.op_add(a,LingoGlobal.op_mul(dir,thirddist)),LingoGlobal.op_mul(perp,LingoGlobal.op_add(rodwidth,perpoffset))),LingoGlobal.op_sub(LingoGlobal.op_sub(b,LingoGlobal.op_mul(dir,thirddist)),LingoGlobal.op_mul(perp,LingoGlobal.op_add(rodwidth,perpoffset))),LingoGlobal.op_sub(LingoGlobal.op_sub(b,LingoGlobal.op_mul(dir,thirddist)),LingoGlobal.op_mul(perp,LingoGlobal.op_add(-rodwidth,perpoffset))))                    _global.member(LingoGlobal.concat("layer",_movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(3)),LingoNumber(0),LingoNumber(29)))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                    for tmp_e in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(2)):                         e = tmp_e                        pos = LingoGlobal.op_sub(LingoGlobal.op_add(a,LingoGlobal.op_mul(dir,thirddist)),LingoGlobal.op_mul(perp,perpoffset))                        if LingoGlobal.op_eq_b(e, LingoNumber(2)):                             pos = LingoGlobal.op_sub(LingoGlobal.op_sub(b,LingoGlobal.op_mul(dir,thirddist)),LingoGlobal.op_mul(perp,perpoffset))                                                    for tmp_d in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(5)):                             d = tmp_d                            sz = LingoGlobal.op_add(LingoNumber(3.0000),LingoGlobal.op_mul(LingoNumber(7.0000),LingoGlobal.sin(LingoGlobal.op_mul(LingoGlobal.op_div(d,LingoNumber(5.0000)),LingoGlobal.PI))))                            qd = LingoList(LingoGlobal.op_sub(LingoGlobal.op_add(pos,LingoGlobal.op_mul(dir,sz)),perp),LingoGlobal.op_add(LingoGlobal.op_add(pos,LingoGlobal.op_mul(dir,sz)),perp),LingoGlobal.op_add(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(dir,sz)),perp),LingoGlobal.op_sub(LingoGlobal.op_sub(pos,LingoGlobal.op_mul(dir,sz)),perp))                            _global.member(LingoGlobal.concat("layer",_movieScript.restrict(LingoGlobal.op_add(dp,d),LingoNumber(0),LingoNumber(29)))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                            tmp_d = d                                                    tmp_e = e                                            tmp_q = q                                                case "drill":                steps = LingoGlobal.op_add(LingoGlobal.op_div(_movieScript.diag(a,b),LingoNumber(20.0000)),LingoNumber(0.4999)).integer                degdir = _movieScript.lookatpoint(a,b)                stp = LingoGlobal.op_mul(_global.random(LingoNumber(100)),LingoNumber(0.0100))                for tmp_q in LingoGlobal.pyrange(LingoNumber(1), steps):                     q = tmp_q                    pos = LingoGlobal.op_add(a,LingoGlobal.op_mul(LingoGlobal.op_mul(dir,LingoNumber(20.0000)),LingoGlobal.op_sub(q,stp)))                    rct = LingoGlobal.op_add(LingoGlobal.rect(pos,pos),LingoGlobal.rect(-LingoNumber(10),-LingoNumber(10),LingoNumber(10),LingoNumber(10)))                    for tmp_e in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(9)):                         e = tmp_e                        _global.member(LingoGlobal.concat("layer",_global.str(_movieScript.restrict(LingoGlobal.op_add(dp,e),LingoNumber(0),LingoNumber(29))))).image.copypixels(_global.member("DrillGraf").image,_movieScript.rotatetoquad(rct,degdir),LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(e,LingoNumber(20)),LingoNumber(20),LingoGlobal.op_mul(LingoGlobal.op_add(e,LingoNumber(1)),LingoNumber(20))),LingoPropertyList(dict(ink = LingoNumber(36))))
                        tmp_e = e                                            tmp_q = q                                                case "piston":                dr = dir                for tmp_d in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(2)):                     d = tmp_d                    wdth = LingoGlobal.op_add(LingoNumber(3),d)                    qd = LingoList(LingoGlobal.op_sub(a,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(a,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(b,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_sub(b,LingoGlobal.op_mul(perp,wdth)))                    _global.member(LingoGlobal.concat("layer",_movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_add(dp,d),LingoNumber(1)),LingoNumber(0),LingoNumber(29)))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                    _global.member(LingoGlobal.concat("layer",_movieScript.restrict(LingoGlobal.op_add(LingoGlobal.op_add(dp,d),LingoNumber(1)),LingoNumber(0),LingoNumber(29)))).image.copypixels(_global.member("pistonHead").image,LingoGlobal.rect(LingoGlobal.op_sub(a.loch,LingoNumber(5)),LingoGlobal.op_sub(a.locv,LingoNumber(5)),LingoGlobal.op_add(a.loch,LingoNumber(5)),LingoGlobal.op_add(a.locv,LingoNumber(5))),_global.member("pistonHead").image.rect,LingoPropertyList(dict(ink = LingoNumber(36))))
                    tmp_d = d                                    wdth = LingoNumber(1)                qd = LingoGlobal.op_add(LingoList(LingoGlobal.op_sub(LingoGlobal.op_add(a,dir),LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(LingoGlobal.op_add(a,dir),LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(LingoGlobal.op_sub(b,dir),LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_sub(LingoGlobal.op_sub(b,dir),LingoGlobal.op_mul(perp,wdth))),LingoList(LingoGlobal.point(-LingoNumber(1),-LingoNumber(1)),LingoGlobal.point(-LingoNumber(1),-LingoNumber(1)),LingoGlobal.point(-LingoNumber(1),-LingoNumber(1)),LingoGlobal.point(-LingoNumber(1),-LingoNumber(1))))                _global.member(LingoGlobal.concat("layer",_movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(1)),LingoNumber(0),LingoNumber(29)))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)))))
                a2 = a                if _movieScript.diag(a,b) > LingoNumber(200):                     a2 = LingoGlobal.op_add(b,_movieScript.movetopoint(b,a,LingoNumber(200.0000)))                                    for tmp_d in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(4)):                     d = tmp_d                    wdth = LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(5),d),LingoGlobal.op_gt(d,LingoNumber(0)))                    qd = LingoList(LingoGlobal.op_sub(a2,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(a2,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(b,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_sub(b,LingoGlobal.op_mul(perp,wdth)))                    _global.member(LingoGlobal.concat("layer",_movieScript.restrict(LingoGlobal.op_add(dp,d),LingoNumber(0),LingoNumber(29)))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                    if LingoGlobal.op_eq_b(d, LingoNumber(0)):                         wdth = LingoNumber(3)                        qd = LingoGlobal.op_add(LingoList(LingoGlobal.op_sub(LingoGlobal.op_add(a2,LingoGlobal.op_mul(dir,LingoNumber(2))),LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(LingoGlobal.op_add(a2,LingoGlobal.op_mul(dir,LingoNumber(2))),LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(LingoGlobal.op_sub(b,LingoGlobal.op_mul(dir,LingoNumber(2))),LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_sub(LingoGlobal.op_sub(b,LingoGlobal.op_mul(dir,LingoNumber(2))),LingoGlobal.op_mul(perp,wdth))),LingoList(LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),LingoGlobal.point(-LingoNumber(2),-LingoNumber(2))))                        _global.member(LingoGlobal.concat("layer",_movieScript.restrict(dp,LingoNumber(0),LingoNumber(29)))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255)))))                    qd = LingoList(LingoGlobal.op_sub(a2,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(a2,LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_add(LingoGlobal.op_add(a2,LingoGlobal.op_mul(dir,LingoNumber(2))),LingoGlobal.op_mul(perp,wdth)),LingoGlobal.op_sub(LingoGlobal.op_add(a2,LingoGlobal.op_mul(dir,LingoNumber(2))),LingoGlobal.op_mul(perp,wdth)))                    _global.member(LingoGlobal.concat("layer",_movieScript.restrict(LingoGlobal.op_add(dp,d),LingoNumber(0),LingoNumber(29)))).image.copypixels(LingoImage.Pxl,qd,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)))))
                    tmp_d = d                                                                return None            def doproptags(self, prop, dp, qd):         i = None        img = None        rnd = None        mdpnt = None        r = None        rct = None        d = None        a = None        b = None        blnd = None        for tmp_i in LingoGlobal.pyrange(LingoNumber(1), prop.tags.count):             i = tmp_i            match prop.tags[i].lower():                 case "circular sign":                    img = _global.image(LingoNumber(120),LingoNumber(120),LingoNumber(1))                    rnd = _global.random(LingoNumber(14))                    img.copypixels(_global.member("circularSigns").image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(120),LingoNumber(120)),LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(120)),LingoGlobal.op_add(LingoNumber(1),LingoNumber(240)),LingoGlobal.op_mul(rnd,LingoNumber(120)),LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoNumber(240)),LingoNumber(120))),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)))))
                    mdpnt = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_add(qd[LingoNumber(1)],qd[LingoNumber(2)]),qd[LingoNumber(3)]),qd[LingoNumber(4)]),LingoNumber(4.0000))                    for tmp_r in LingoList(LingoList(LingoGlobal.point(-LingoNumber(1),-LingoNumber(1)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(-LingoNumber(0),-LingoNumber(1)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(-LingoNumber(1),-LingoNumber(0)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(LingoNumber(1),LingoNumber(1)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(1)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(1),LingoNumber(0)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(2),LingoNumber(2)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))):                         r = tmp_r                        _global.member(LingoGlobal.concat("layer",_global.str(_movieScript.restrict(dp,LingoNumber(0),LingoNumber(29))))).image.copypixels(img,LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(60),-LingoNumber(60),LingoNumber(60),LingoNumber(60)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(r[LingoNumber(1)],r[LingoNumber(1)])),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(120),LingoNumber(120)),LingoPropertyList(dict(ink = LingoNumber(36),color = r[LingoNumber(2)])))                    _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(_global.member("circularSigns").image,LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(60),-LingoNumber(60),LingoNumber(60),LingoNumber(60)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(120)),LingoGlobal.op_add(LingoNumber(1),LingoNumber(120)),LingoGlobal.op_mul(rnd,LingoNumber(120)),LingoGlobal.op_add(LingoNumber(1),LingoNumber(240))),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                    _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(_global.member("circularSigns").image,LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(60),-LingoNumber(60),LingoNumber(60),LingoNumber(60)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(120)),LingoNumber(1),LingoGlobal.op_mul(rnd,LingoNumber(120)),LingoGlobal.op_add(LingoNumber(1),LingoNumber(120))),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(255)))))
                    _movieScript.copypixelstoeffectcolor("A",dp,LingoGlobal.rect(LingoGlobal.op_add(mdpnt,LingoGlobal.point(-LingoNumber(60),-LingoNumber(60))),LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoNumber(60),LingoNumber(60)))),"circleSignGrad",LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(120),LingoNumber(121)),LingoNumber(0.5000),LingoNumber(1))                case "circular sign b":                    img = _global.image(LingoNumber(120),LingoNumber(120),LingoNumber(1))                    rnd = _global.random(LingoNumber(14))                    img.copypixels(_global.member("circularSigns").image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(120),LingoNumber(120)),LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(120)),LingoGlobal.op_add(LingoNumber(1),LingoNumber(240)),LingoGlobal.op_mul(rnd,LingoNumber(120)),LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoNumber(240)),LingoNumber(120))),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)))))
                    mdpnt = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_add(qd[LingoNumber(1)],qd[LingoNumber(2)]),qd[LingoNumber(3)]),qd[LingoNumber(4)]),LingoNumber(4.0000))                    for tmp_r in LingoList(LingoList(LingoGlobal.point(-LingoNumber(1),-LingoNumber(1)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(-LingoNumber(0),-LingoNumber(1)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(-LingoNumber(1),-LingoNumber(0)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(LingoNumber(1),LingoNumber(1)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(1)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(1),LingoNumber(0)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(2),LingoNumber(2)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))):                         r = tmp_r                        _global.member(LingoGlobal.concat("layer",_global.str(_movieScript.restrict(dp,LingoNumber(0),LingoNumber(29))))).image.copypixels(img,LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(60),-LingoNumber(60),LingoNumber(60),LingoNumber(60)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(r[LingoNumber(1)],r[LingoNumber(1)])),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(120),LingoNumber(120)),LingoPropertyList(dict(ink = LingoNumber(36),color = r[LingoNumber(2)])))                    _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(_global.member("circularSigns").image,LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(60),-LingoNumber(60),LingoNumber(60),LingoNumber(60)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(120)),LingoGlobal.op_add(LingoNumber(1),LingoNumber(120)),LingoGlobal.op_mul(rnd,LingoNumber(120)),LingoGlobal.op_add(LingoNumber(1),LingoNumber(240))),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                    _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(_global.member("circularSigns").image,LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(60),-LingoNumber(60),LingoNumber(60),LingoNumber(60)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(120)),LingoNumber(1),LingoGlobal.op_mul(rnd,LingoNumber(120)),LingoGlobal.op_add(LingoNumber(1),LingoNumber(120))),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(255)))))
                    _movieScript.copypixelstoeffectcolor("B",dp,LingoGlobal.rect(LingoGlobal.op_add(mdpnt,LingoGlobal.point(-LingoNumber(60),-LingoNumber(60))),LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoNumber(60),LingoNumber(60)))),"circleSignGrad",LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(120),LingoNumber(121)),LingoNumber(0.5000),LingoNumber(1))                case "circular sign off":                    img = _global.image(LingoNumber(120),LingoNumber(120),LingoNumber(1))                    rnd = _global.random(LingoNumber(14))                    img.copypixels(_global.member("circularSigns").image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(120),LingoNumber(120)),LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(120)),LingoGlobal.op_add(LingoNumber(1),LingoNumber(240)),LingoGlobal.op_mul(rnd,LingoNumber(120)),LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoNumber(240)),LingoNumber(120))),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)))))
                    mdpnt = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_add(qd[LingoNumber(1)],qd[LingoNumber(2)]),qd[LingoNumber(3)]),qd[LingoNumber(4)]),LingoNumber(4.0000))                    for tmp_r in LingoList(LingoList(LingoGlobal.point(-LingoNumber(1),-LingoNumber(1)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(-LingoNumber(0),-LingoNumber(1)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(-LingoNumber(1),-LingoNumber(0)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(LingoNumber(1),LingoNumber(1)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(1)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(1),LingoNumber(0)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(2),LingoNumber(2)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))):                         r = tmp_r                        _global.member(LingoGlobal.concat("layer",_global.str(_movieScript.restrict(dp,LingoNumber(0),LingoNumber(29))))).image.copypixels(img,LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(60),-LingoNumber(60),LingoNumber(60),LingoNumber(60)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(r[LingoNumber(1)],r[LingoNumber(1)])),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(120),LingoNumber(120)),LingoPropertyList(dict(ink = LingoNumber(36),color = r[LingoNumber(2)])))                    _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(_global.member("circularSigns").image,LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(60),-LingoNumber(60),LingoNumber(60),LingoNumber(60)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(120)),LingoGlobal.op_add(LingoNumber(1),LingoNumber(120)),LingoGlobal.op_mul(rnd,LingoNumber(120)),LingoGlobal.op_add(LingoNumber(1),LingoNumber(240))),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))))
                    _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(_global.member("circularSigns").image,LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(60),-LingoNumber(60),LingoNumber(60),LingoNumber(60)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(120)),LingoNumber(1),LingoGlobal.op_mul(rnd,LingoNumber(120)),LingoGlobal.op_add(LingoNumber(1),LingoNumber(120))),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)))))                case "larger sign":                    img = _global.image(LingoGlobal.op_add(LingoNumber(80),LingoNumber(6)),LingoGlobal.op_add(LingoNumber(100),LingoNumber(6)),LingoNumber(1))                    rnd = _global.random(LingoNumber(14))                    rct = LingoGlobal.rect(LingoNumber(3),LingoNumber(3),LingoNumber(83),LingoNumber(103))                    img.copypixels(_global.member("largerSigns").image,rct,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(80)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(80)),LingoNumber(100)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)))))
                    mdpnt = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_add(qd[LingoNumber(1)],qd[LingoNumber(2)]),qd[LingoNumber(3)]),qd[LingoNumber(4)]),LingoNumber(4.0000))                    for tmp_r in LingoList(LingoList(LingoGlobal.point(-LingoNumber(4),-LingoNumber(4)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(-LingoNumber(3),-LingoNumber(3)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(LingoNumber(3),LingoNumber(3)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(4),LingoNumber(4)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))),LingoList(LingoGlobal.point(-LingoNumber(1),-LingoNumber(1)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(1),LingoNumber(1)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(2),LingoNumber(2)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(2),LingoNumber(2)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))):                         r = tmp_r                        for tmp_d in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(1)):                             d = tmp_d                            _global.member(LingoGlobal.concat("layer",_global.str(_movieScript.restrict(LingoGlobal.op_add(dp,d),LingoNumber(0),LingoNumber(29))))).image.copypixels(img,LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(43),-LingoNumber(53),LingoNumber(43),LingoNumber(53)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(r[LingoNumber(1)],r[LingoNumber(1)])),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(86),LingoNumber(106)),LingoPropertyList(dict(ink = LingoNumber(36),color = r[LingoNumber(2)])))
                            tmp_d = d                                                                        _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(img,LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(43),-LingoNumber(53),LingoNumber(43),LingoNumber(53)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(86),LingoNumber(106)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))))
                    _global.member(LingoGlobal.concat("layer",_global.str(_movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(1)),LingoNumber(0),LingoNumber(29))))).image.copypixels(img,LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(43),-LingoNumber(53),LingoNumber(43),LingoNumber(53)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(86),LingoNumber(106)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(255)))))
                    _global.member("largeSignGrad2").image.copypixels(_global.member("largeSignGrad").image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(80),LingoNumber(100)),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(80),LingoNumber(100)))
                    for tmp_a in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(6)):                         a = tmp_a                        for tmp_b in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(13)):                             b = tmp_b                            rct = LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_mul(a,LingoNumber(16)),LingoNumber(6)),LingoGlobal.op_sub(LingoGlobal.op_mul(b,LingoNumber(8)),LingoNumber(1)),LingoGlobal.op_sub(LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(16)),LingoNumber(6)),LingoGlobal.op_sub(LingoGlobal.op_mul(LingoGlobal.op_add(b,LingoNumber(1)),LingoNumber(8)),LingoNumber(1)))                            if LingoGlobal.op_eq_b(_global.random(LingoNumber(7)), LingoNumber(1)):                                 blnd = _global.random(_global.random(LingoNumber(100)))                                _global.member("largeSignGrad2").image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),blend = LingoGlobal.op_div(blnd,LingoNumber(2)))))
                                _global.member("largeSignGrad2").image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoNumber(0),LingoNumber(0))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),blend = LingoGlobal.op_div(blnd,LingoNumber(2)))))                            elif LingoGlobal.op_eq_b(_global.random(LingoNumber(7)), LingoNumber(1)):                                 _global.member("largeSignGrad2").image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoNumber(0),LingoNumber(0))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)),blend = _global.random(_global.random(LingoNumber(60))))))                            _global.member("largeSignGrad2").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(rct.left,rct.top,rct.right,LingoGlobal.op_add(rct.top,LingoNumber(1))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),blend = LingoNumber(20))))
                            _global.member("largeSignGrad2").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(rct.left,LingoGlobal.op_add(rct.top,LingoNumber(1)),LingoGlobal.op_add(rct.left,LingoNumber(1)),rct.bottom),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),blend = LingoNumber(20))))
                            tmp_b = b                                                    tmp_a = a                                            _movieScript.copypixelstoeffectcolor("A",_movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(1)),LingoNumber(0),LingoNumber(29)),LingoGlobal.rect(LingoGlobal.op_add(mdpnt,LingoGlobal.point(-LingoNumber(43),-LingoNumber(53))),LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoNumber(43),LingoNumber(53)))),"largeSignGrad2",LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(86),LingoNumber(106)),LingoNumber(1),LingoNumber(1.0000))                case "larger sign b":                    img = _global.image(LingoGlobal.op_add(LingoNumber(80),LingoNumber(6)),LingoGlobal.op_add(LingoNumber(100),LingoNumber(6)),LingoNumber(1))                    rnd = _global.random(LingoNumber(14))                    rct = LingoGlobal.rect(LingoNumber(3),LingoNumber(3),LingoNumber(83),LingoNumber(103))                    img.copypixels(_global.member("largerSigns").image,rct,LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(rnd,LingoNumber(1)),LingoNumber(80)),LingoNumber(0),LingoGlobal.op_mul(rnd,LingoNumber(80)),LingoNumber(100)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)))))
                    mdpnt = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_add(qd[LingoNumber(1)],qd[LingoNumber(2)]),qd[LingoNumber(3)]),qd[LingoNumber(4)]),LingoNumber(4.0000))                    for tmp_r in LingoList(LingoList(LingoGlobal.point(-LingoNumber(4),-LingoNumber(4)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(-LingoNumber(3),-LingoNumber(3)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))),LingoList(LingoGlobal.point(LingoNumber(3),LingoNumber(3)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(4),LingoNumber(4)),_global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))),LingoList(LingoGlobal.point(-LingoNumber(2),-LingoNumber(2)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))),LingoList(LingoGlobal.point(-LingoNumber(1),-LingoNumber(1)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(1),LingoNumber(1)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(2),LingoNumber(2)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))),LingoList(LingoGlobal.point(LingoNumber(2),LingoNumber(2)),_global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)))):                         r = tmp_r                        for tmp_d in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(1)):                             d = tmp_d                            _global.member(LingoGlobal.concat("layer",_global.str(_movieScript.restrict(LingoGlobal.op_add(dp,d),LingoNumber(0),LingoNumber(29))))).image.copypixels(img,LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(43),-LingoNumber(53),LingoNumber(43),LingoNumber(53)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(r[LingoNumber(1)],r[LingoNumber(1)])),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(86),LingoNumber(106)),LingoPropertyList(dict(ink = LingoNumber(36),color = r[LingoNumber(2)])))
                            tmp_d = d                                                                        _global.member(LingoGlobal.concat("layer",_global.str(dp))).image.copypixels(img,LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(43),-LingoNumber(53),LingoNumber(43),LingoNumber(53)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(86),LingoNumber(106)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))))
                    _global.member(LingoGlobal.concat("layer",_global.str(_movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(1)),LingoNumber(0),LingoNumber(29))))).image.copypixels(img,LingoGlobal.op_add(LingoGlobal.rect(-LingoNumber(43),-LingoNumber(53),LingoNumber(43),LingoNumber(53)),LingoGlobal.rect(mdpnt,mdpnt)),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(86),LingoNumber(106)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(255)))))
                    _global.member("largeSignGrad2").image.copypixels(_global.member("largeSignGrad").image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(80),LingoNumber(100)),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(80),LingoNumber(100)))
                    for tmp_a in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(6)):                         a = tmp_a                        for tmp_b in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(13)):                             b = tmp_b                            rct = LingoGlobal.rect(LingoGlobal.op_sub(LingoGlobal.op_mul(a,LingoNumber(16)),LingoNumber(6)),LingoGlobal.op_sub(LingoGlobal.op_mul(b,LingoNumber(8)),LingoNumber(1)),LingoGlobal.op_sub(LingoGlobal.op_mul(LingoGlobal.op_add(a,LingoNumber(1)),LingoNumber(16)),LingoNumber(6)),LingoGlobal.op_sub(LingoGlobal.op_mul(LingoGlobal.op_add(b,LingoNumber(1)),LingoNumber(8)),LingoNumber(1)))                            if LingoGlobal.op_eq_b(_global.random(LingoNumber(7)), LingoNumber(1)):                                 blnd = _global.random(_global.random(LingoNumber(100)))                                _global.member("largeSignGrad2").image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),blend = LingoGlobal.op_div(blnd,LingoNumber(2)))))
                                _global.member("largeSignGrad2").image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoNumber(0),LingoNumber(0))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),blend = LingoGlobal.op_div(blnd,LingoNumber(2)))))                            elif LingoGlobal.op_eq_b(_global.random(LingoNumber(7)), LingoNumber(1)):                                 _global.member("largeSignGrad2").image.copypixels(LingoImage.Pxl,LingoGlobal.op_add(rct,LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoNumber(0),LingoNumber(0))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)),blend = _global.random(_global.random(LingoNumber(60))))))                            _global.member("largeSignGrad2").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(rct.left,rct.top,rct.right,LingoGlobal.op_add(rct.top,LingoNumber(1))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),blend = LingoNumber(20))))
                            _global.member("largeSignGrad2").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(rct.left,LingoGlobal.op_add(rct.top,LingoNumber(1)),LingoGlobal.op_add(rct.left,LingoNumber(1)),rct.bottom),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),blend = LingoNumber(20))))
                            tmp_b = b                                                    tmp_a = a                                            _movieScript.copypixelstoeffectcolor("B",_movieScript.restrict(LingoGlobal.op_add(dp,LingoNumber(1)),LingoNumber(0),LingoNumber(29)),LingoGlobal.rect(LingoGlobal.op_add(mdpnt,LingoGlobal.point(-LingoNumber(43),-LingoNumber(53))),LingoGlobal.op_add(mdpnt,LingoGlobal.point(LingoNumber(43),LingoNumber(53)))),"largeSignGrad2",LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(86),LingoNumber(106)),LingoNumber(1),LingoNumber(1.0000))                            tmp_i = i                            return None            