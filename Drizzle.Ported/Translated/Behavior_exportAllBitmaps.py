from Drizzle.Runtime import *## Behavior script: exportAllBitmaps#class exportAllBitmaps(LingoBehaviorScript):     def __init__(self):         super().__init__()            def saveimages(self, savepath):         retval = None        imgobj = None        m = None        i = None        fname = None        ixerr = None        imgxtra = None        retval = LingoNumber(1)        if (not LingoGlobal.ToBool(LingoGlobal.strp(savepath)) and not LingoGlobal.ToBool(LingoGlobal.contains(savepath,_global.the_dirSeparator))):             retval = -LingoNumber(1)            return retval                    elif LingoGlobal.ToBool(LingoGlobal.last_char(LingoGlobal.op_ne(savepath,_global.the_dirSeparator))):             savepath = LingoGlobal.concat(savepath,_global.the_dirSeparator)                    imgobj = _global.xtra("ImgXtra").new()        m = _global.castlib(LingoNumber(4)).member.count        for tmp_i in LingoGlobal.pyrange(LingoNumber(1), m):             i = tmp_i            if LingoGlobal.op_eq_b(_global.member(i,LingoNumber(4)).type, bitmap):                 fname = LingoGlobal.concat(_global.member(i,LingoNumber(4)).name,".bmp")                if LingoGlobal.op_eq_b(fname, ".bmp"):                     fname = LingoGlobal.concat("member_",i,".bmp")                                    _global.put(LingoGlobal.concat("savePath: ",savepath,fname))
                ixerr = imgobj.ix_saveimage(LingoPropertyList(dict("image" = _global.member(i,LingoNumber(4)).image,"filename" = LingoGlobal.concat(savepath,fname),"format" = "BMP")))                if LingoGlobal.op_eq_b(ixerr, LingoNumber(0)):                     retval = -LingoNumber(2)                                                tmp_i = i                    imgxtra = LingoNumber(0)        return retval                    