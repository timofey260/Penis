from Drizzle.Runtime import *## Behavior script: renderPropsStart#class renderPropsStart(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         q = None        val = None        a = None        if ((LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(56))) and LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(48)))) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             _global._player.appminimize()        if LingoGlobal.ToBool(_movieScript.checkexit()):             _global._player.quit()        if LingoGlobal.ToBool(_movieScript.checkexitrender()):             _global._movie.go(LingoNumber(9))        _movieScript.c = LingoNumber(1)        _movieScript.keepLooping = LingoNumber(1)        _movieScript.gLastImported = ""        _movieScript.gCurrentlyRenderingTrash = LingoGlobal.FALSE        if (_movieScript.gRenderTrashProps.count > LingoNumber(0) and LingoGlobal.op_eq_b(_movieScript.afterEffects, LingoNumber(0))):             _movieScript.gCurrentlyRenderingTrash = LingoGlobal.TRUE                    for tmp_q in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(29)):             q = tmp_q            _global.sprite(LingoGlobal.op_sub(LingoNumber(50),q)).loc = LingoGlobal.point(LingoGlobal.op_sub(LingoGlobal.op_div(LingoNumber(1366),LingoNumber(2)),q),LingoGlobal.op_sub(LingoGlobal.op_div(LingoNumber(768),LingoNumber(2)),q))            val = LingoGlobal.op_div(LingoGlobal.op_add(q.float,LingoNumber(1.0000)),LingoNumber(30.0000))            _global.sprite(LingoGlobal.op_sub(LingoNumber(50),q)).color = _global.color(LingoGlobal.op_mul(val,LingoNumber(255)),LingoGlobal.op_mul(val,LingoNumber(255)),LingoGlobal.op_mul(val,LingoNumber(255)))            tmp_q = q                    _movieScript.propsToRender = LingoList()        for tmp_a in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gPEprops.props.count):             a = tmp_a            _movieScript.propsToRender.add(_movieScript.gPEprops.props[a])
            _movieScript.propsToRender[_movieScript.propsToRender.count].addat(LingoNumber(1),_movieScript.propsToRender[_movieScript.propsToRender.count][LingoNumber(5)].settings.renderorder)
            tmp_a = a                    _movieScript.propsToRender.sort()
        for tmp_a in LingoGlobal.pyrange(LingoNumber(1), _movieScript.propsToRender.count):             a = tmp_a            _movieScript.propsToRender[a].deleteat(LingoNumber(1))
            tmp_a = a                    _movieScript.softProp = LingoGlobal.VOID                return None            