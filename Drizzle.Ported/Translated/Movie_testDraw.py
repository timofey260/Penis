from Drizzle.Runtime import *## Movie script: testDraw#class MovieScript:     def __init__(self):         super().__init__()            def drawtestlevel(self):         img = None        q = None        c = None        rct = None        img = self._global.image(LingoNumber(1040),LingoNumber(800),LingoNumber(16))        self._global.member("finalbg").image = self.drawtestlevellayer(img,LingoNumber(3),self._global.color(LingoNumber(150),LingoNumber(150),LingoNumber(150)))        self._global.member("finalbg").image.copypixels(self.drawtestlevellayer(img,LingoNumber(2),self._global.color(LingoNumber(100),LingoNumber(100),LingoNumber(100))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1040),LingoNumber(800)),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1040),LingoNumber(800)),LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))
        img = self._global.image(LingoNumber(1040),LingoNumber(800),LingoNumber(16))        self._global.member("finalfg").image = self.drawtestlevellayer(img,LingoNumber(1),self._global.color(LingoNumber(50),LingoNumber(50),LingoNumber(50)))        self._global.member("finalbgLight").image = self._global.image(LingoNumber(1040),LingoNumber(800),LingoNumber(16))        self._global.member("finalfgLight").image = self._global.image(LingoNumber(1040),LingoNumber(800),LingoNumber(16))        tmp_q=int(LingoNumber(1))        while tmp_q < self.gLOprops.size.loch:             q = tmp_q            tmp_c=int(LingoNumber(1))            while tmp_c < self.gLOprops.size.locv:                 c = tmp_c                if self.gLEProps.matrix[q][c][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(5)) > LingoNumber(0):                     rct = self.givemiddleoftile(LingoGlobal.point(q,c))                    rct = LingoGlobal.op_add(LingoGlobal.rect(rct,rct),LingoGlobal.rect(-LingoNumber(1),-LingoNumber(1),LingoNumber(2),LingoNumber(2)))                    if LingoGlobal.op_eq_b(self.gLEProps.matrix[q][c][LingoNumber(1)][LingoNumber(1)], LingoNumber(1)):                         self._global.member("finalfg").image.copypixels(LingoImage.Pxl,rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0))))                    elif LingoGlobal.op_eq_b(self.gLEProps.matrix[q][c][LingoNumber(2)][LingoNumber(1)], LingoNumber(1)):                         self._global.member("finalbg").image.copypixels(LingoImage.Pxl,rct,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(70),LingoNumber(70),LingoNumber(70))))                                    tmp_c = c                tmp_c += 1                            tmp_q = q            tmp_q += 1                    self.gSkyColor = self._global.color(LingoNumber(170),LingoNumber(170),LingoNumber(170))                return None            def drawtestlevellayer(self, img, layer, col):         drwrect = None        q = None        c = None        rct = None        t = None        any = None        drwrect = LingoGlobal.rect(LingoNumber(1),LingoNumber(1),self.gLOprops.size.loch,self.gLOprops.size.locv)        tmp_q=int(drwrect.left)        while tmp_q < drwrect.right:             q = tmp_q            tmp_c=int(drwrect.top)            while tmp_c < drwrect.bottom:                 c = tmp_c                if LingoGlobal.ToBool(LingoGlobal.point(q,c).inside(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),LingoGlobal.op_add(self.gLOprops.size.loch,LingoNumber(1)),LingoGlobal.op_add(self.gLOprops.size.locv,LingoNumber(1))))):                     rct = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20)))                    img.copypixels(LingoImage.Pxl,rct,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))))
                    for tmp_t in self.gLEProps.matrix[q][c][layer][LingoNumber(2)]:                         t = tmp_t                        match t if value is not None else 9999999999:                             case 1:                                rct = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(8),LingoNumber(0),-LingoNumber(8)))                                img.copypixels(LingoImage.Pxl,rct,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), col))                            case 2:                                rct = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20))),LingoGlobal.rect(LingoNumber(8),LingoNumber(0),-LingoNumber(8),LingoNumber(0)))                                img.copypixels(LingoImage.Pxl,rct,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), col))                            case 3:                                rct = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(6),LingoNumber(0),-LingoNumber(6)))                                img.copypixels(self._global.member("hiveGrass").image,rct,self._global.member("hiveGrass").image.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(100),LingoNumber(100),LingoNumber(100))))                                                                        match self.gLEProps.matrix[q][c][layer][LingoNumber(1)] if value is not None else 9999999999:                         case 0:                            rct = LingoGlobal.rect(-LingoNumber(1),-LingoNumber(1),-LingoNumber(1),-LingoNumber(1))                                                    case 1:                            rct = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20)))                                                    case 2:                            rct = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20)))                            rct = LingoList(LingoGlobal.point(rct.left,rct.top),LingoGlobal.point(rct.left,rct.top),LingoGlobal.point(rct.right,rct.bottom),LingoGlobal.point(rct.left,rct.bottom))                                                    case 3:                            rct = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20)))                            rct = LingoList(LingoGlobal.point(rct.right,rct.top),LingoGlobal.point(rct.right,rct.top),LingoGlobal.point(rct.left,rct.bottom),LingoGlobal.point(rct.right,rct.bottom))                                                    case 4:                            rct = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20)))                            rct = LingoList(LingoGlobal.point(rct.left,rct.bottom),LingoGlobal.point(rct.left,rct.bottom),LingoGlobal.point(rct.right,rct.top),LingoGlobal.point(rct.left,rct.top))                                                    case 5:                            rct = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20)))                            rct = LingoList(LingoGlobal.point(rct.right,rct.bottom),LingoGlobal.point(rct.right,rct.bottom),LingoGlobal.point(rct.left,rct.top),LingoGlobal.point(rct.right,rct.top))                                                    case 6:                            rct = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_sub(LingoGlobal.op_mul(c,LingoNumber(20)),LingoNumber(10)))                                                    case 7 | 9:                            rct = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20)))                            img.copypixels(self._global.member("semiTransperent").image,rct,self._global.member("semiTransperent").image.rect,LingoPropertyList(LingoSymbol("color"), col))
                            rct = LingoGlobal.rect(-LingoNumber(1),-LingoNumber(1),-LingoNumber(1),-LingoNumber(1))                                                                        img.copypixels(LingoImage.Pxl,rct,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), col))
                    if (LingoGlobal.op_eq_b(self.gLEProps.matrix[q][c][layer][LingoNumber(1)], LingoNumber(1)) and LingoGlobal.ToBool(self.gLEProps.matrix[q][c][layer][LingoNumber(2)].getpos(LingoNumber(11)))):                         any = LingoNumber(0)                        if (LingoGlobal.ToBool(self.checktileifcrackopen(LingoGlobal.op_add(LingoGlobal.point(q,c),LingoGlobal.point(-LingoNumber(1),LingoNumber(0))),layer)) or LingoGlobal.ToBool(self.checktileifcrackopen(LingoGlobal.op_add(LingoGlobal.point(q,c),LingoGlobal.point(LingoNumber(1),LingoNumber(0))),layer))):                             rct = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(4),LingoNumber(0),-LingoNumber(4)))                            img.copypixels(LingoImage.Pxl,rct,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))))
                            any = LingoNumber(1)                                                    if (LingoGlobal.ToBool(self.checktileifcrackopen(LingoGlobal.op_add(LingoGlobal.point(q,c),LingoGlobal.point(LingoNumber(0),-LingoNumber(1))),layer)) or LingoGlobal.ToBool(self.checktileifcrackopen(LingoGlobal.op_add(LingoGlobal.point(q,c),LingoGlobal.point(LingoNumber(0),LingoNumber(1))),layer))):                             rct = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20))),LingoGlobal.rect(LingoNumber(4),LingoNumber(0),-LingoNumber(4),LingoNumber(0)))                            img.copypixels(LingoImage.Pxl,rct,LingoImage.Pxl.rect,LingoPropertyList(LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))))
                            any = LingoNumber(1)                                                    if LingoGlobal.op_eq_b(any, LingoNumber(0)):                             rct = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20)))                            img.copypixels(self._global.member("spearIcon").image,rct,self._global.member("spearIcon").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36),LingoSymbol("color"), self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))))                        else:                            rct = LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_sub(q,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_sub(c,LingoNumber(1)),LingoNumber(20)),LingoGlobal.op_mul(q,LingoNumber(20)),LingoGlobal.op_mul(c,LingoNumber(20)))                            img.copypixels(self._global.member("semiTransperent").image,rct,self._global.member("semiTransperent").image.rect,LingoPropertyList(LingoSymbol("ink"), LingoNumber(36)))                                                            tmp_c = c                tmp_c += 1                            tmp_q = q            tmp_q += 1                    return img                    