from Drizzle.Runtime import *## Behavior script: renderLightStart#class renderLightStart(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         layer = None        q = None        tp = None        grss = None        lr = None        cols = None        rows = None        marginpixels = None        l = None        inversedlightimage = None        q2 = None        if ((LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(56))) and LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(48)))) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             _global._player.appminimize()        if LingoGlobal.ToBool(_movieScript.checkexit()):             _global._player.quit()        if LingoGlobal.ToBool(_movieScript.checkexitrender()):             _global._movie.go(LingoNumber(9))        _global.the_randomSeed = _movieScript.gLOprops.tileseed        _global.member("layer0dc").image.copypixels(_global.member("blackOutImg2").image,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(LingoNumber(100),LingoNumber(20)),LingoGlobal.op_mul(LingoNumber(60),LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(LingoNumber(100),LingoNumber(20)),LingoGlobal.op_mul(LingoNumber(60),LingoNumber(20))),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))))
        for tmp_layer in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(3)):             layer = tmp_layer            for tmp_q in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gLOprops.size.loch):                 q = tmp_q                for tmp_c in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gLOprops.size.locv):                     _movieScript.c = tmp_c                    if ((_movieScript.gLEProps.matrix[q][_movieScript.c][layer][LingoNumber(2)].getpos(LingoNumber(3)) > LingoNumber(0) and LingoGlobal.op_eq_b(_movieScript.afamvlvledit(LingoGlobal.point(q,_movieScript.c),layer), LingoNumber(0))) and LingoGlobal.op_eq_b(_movieScript.afamvlvledit(LingoGlobal.point(q,LingoGlobal.op_add(_movieScript.c,LingoNumber(1))),layer), LingoNumber(1))):                         for tmp_tp in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(2)):                             tp = tmp_tp                            for tmp_grss in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(6)):                                 grss = tmp_grss                                lr = LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(layer,LingoNumber(1)),LingoNumber(10)),_global.random(LingoNumber(9)))                                _movieScript.pos = LingoGlobal.op_add(_movieScript.givemiddleoftile(LingoGlobal.op_sub(LingoGlobal.point(q,_movieScript.c),_movieScript.gRenderCameraTilePos)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(10),_global.random(LingoNumber(20))),LingoNumber(0)))                                if (LingoGlobal.op_eq_b(tp, LingoNumber(2)) and LingoGlobal.op_eq_b(layer, LingoNumber(1))):                                     _global.member(LingoGlobal.concat("layer",_global.str(lr))).image.copypixels(_global.member("hiveGrassGraf").image,LingoGlobal.op_add(LingoGlobal.rect(_movieScript.pos,_movieScript.pos),LingoGlobal.rect(-LingoNumber(2),LingoGlobal.op_sub(LingoGlobal.op_sub(_global.random(LingoNumber(5)),_global.random(LingoNumber(10))),_global.random(_global.random(LingoNumber(14)))),LingoNumber(3),LingoNumber(10))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(5),LingoNumber(29)),LingoPropertyList(dict(ink = LingoNumber(36))))                                else:                                    _global.member(LingoGlobal.concat("layer",_global.str(lr))).image.copypixels(_global.member("hiveGrassGraf2").image,LingoGlobal.op_add(LingoGlobal.rect(_movieScript.pos,_movieScript.pos),LingoGlobal.rect(-LingoNumber(2),LingoGlobal.op_sub(LingoGlobal.op_sub(_global.random(LingoNumber(5)),_global.random(LingoNumber(10))),_global.random(_global.random(LingoNumber(14)))),LingoNumber(3),LingoNumber(10))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(5),LingoNumber(29)),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)))))                                tmp_grss = grss                                                            tmp_tp = tp                                                                        tmp_c = _movieScript.c                                    tmp_q = q                            tmp_layer = layer                    cols = LingoNumber(100)        rows = LingoNumber(60)        marginpixels = LingoNumber(150)        if LingoGlobal.ToBool(_movieScript.gAnyDecals):             for tmp_l in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(29)):                 l = tmp_l                self.quadifymember(LingoGlobal.concat("layer",_global.str(l),"dc"),LingoGlobal.op_mul(LingoGlobal.op_sub(l,LingoNumber(5)),LingoNumber(1.5000)))
                tmp_l = l                                    for tmp_l in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(29)):             l = tmp_l            self.quadifymember(LingoGlobal.concat("layer",_global.str(l)),LingoGlobal.op_mul(LingoGlobal.op_sub(l,LingoNumber(5)),LingoNumber(1.5000)))
            _global.member(LingoGlobal.concat("layer",l,"sh")).image = _global.image(LingoGlobal.op_add(LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(marginpixels,LingoNumber(2))),LingoGlobal.op_add(LingoGlobal.op_mul(rows,LingoNumber(20)),LingoGlobal.op_mul(marginpixels,LingoNumber(2))),LingoNumber(1))            self.quadifymember(LingoGlobal.concat("gradientA",_global.str(l)),LingoGlobal.op_mul(LingoGlobal.op_sub(l,LingoNumber(5)),LingoNumber(1.5000)))
            self.quadifymember(LingoGlobal.concat("gradientB",_global.str(l)),LingoGlobal.op_mul(LingoGlobal.op_sub(l,LingoNumber(5)),LingoNumber(1.5000)))
            tmp_l = l                    _global.member("activeLightImage").image = _global.image(LingoGlobal.op_add(LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(marginpixels,LingoNumber(2))),LingoGlobal.op_add(LingoGlobal.op_mul(rows,LingoNumber(20)),LingoGlobal.op_mul(marginpixels,LingoNumber(2))),LingoNumber(1))        _global.member("activeLightImage").image.setpixel(LingoNumber(0),LingoNumber(0),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)))
        _global.member("activeLightImage").image.setpixel(LingoGlobal.op_sub(_global.member("activeLightImage").image.rect.right,LingoNumber(1)),LingoGlobal.op_sub(_global.member("activeLightImage").image.rect.bottom,LingoNumber(1)),_global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0)))
        inversedlightimage = _movieScript.makesilhouttefromimg(_global.member("lightImage").image,LingoNumber(1))        _global.member("activeLightImage").image.copypixels(inversedlightimage,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_add(LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(marginpixels,LingoNumber(2))),LingoGlobal.op_add(LingoGlobal.op_mul(rows,LingoNumber(20)),LingoGlobal.op_mul(marginpixels,LingoNumber(2)))),LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(LingoGlobal.op_add(LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(marginpixels,LingoNumber(2))),LingoGlobal.op_add(LingoGlobal.op_mul(rows,LingoNumber(20)),LingoGlobal.op_mul(marginpixels,LingoNumber(2))))),LingoGlobal.rect(LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)),LingoGlobal.op_mul(_movieScript.gRenderCameraTilePos,LingoNumber(20)))),LingoGlobal.rect(LingoNumber(150),LingoNumber(150),LingoNumber(150),LingoNumber(150))))
        _global.member("activeLightImage").image.copypixels(_global.member("blackOutImg2").image,LingoGlobal.op_add(LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(rows,LingoNumber(20))),LingoGlobal.rect(marginpixels,marginpixels,marginpixels,marginpixels)),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(cols,LingoNumber(20)),LingoGlobal.op_mul(rows,LingoNumber(20))),LingoPropertyList(dict(ink = LingoNumber(36),color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))))
        _movieScript.c = LingoNumber(0)        _movieScript.keepLooping = LingoNumber(1)        _movieScript.pos = LingoGlobal.point(LingoNumber(0),LingoNumber(0))        _movieScript.tm = _global._system.milliseconds        for tmp_q2 in LingoGlobal.pyrange(LingoNumber(0), LingoNumber(29)):             q2 = tmp_q2            _global.sprite(LingoGlobal.op_sub(LingoNumber(50),q2)).loc = LingoGlobal.point(LingoGlobal.op_sub(LingoGlobal.op_div(LingoNumber(1366),LingoNumber(2)),q2),LingoGlobal.op_sub(LingoGlobal.op_div(LingoNumber(768),LingoNumber(2)),q2))            tmp_q2 = q2                    if LingoGlobal.op_eq_b(_movieScript.gLOprops.light, LingoNumber(0)):             _global._movie.go(LingoNumber(66))                return None            def quadifymember(self, mem, fac):         newimg = None        qd = None        q = None        newimg = _global.member(mem).image.duplicate()        qd = LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(newimg.width,LingoNumber(0)),LingoGlobal.point(newimg.width,newimg.height),LingoGlobal.point(LingoNumber(0),newimg.height))        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(4)):             q = tmp_q            qd[q] = LingoGlobal.op_add(qd[q],LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(_movieScript.degtovec(_movieScript.gCameraProps.quads[_movieScript.gCurrentRenderCamera][q][LingoNumber(1)]),_movieScript.gCameraProps.quads[_movieScript.gCurrentRenderCamera][q][LingoNumber(2)]),fac),LingoNumber(2.5000)))            tmp_q = q                    _global.member(mem).image.copypixels(newimg,qd,newimg.rect)        return None            