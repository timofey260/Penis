from Drizzle.Runtime import *## Behavior script: propEditor#class propEditor(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         q = None        l = None        stretchspeed = None        actn1 = None        actn2 = None        mn = None        dir = None        perp = None        prop = None        lastclosest = None        qd = None        offsetpnt = None        var = None        mem = None        scalefac = None        viewrope = None        ropeframes = None        if LingoGlobal.ToBool(_movieScript.showControls):             _global.sprite(LingoNumber(261)).blend = LingoNumber(100)                    else:            _global.sprite(LingoNumber(261)).blend = LingoNumber(0)                    _global.script("levelOverview").exitframe(self)
        _movieScript.lastPeMouse = _movieScript.peMousePos        _movieScript.gPEblink = LingoGlobal.op_add(_movieScript.gPEblink,LingoNumber(1))        if _movieScript.gPEblink > LingoNumber(800):             _movieScript.gPEblink = LingoNumber(0)                    if _movieScript.gPEcounter > LingoNumber(0):             _movieScript.gPEcounter = LingoGlobal.op_sub(_movieScript.gPEcounter,LingoNumber(1))                    if _movieScript.editSettingsProp < LingoNumber(0):             _global.member("propMenu").alignment = left                    else:            _global.member("propMenu").alignment = center                    if ((LingoGlobal.op_eq_b(self.isdecal(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv]), LingoNumber(0)) and self.propplacelayer() <= LingoNumber(5)) and LingoGlobal.op_add(self.propplacelayer(),_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv].depth) >= LingoNumber(6)):             _global.member("Prop editor warning text").text = "WARNING - this prop will intersect with the play layer!"            if _movieScript.gPEblink < LingoNumber(600):                 _global.sprite(LingoNumber(267)).visibility = LingoGlobal.TRUE                            else:                _global.sprite(LingoNumber(267)).visibility = LingoGlobal.FALSE                            if LingoGlobal.op_eq_b(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv].tp, "antimatter"):                 _global.member("Prop editor warning text").text = "Antimatter prop intersecting play layer - remember to use a restore effect on affected play relevant terrain"                _global.sprite(LingoNumber(266)).color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                _global.sprite(LingoNumber(267)).color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                            else:                _global.member("Prop editor warning text").text = "WARNING - this prop will intersect with the play layer!"                _global.sprite(LingoNumber(266)).color = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))                _global.sprite(LingoNumber(267)).color = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))                                    else:            _global.sprite(LingoNumber(267)).visibility = LingoGlobal.FALSE            _global.sprite(LingoNumber(266)).color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                    for tmp_q in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(4)):             q = tmp_q            if ((LingoGlobal.ToBool(_global._key.keypressed(LingoList(LingoNumber(86),LingoNumber(91),LingoNumber(88),LingoNumber(84))[q])) and LingoGlobal.op_eq_b(_movieScript.gDirectionKeys[q], LingoNumber(0))) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.gLEProps.campos = LingoGlobal.op_add(_movieScript.gLEProps.campos,LingoGlobal.op_mul(LingoList(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),-LingoNumber(1)),LingoGlobal.point(LingoNumber(1),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),LingoNumber(1)))[q],LingoGlobal.op_add(LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_mul(LingoNumber(9),_global._key.keypressed(LingoNumber(83)))),LingoGlobal.op_mul(LingoNumber(34),_global._key.keypressed(LingoNumber(85))))))                if not LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(92))):                     if _movieScript.gLEProps.campos.loch < -LingoNumber(1):                         _movieScript.gLEProps.campos.loch = -LingoNumber(1)                                            if _movieScript.gLEProps.campos.locv < -LingoNumber(1):                         _movieScript.gLEProps.campos.locv = -LingoNumber(1)                                            if _movieScript.gLEProps.campos.loch > LingoGlobal.op_sub(_movieScript.gLEProps.matrix.count,LingoNumber(51)):                         _movieScript.gLEProps.campos.loch = LingoGlobal.op_sub(_movieScript.gLEProps.matrix.count,LingoNumber(51))                                            if _movieScript.gLEProps.campos.locv > LingoGlobal.op_sub(_movieScript.gLEProps.matrix[LingoNumber(1)].count,LingoNumber(39)):                         _movieScript.gLEProps.campos.locv = LingoGlobal.op_sub(_movieScript.gLEProps.matrix[LingoNumber(1)].count,LingoNumber(39))                                                            for tmp_l in LingoGlobal.pyrange(LingoNumber(1), LingoNumber(3)):                     l = tmp_l                    _movieScript.lvleditdraw(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),_movieScript.gLOprops.size.loch,_movieScript.gLOprops.size.locv),l)
                    _movieScript.tedraw(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),_movieScript.gLOprops.size.loch,_movieScript.gLOprops.size.locv),l)
                    tmp_l = l                                    _movieScript.drawshortcutsimg(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),_movieScript.gLOprops.size.loch,_movieScript.gLOprops.size.locv),LingoNumber(16))
                self.renderpropsimage()            _movieScript.gDirectionKeys[q] = _global._key.keypressed(LingoList(LingoNumber(86),LingoNumber(91),LingoNumber(88),LingoNumber(84))[q])            tmp_q = q                    _global.sprite(LingoNumber(257)).visibility = LingoGlobal.FALSE        _global.script("levelOverview").gotoeditor()
        if LingoGlobal.op_eq_b(_movieScript.editSettingsProp, -LingoNumber(1)):             if (LingoGlobal.ToBool(_global._key.keypressed(LingoGlobal.SPACE)) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 if (LingoGlobal.ToBool(_global._key.keypressed("W")) and LingoGlobal.ToBool(_global._key.keypressed("A"))):                     _movieScript.gPEprops.proprotation = LingoGlobal.op_add(LingoNumber(270),LingoNumber(45))                    _movieScript.gPEcounter = LingoNumber(100)                                    elif (LingoGlobal.ToBool(_global._key.keypressed("W")) and LingoGlobal.ToBool(_global._key.keypressed("D"))):                     _movieScript.gPEprops.proprotation = LingoNumber(45)                    _movieScript.gPEcounter = LingoNumber(100)                                    elif (LingoGlobal.ToBool(_global._key.keypressed("S")) and LingoGlobal.ToBool(_global._key.keypressed("D"))):                     _movieScript.gPEprops.proprotation = LingoGlobal.op_add(LingoNumber(90),LingoNumber(45))                    _movieScript.gPEcounter = LingoNumber(100)                                    elif (LingoGlobal.ToBool(_global._key.keypressed("S")) and LingoGlobal.ToBool(_global._key.keypressed("A"))):                     _movieScript.gPEprops.proprotation = LingoGlobal.op_add(LingoNumber(180),LingoNumber(45))                    _movieScript.gPEcounter = LingoNumber(100)                                    elif LingoGlobal.op_eq_b(_movieScript.gPEcounter, LingoNumber(0)):                     if LingoGlobal.ToBool(_global._key.keypressed("W")):                         _movieScript.gPEprops.proprotation = LingoNumber(0)                                            elif LingoGlobal.ToBool(_global._key.keypressed("A")):                         _movieScript.gPEprops.proprotation = LingoNumber(270)                                            elif LingoGlobal.ToBool(_global._key.keypressed("S")):                         _movieScript.gPEprops.proprotation = LingoNumber(180)                                            elif LingoGlobal.ToBool(_global._key.keypressed("D")):                         _movieScript.gPEprops.proprotation = LingoNumber(90)                                                                        elif LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized):                 if LingoGlobal.ToBool(self.checkkey("W")):                     self.updatepropmenu(LingoGlobal.point(LingoNumber(0),-LingoNumber(1)))                if LingoGlobal.ToBool(self.checkkey("S")):                     self.updatepropmenu(LingoGlobal.point(LingoNumber(0),LingoNumber(1)))                if LingoGlobal.ToBool(self.checkkey("A")):                     self.updatepropmenu(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)))                if LingoGlobal.ToBool(self.checkkey("D")):                     self.updatepropmenu(LingoGlobal.point(LingoNumber(1),LingoNumber(0)))                                    elif _movieScript.editSettingsProp > _movieScript.gPEprops.props.count:             _movieScript.editSettingsProp = -LingoNumber(1)            self.updatepropmenu(LingoGlobal.point(LingoNumber(0),LingoNumber(0)))        elif LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized):             if LingoGlobal.ToBool(self.checkkey("W")):                 self.updatepropsettings(LingoGlobal.point(LingoNumber(0),-LingoNumber(1)))            if LingoGlobal.ToBool(self.checkkey("S")):                 self.updatepropsettings(LingoGlobal.point(LingoNumber(0),LingoNumber(1)))            if LingoGlobal.ToBool(self.checkkey("A")):                 self.updatepropsettings(LingoGlobal.point(-LingoNumber(1),LingoNumber(0)))            if LingoGlobal.ToBool(self.checkkey("D")):                 self.updatepropsettings(LingoGlobal.point(LingoNumber(1),LingoNumber(0)))                    if LingoGlobal.ToBool(self.checkkey("Z")):             _movieScript.gPEprops.color = LingoGlobal.op_add(_movieScript.gPEprops.color,LingoNumber(1))            if _movieScript.gPEprops.color > _movieScript.gPEcolors.count:                 _movieScript.gPEprops.color = LingoNumber(0)                            if LingoGlobal.op_eq_b(_movieScript.gPEprops.color, LingoNumber(0)):                 _global.member("Prop Color Text").text = LingoGlobal.concat("PROP COLOR: ","NONE")                _global.sprite(LingoNumber(270)).color = _global.color(LingoNumber(150),LingoNumber(150),LingoNumber(150))                            else:                _global.member("Prop Color Text").text = LingoGlobal.concat("PROP COLOR: ",_movieScript.gPEcolors[_movieScript.gPEprops.color][LingoNumber(1)])                _global.sprite(LingoNumber(270)).color = _movieScript.gPEcolors[_movieScript.gPEprops.color][LingoNumber(2)]                                    if LingoGlobal.op_eq_b(_movieScript.gPEprops.color, LingoNumber(1)):             _global.sprite(LingoNumber(270)).color = _global.color(_global.random(LingoNumber(255)),_global.random(LingoNumber(255)),_global.random(LingoNumber(255)))                    if LingoGlobal.ToBool(self.checkkey("N")):             if LingoGlobal.op_eq_b(_movieScript.editSettingsProp, -LingoNumber(1)):                 _movieScript.editSettingsProp = LingoNumber(0)                self.updatepropsettings(LingoGlobal.point(LingoNumber(0),LingoNumber(0)))            else:                _movieScript.editSettingsProp = -LingoNumber(1)                self.updatepropmenu(LingoGlobal.point(LingoNumber(0),LingoNumber(0)))                    if (LingoGlobal.ToBool(_global._key.keypressed("Q")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             _movieScript.gPEprops.proprotation = LingoGlobal.op_sub(_movieScript.gPEprops.proprotation,LingoNumber(0.0100))            if LingoGlobal.ToBool(_global._key.keypressed(LingoGlobal.SPACE)):                 _movieScript.gPEprops.proprotation = LingoGlobal.op_sub(_movieScript.gPEprops.proprotation,LingoNumber(0.1000))                            _movieScript.mouseStill = LingoNumber(0)                    elif (LingoGlobal.ToBool(_global._key.keypressed("E")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             _movieScript.gPEprops.proprotation = LingoGlobal.op_add(_movieScript.gPEprops.proprotation,LingoNumber(0.0100))            if LingoGlobal.ToBool(_global._key.keypressed(LingoGlobal.SPACE)):                 _movieScript.gPEprops.proprotation = LingoGlobal.op_add(_movieScript.gPEprops.proprotation,LingoNumber(0.1000))                            _movieScript.mouseStill = LingoNumber(0)                    if _movieScript.gPEprops.proprotation < LingoNumber(0):             _movieScript.gPEprops.proprotation = LingoGlobal.op_add(_movieScript.gPEprops.proprotation,LingoNumber(360))                    elif _movieScript.gPEprops.proprotation >= LingoNumber(360):             _movieScript.gPEprops.proprotation = LingoGlobal.op_sub(_movieScript.gPEprops.proprotation,LingoNumber(360))                    if (LingoGlobal.ToBool(_global._key.keypressed(LingoGlobal.SPACE)) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             if LingoGlobal.ToBool(_global._key.keypressed("Y")):                 _movieScript.gPEprops.propflipy = LingoNumber(1)                            elif LingoGlobal.ToBool(_global._key.keypressed("H")):                 _movieScript.gPEprops.propflipy = -LingoNumber(1)                            if LingoGlobal.ToBool(_global._key.keypressed("G")):                 _movieScript.gPEprops.propflipx = LingoNumber(1)                            elif LingoGlobal.ToBool(_global._key.keypressed("J")):                 _movieScript.gPEprops.propflipx = -LingoNumber(1)                                    else:            stretchspeed = LingoNumber(0.0020)            if (LingoGlobal.ToBool(_global._key.keypressed("Y")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.gPEprops.propstretchy = LingoGlobal.op_add(_movieScript.gPEprops.propstretchy,stretchspeed)                _movieScript.mouseStill = LingoNumber(0)                            elif (LingoGlobal.ToBool(_global._key.keypressed("H")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.gPEprops.propstretchy = LingoGlobal.op_sub(_movieScript.gPEprops.propstretchy,stretchspeed)                _movieScript.mouseStill = LingoNumber(0)                            if (LingoGlobal.ToBool(_global._key.keypressed("G")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.gPEprops.propstretchx = LingoGlobal.op_sub(_movieScript.gPEprops.propstretchx,stretchspeed)                _movieScript.mouseStill = LingoNumber(0)                            elif (LingoGlobal.ToBool(_global._key.keypressed("J")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.gPEprops.propstretchx = LingoGlobal.op_add(_movieScript.gPEprops.propstretchx,stretchspeed)                _movieScript.mouseStill = LingoNumber(0)                            if (LingoGlobal.ToBool(_global._key.keypressed("T")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.gPEprops.propstretchx = LingoNumber(1)                _movieScript.gPEprops.propstretchy = LingoNumber(1)                            if (LingoGlobal.ToBool(_global._key.keypressed("R")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.gPEprops.propstretchx = LingoNumber(1)                _movieScript.gPEprops.propstretchy = LingoNumber(1)                _movieScript.gPEprops.propflipx = LingoNumber(1)                _movieScript.gPEprops.propflipy = LingoNumber(1)                _movieScript.gPEprops.proprotation = LingoNumber(0)                            if _movieScript.gPEprops.propstretchy < LingoNumber(0.1000):                 _movieScript.gPEprops.propstretchy = LingoNumber(0.1000)                            elif _movieScript.gPEprops.propstretchy > LingoNumber(20):                 _movieScript.gPEprops.propstretchy = LingoNumber(20)                            if _movieScript.gPEprops.propstretchx < LingoNumber(0.1000):                 _movieScript.gPEprops.propstretchx = LingoNumber(0.1000)                            elif _movieScript.gPEprops.propstretchx > LingoNumber(20):                 _movieScript.gPEprops.propstretchx = LingoNumber(20)                                    actn1 = LingoNumber(0)        actn2 = LingoNumber(0)        if LingoGlobal.op_eq_b(_global.member("propMenu").text, _global.member("propBaseMenu").text):             if (LingoGlobal.ToBool(_global._mouse.mousedown) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.editSettingsProp = -LingoNumber(1)                self.updatepropmenu(LingoGlobal.point(LingoNumber(0),LingoNumber(0)))                    _movieScript.gPEprops.keys.m1 = LingoGlobal.op_and(_global._mouse.mousedown,LingoGlobal.op_ne(_global._movie.window.sizestate,minimized))        if (LingoGlobal.ToBool(_movieScript.gPEprops.keys.m1) and LingoGlobal.op_eq_b(_movieScript.gPEprops.lastkeys.m1, LingoNumber(0))):             actn1 = LingoNumber(1)                    _movieScript.gPEprops.lastkeys.m1 = _movieScript.gPEprops.keys.m1        _movieScript.gPEprops.keys.m2 = LingoGlobal.op_and(_global._mouse.rightmousedown,LingoGlobal.op_ne(_global._movie.window.sizestate,minimized))        if (LingoGlobal.ToBool(_movieScript.gPEprops.keys.m2) and LingoGlobal.op_eq_b(_movieScript.gPEprops.lastkeys.m2, LingoNumber(0))):             actn2 = LingoNumber(1)                    _movieScript.gPEprops.lastkeys.m2 = _movieScript.gPEprops.keys.m2        if (LingoGlobal.ToBool(_global._key.keypressed("F")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             if (LingoGlobal.op_ne_b(_movieScript.propSettings.findpos(variation), LingoGlobal.VOID) and (LingoGlobal.ToBool(actn1) or LingoGlobal.ToBool(actn2))):                 _movieScript.propSettings.variation = LingoGlobal.op_sub(LingoGlobal.op_add(_movieScript.propSettings.variation,actn1),actn2)                mn = LingoGlobal.op_sub(LingoNumber(1),_movieScript.settingsPropType.random)                if _movieScript.propSettings.variation < mn:                     _movieScript.propSettings.variation = _movieScript.settingsPropType.vars                                    elif _movieScript.propSettings.variation > _movieScript.settingsPropType.vars:                     _movieScript.propSettings.variation = mn                                    self.updatevariedpreview(_movieScript.settingsPropType,_movieScript.propSettings.variation)
                self.updatecursortext()            actn1 = LingoNumber(0)            actn2 = LingoNumber(0)                    if LingoGlobal.ToBool(actn2):             if (LingoGlobal.ToBool(_global._key.keypressed(LingoGlobal.SPACE)) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.gPEprops.depth = LingoGlobal.op_sub(_movieScript.gPEprops.depth,LingoNumber(1))                            else:                _movieScript.gPEprops.depth = LingoGlobal.op_add(_movieScript.gPEprops.depth,LingoNumber(1))                            if _movieScript.gPEprops.depth < LingoNumber(0):                 _movieScript.gPEprops.depth = LingoNumber(9)                            elif _movieScript.gPEprops.depth > LingoNumber(9):                 _movieScript.gPEprops.depth = LingoNumber(0)                            self.updateworklayertext()        if (((LingoGlobal.ToBool(_global._key.keypressed("C")) and LingoGlobal.ToBool(_global._key.keypressed("X"))) and LingoGlobal.ToBool(_global._key.keypressed(LingoNumber(48)))) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             _global.sprite(LingoNumber(268)).visible = LingoGlobal.TRUE            _global.sprite(LingoNumber(268)).color = _global.color(_global.random(LingoNumber(255)),LingoNumber(0),LingoNumber(0))            if (LingoGlobal.ToBool(actn1) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(25),LingoNumber(25),LingoNumber(52),LingoNumber(52))))):                 self.clearallprops()            actn1 = LingoNumber(0)                    else:            _global.sprite(LingoNumber(268)).visible = LingoGlobal.FALSE                    if LingoGlobal.ToBool(self.checkkey("L")):             _movieScript.gPEprops.worklayer = LingoGlobal.op_add(_movieScript.gPEprops.worklayer,LingoNumber(1))            if _movieScript.gPEprops.worklayer > LingoNumber(3):                 _movieScript.gPEprops.worklayer = LingoNumber(1)                            if LingoGlobal.op_eq_b(_movieScript.gPEprops.worklayer, LingoNumber(2)):                 _global.sprite(LingoNumber(250)).blend = LingoNumber(40)                _global.sprite(LingoNumber(251)).blend = LingoNumber(40)                _global.sprite(LingoNumber(252)).blend = LingoNumber(90)                _global.sprite(LingoNumber(253)).blend = LingoNumber(90)                _global.sprite(LingoNumber(254)).blend = LingoNumber(10)                _global.sprite(LingoNumber(255)).blend = LingoNumber(10)                            elif LingoGlobal.op_eq_b(_movieScript.gPEprops.worklayer, LingoNumber(1)):                 _global.sprite(LingoNumber(250)).blend = LingoNumber(20)                _global.sprite(LingoNumber(251)).blend = LingoNumber(20)                _global.sprite(LingoNumber(252)).blend = LingoNumber(40)                _global.sprite(LingoNumber(253)).blend = LingoNumber(40)                _global.sprite(LingoNumber(254)).blend = LingoNumber(90)                _global.sprite(LingoNumber(255)).blend = LingoNumber(90)                            else:                _global.sprite(LingoNumber(250)).blend = LingoNumber(90)                _global.sprite(LingoNumber(251)).blend = LingoNumber(90)                _global.sprite(LingoNumber(252)).blend = LingoNumber(10)                _global.sprite(LingoNumber(253)).blend = LingoNumber(10)                _global.sprite(LingoNumber(254)).blend = LingoNumber(10)                _global.sprite(LingoNumber(255)).blend = LingoNumber(10)                            self.updateworklayertext()
            self.renderpropsimage()        if LingoGlobal.op_eq_b(_movieScript.gPEprops.proprotation, LingoNumber(0)):             dir = LingoGlobal.point(LingoNumber(0),-LingoNumber(1))            perp = LingoGlobal.point(LingoNumber(1),LingoNumber(0))                    elif LingoGlobal.op_eq_b(_movieScript.gPEprops.proprotation, LingoNumber(90)):             dir = LingoGlobal.point(LingoNumber(1),LingoNumber(0))            perp = LingoGlobal.point(LingoNumber(0),LingoNumber(1))                    elif LingoGlobal.op_eq_b(_movieScript.gPEprops.proprotation, LingoNumber(180)):             dir = LingoGlobal.point(LingoNumber(0),LingoNumber(1))            perp = LingoGlobal.point(-LingoNumber(1),LingoNumber(0))                    elif LingoGlobal.op_eq_b(_movieScript.gPEprops.proprotation, LingoNumber(270)):             dir = LingoGlobal.point(-LingoNumber(1),LingoNumber(0))            perp = LingoGlobal.point(LingoNumber(0),-LingoNumber(1))                    else:            dir = _movieScript.degtovec(_movieScript.gPEprops.proprotation)            perp = _movieScript.givedirfor90degrtoline(-dir,dir)                    if ((((LingoGlobal.op_eq_b(_global._key.keypressed("U"), LingoNumber(0)) and LingoGlobal.op_eq_b(_global._key.keypressed("I"), LingoNumber(0))) and LingoGlobal.op_eq_b(_global._key.keypressed("O"), LingoNumber(0))) and LingoGlobal.op_eq_b(_global._key.keypressed("P"), LingoNumber(0))) and LingoGlobal.op_eq_b(_global._key.keypressed("X"), LingoNumber(0))):             _movieScript.peMousePos = _global._mouse.mouseloc            if LingoGlobal.ToBool(_movieScript.preciseSnap):                 _movieScript.peMousePos.loch = LingoGlobal.op_mul(LingoGlobal.op_sub(LingoGlobal.op_div(_movieScript.peMousePos.loch,LingoNumber(8.0000)),LingoNumber(0.4999)).integer,LingoNumber(8))                _movieScript.peMousePos.locv = LingoGlobal.op_mul(LingoGlobal.op_sub(LingoGlobal.op_div(_movieScript.peMousePos.locv,LingoNumber(8.0000)),LingoNumber(0.4999)).integer,LingoNumber(8))                            if LingoGlobal.ToBool(_movieScript.snapToGrid):                 _movieScript.peMousePos.loch = LingoGlobal.op_mul(LingoGlobal.op_sub(LingoGlobal.op_div(_movieScript.peMousePos.loch,LingoNumber(16.0000)),LingoNumber(0.4999)).integer,LingoNumber(16))                _movieScript.peMousePos.locv = LingoGlobal.op_mul(LingoGlobal.op_sub(LingoGlobal.op_div(_movieScript.peMousePos.locv,LingoNumber(16.0000)),LingoNumber(0.4999)).integer,LingoNumber(16))                                    if (LingoGlobal.op_eq_b(_movieScript.snapToGrid, LingoNumber(0)) and LingoGlobal.op_eq_b(_movieScript.preciseSnap, LingoNumber(0))):             _global.member("buttonSnapText").text = "None"                    elif (LingoGlobal.op_eq_b(_movieScript.snapToGrid, LingoNumber(1)) and LingoGlobal.op_eq_b(_movieScript.preciseSnap, LingoNumber(0))):             _global.member("buttonSnapText").text = "Snap To Grid"                    elif (LingoGlobal.op_eq_b(_movieScript.preciseSnap, LingoNumber(1)) and LingoGlobal.op_eq_b(_movieScript.snapToGrid, LingoNumber(0))):             _global.member("buttonSnapText").text = "Precise Snap"                    elif (LingoGlobal.op_eq_b(_movieScript.preciseSnap, LingoNumber(1)) and LingoGlobal.op_eq_b(_movieScript.snapToGrid, LingoNumber(1))):             _global.member("buttonSnapText").text = "Both tags active, remove one"                    prop = LingoGlobal.VOID        if (((_movieScript.gPEprops.pmpos.loch <= _movieScript.gProps.count and _movieScript.gPEprops.pmpos.loch > LingoNumber(0)) and _movieScript.gPEprops.pmpos.locv > LingoNumber(0)) and _movieScript.gPEprops.pmpos.locv <= _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps.count):             prop = _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv]                    if (LingoGlobal.op_ne_b(prop, LingoGlobal.VOID) and LingoGlobal.op_eq_b(prop.tp, "long")):             if LingoGlobal.op_eq_b(_movieScript.longPropPlacePos, LingoGlobal.VOID):                 _movieScript.gPEprops.proprotation = LingoNumber(0)                _movieScript.gPEprops.propstretchx = LingoNumber(1)                _movieScript.gPEprops.propstretchy = LingoNumber(1)                _movieScript.gPEprops.propflipx = LingoNumber(1)                _movieScript.gPEprops.propflipy = LingoNumber(1)                if (LingoGlobal.ToBool(actn1) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(16),LingoNumber(848),LingoNumber(656))))):                     _movieScript.longPropPlacePos = LingoGlobal.op_add(_movieScript.peMousePos,LingoGlobal.op_add(LingoGlobal.point(-LingoNumber(16),-LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16))))                    actn1 = LingoNumber(0)                                                else:                _movieScript.gPEprops.proprotation = LingoGlobal.op_add(_movieScript.lookatpoint(LingoGlobal.op_sub(_movieScript.longPropPlacePos,LingoGlobal.op_add(LingoGlobal.point(-LingoNumber(16),-LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)))),_movieScript.peMousePos),LingoNumber(90))                _movieScript.gPEprops.propstretchx = LingoGlobal.op_div(_movieScript.diag(LingoGlobal.op_sub(_movieScript.longPropPlacePos,LingoGlobal.op_add(LingoGlobal.point(-LingoNumber(16),-LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)))),_movieScript.peMousePos),LingoGlobal.op_mul(LingoNumber(200.0000),LingoGlobal.op_div(LingoNumber(16.0000),LingoNumber(20.0000))))                _movieScript.peMousePos = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_sub(_movieScript.longPropPlacePos,LingoGlobal.op_add(LingoGlobal.point(-LingoNumber(16),-LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)))),_movieScript.peMousePos),LingoNumber(2.0000))                _movieScript.gPEprops.propstretchy = LingoNumber(1)                _movieScript.gPEprops.propflipx = LingoNumber(1)                _movieScript.gPEprops.propflipy = LingoNumber(1)                if (LingoGlobal.ToBool(actn1) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(16),LingoNumber(848),LingoNumber(656))))):                     _movieScript.longPropPlacePos = LingoGlobal.VOID                                                        lastclosest = _movieScript.closestProp        _movieScript.closestProp = LingoNumber(0)        if ((_movieScript.gPEprops.props.count > LingoNumber(0) and ((LingoGlobal.ToBool(_global._key.keypressed("V")) or LingoGlobal.ToBool(_global._key.keypressed("B"))) or LingoGlobal.ToBool(_global._key.keypressed("M")))) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):             _movieScript.closestProp = self.findclosestprop()                    if _movieScript.editSettingsProp > LingoNumber(0):             _movieScript.closestProp = _movieScript.editSettingsProp                    if (LingoGlobal.op_ne_b(_movieScript.closestProp, lastclosest) and _movieScript.closestProp < LingoNumber(1)):             if LingoList("variedDecal","variedSoft","variedStandard").getpos(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv].tp) > LingoNumber(0):                 self.updatevariedpreview(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv],_movieScript.propSettings.variation)                    if _movieScript.closestProp > LingoNumber(0):             qd = _movieScript.gPEprops.props[_movieScript.closestProp][LingoNumber(4)]            offsetpnt = LingoGlobal.op_sub(LingoGlobal.point(LingoNumber(16),LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)))            qd = LingoGlobal.op_add(qd,LingoList(offsetpnt,offsetpnt,offsetpnt,offsetpnt))            if LingoGlobal.op_ne_b(_movieScript.closestProp, lastclosest):                 _global.sprite(LingoNumber(264)).member = self.proppreviewmember(_movieScript.gProps[_movieScript.gPEprops.props[_movieScript.closestProp][LingoNumber(3)].loch].prps[_movieScript.gPEprops.props[_movieScript.closestProp][LingoNumber(3)].locv])                if LingoList("variedDecal","variedSoft","variedStandard").getpos(_movieScript.gProps[_movieScript.gPEprops.props[_movieScript.closestProp][LingoNumber(3)].loch].prps[_movieScript.gPEprops.props[_movieScript.closestProp][LingoNumber(3)].locv].tp) > LingoNumber(0):                     if LingoGlobal.op_eq_b(_movieScript.closestProp, LingoNumber(0)):                         var = _movieScript.propSettings.variation                                            else:                        var = _movieScript.gPEprops.props[_movieScript.closestProp][LingoNumber(5)].settings.variation                                            self.updatevariedpreview(_movieScript.gProps[_movieScript.gPEprops.props[_movieScript.closestProp][LingoNumber(3)].loch].prps[_movieScript.gPEprops.props[_movieScript.closestProp][LingoNumber(3)].locv],var)                            _global.sprite(LingoNumber(266)).loc = LingoGlobal.point(-LingoNumber(100),-LingoNumber(100))            if (LingoGlobal.ToBool(_global._key.keypressed("V")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _global.sprite(LingoNumber(264)).color = _global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0))                _global.sprite(LingoNumber(264)).forecolor = LingoNumber(6)                if LingoGlobal.ToBool(actn1):                     _movieScript.gPEprops.props.deleteat(_movieScript.closestProp)
                    self.renderpropsimage()                            elif (LingoGlobal.ToBool(_global._key.keypressed("B")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _global.sprite(LingoNumber(264)).color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(255))                _global.sprite(LingoNumber(264)).forecolor = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255))                if LingoGlobal.ToBool(actn1):                     _movieScript.gPEprops.pmpos = _movieScript.gPEprops.props[_movieScript.closestProp][LingoNumber(3)]                    self.updatepropmenu(LingoGlobal.point(LingoNumber(0),LingoNumber(0)))
                    _movieScript.propSettings = _movieScript.gPEprops.props[_movieScript.closestProp][LingoNumber(5)].settings                    _movieScript.settingsPropType = _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv]                    _movieScript.editSettingsProp = -LingoNumber(1)                                                elif _movieScript.editSettingsProp > LingoNumber(0):                 _global.sprite(LingoNumber(264)).color = _global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0))                _global.sprite(LingoNumber(264)).forecolor = LingoNumber(187)                            elif (LingoGlobal.ToBool(_global._key.keypressed("M")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _global.sprite(LingoNumber(264)).color = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(255))                _global.sprite(LingoNumber(264)).forecolor = LingoNumber(62)                if LingoGlobal.ToBool(actn1):                     _movieScript.editSettingsProp = _movieScript.closestProp                    _movieScript.propSettings = _movieScript.gPEprops.props[_movieScript.closestProp][LingoNumber(5)].settings                    _movieScript.settingsPropType = _movieScript.gProps[_movieScript.gPEprops.props[_movieScript.closestProp][LingoNumber(3)].loch].prps[_movieScript.gPEprops.props[_movieScript.closestProp][LingoNumber(3)].locv]                    self.updatepropsettings(LingoGlobal.point(LingoNumber(0),LingoNumber(0)))                            if _movieScript.editSettingsProp < LingoNumber(1):                 _global.sprite(LingoNumber(264)).blend = _movieScript.restrict(LingoGlobal.op_add(LingoNumber(50),LingoGlobal.op_mul(LingoNumber(50),LingoGlobal.sin(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_div(_movieScript.gPEblink,LingoNumber(800.0000)),LingoGlobal.PI),LingoNumber(4.0000))))),LingoNumber(0),LingoNumber(100))                            else:                _global.sprite(LingoNumber(264)).blend = _movieScript.restrict(LingoGlobal.op_add(LingoNumber(50),LingoGlobal.op_mul(LingoNumber(50),LingoGlobal.sin(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_div(_movieScript.gPEblink,LingoNumber(800.0000)),LingoGlobal.PI),LingoNumber(8.0000))))),LingoNumber(0),LingoNumber(100))                                    else:            mem = self.proppreviewmember(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv])            scalefac = LingoGlobal.op_div(LingoNumber(16.0000),LingoNumber(20.0000))            qd = LingoList(_movieScript.peMousePos,_movieScript.peMousePos,_movieScript.peMousePos,_movieScript.peMousePos)            qd[LingoNumber(1)] = LingoGlobal.op_sub(LingoGlobal.op_add(qd[LingoNumber(1)],LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(dir,mem.rect.height),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchy),scalefac),_movieScript.gPEprops.propflipy)),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.rect.width),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchx),scalefac),_movieScript.gPEprops.propflipx))            qd[LingoNumber(2)] = LingoGlobal.op_add(LingoGlobal.op_add(qd[LingoNumber(2)],LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(dir,mem.rect.height),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchy),scalefac),_movieScript.gPEprops.propflipy)),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.rect.width),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchx),scalefac),_movieScript.gPEprops.propflipx))            qd[LingoNumber(3)] = LingoGlobal.op_add(LingoGlobal.op_sub(qd[LingoNumber(3)],LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(dir,mem.rect.height),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchy),scalefac),_movieScript.gPEprops.propflipy)),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.rect.width),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchx),scalefac),_movieScript.gPEprops.propflipx))            qd[LingoNumber(4)] = LingoGlobal.op_sub(LingoGlobal.op_sub(qd[LingoNumber(4)],LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(dir,mem.rect.height),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchy),scalefac),_movieScript.gPEprops.propflipy)),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.rect.width),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchx),scalefac),_movieScript.gPEprops.propflipx))            if (LingoGlobal.ToBool(_global._key.keypressed("U")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.peFreeQuad[LingoNumber(1)] = LingoGlobal.op_sub(_global._mouse.mouseloc,qd[LingoNumber(1)])                            elif (LingoGlobal.ToBool(_global._key.keypressed("I")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.peFreeQuad[LingoNumber(2)] = LingoGlobal.op_sub(_global._mouse.mouseloc,qd[LingoNumber(2)])                            elif (LingoGlobal.ToBool(_global._key.keypressed("O")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.peFreeQuad[LingoNumber(3)] = LingoGlobal.op_sub(_global._mouse.mouseloc,qd[LingoNumber(3)])                            elif (LingoGlobal.ToBool(_global._key.keypressed("P")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)):                 _movieScript.peFreeQuad[LingoNumber(4)] = LingoGlobal.op_sub(_global._mouse.mouseloc,qd[LingoNumber(4)])                            elif ((LingoGlobal.ToBool(_global._key.keypressed("K")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized)) or (LingoGlobal.ToBool(_global._key.keypressed("R")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized))):                 _movieScript.peFreeQuad = LingoList(LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),LingoNumber(0)),LingoGlobal.point(LingoNumber(0),LingoNumber(0)))                            qd = LingoGlobal.op_add(qd,_movieScript.peFreeQuad)            if (LingoGlobal.ToBool(actn1) and LingoGlobal.ToBool(_global._mouse.mouseloc.inside(LingoGlobal.rect(LingoNumber(16),LingoNumber(16),LingoNumber(848),LingoNumber(656))))):                 offsetpnt = LingoGlobal.op_add(LingoGlobal.point(-LingoNumber(16),-LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)))                self.placeprop(LingoGlobal.op_add(qd,LingoList(offsetpnt,offsetpnt,offsetpnt,offsetpnt)))            _global.sprite(LingoNumber(264)).blend = LingoNumber(50)            _global.sprite(LingoNumber(264)).color = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0))            _global.sprite(LingoNumber(264)).forecolor = LingoNumber(255)            _global.sprite(LingoNumber(264)).member = mem            _global.sprite(LingoNumber(266)).loc = LingoGlobal.op_add(_movieScript.peMousePos,LingoGlobal.point(LingoNumber(40),LingoNumber(20)))                    _global.sprite(LingoNumber(264)).quad = qd        if LingoGlobal.op_eq_b(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv].tp, "rope"):             viewrope = LingoGlobal.FALSE            if LingoGlobal.op_ne_b(_movieScript.lastPeMouse, _movieScript.peMousePos):                 _movieScript.mouseStill = LingoNumber(0)                            else:                _movieScript.mouseStill = LingoGlobal.op_add(_movieScript.mouseStill,LingoNumber(1))                            if (_movieScript.editSettingsProp > LingoNumber(0) or (LingoGlobal.ToBool(_global._key.keypressed("M")) and LingoGlobal.op_ne_b(_global._movie.window.sizestate, minimized))):                 _movieScript.mouseStill = LingoNumber(0)                            if LingoGlobal.op_eq_b(_global._key.keypressed("X"), LingoNumber(0)):                 if LingoGlobal.op_eq_b(_movieScript.mouseStill, LingoNumber(10)):                     ropeframes = LingoNumber(0)                    self.resetropeprop()                elif _movieScript.mouseStill > LingoNumber(10):                     ropeframes = LingoGlobal.op_add(ropeframes,LingoNumber(1))                    self.updatecursortext()
                    _global.script("ropeModel").modelropeupdate(LingoNumber(1),_movieScript.gLEProps.campos,LingoGlobal.op_div(LingoNumber(16.0000),LingoNumber(20.0000)))
                    viewrope = LingoGlobal.TRUE                                                else:                viewrope = LingoGlobal.TRUE                            _global.sprite(LingoNumber(269)).visibility = viewrope                    else:            ropeframes = LingoNumber(0)            _global.sprite(LingoNumber(269)).visibility = LingoGlobal.FALSE                    _global.go(_global.the_frame)        return None            def findclosestprop(self):         smallestdist = None        offsetmousepnt = None        p = None        pos = None        _movieScript.closestProp = LingoNumber(0)        smallestdist = LingoNumber(10000)        offsetmousepnt = LingoGlobal.op_add(LingoGlobal.op_sub(_movieScript.peMousePos,LingoGlobal.point(LingoNumber(16),LingoNumber(16))),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16.0000)))        for tmp_p in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gPEprops.props.count):             p = tmp_p            pos = LingoGlobal.op_div(LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_add(_movieScript.gPEprops.props[p][LingoNumber(4)][LingoNumber(1)],_movieScript.gPEprops.props[p][LingoNumber(4)][LingoNumber(2)]),_movieScript.gPEprops.props[p][LingoNumber(4)][LingoNumber(3)]),_movieScript.gPEprops.props[p][LingoNumber(4)][LingoNumber(4)]),LingoNumber(4.0000))            if _movieScript.diag(offsetmousepnt,pos) < smallestdist:                 smallestdist = _movieScript.diag(offsetmousepnt,pos)                _movieScript.closestProp = p                            tmp_p = p                    return _movieScript.closestProp                    def updateworklayertext(self):         txt = None        txt = LingoGlobal.concat_space("Work Layer:",_global.str(_movieScript.gPEprops.worklayer))        txt += str(LingoGlobal.RETURN)        txt += str(LingoGlobal.concat("Prop depth: ",self.propplacelayer()))        _global.member("layerText").text = txt        if _movieScript.gPEprops.pmpos.loch > _movieScript.gProps.count:             _movieScript.gPEprops.pmpos.loch = LingoNumber(1)                    if _movieScript.gPEprops.pmpos.locv > _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps.count:             _movieScript.gPEprops.pmpos.locv = LingoNumber(1)                    self.updatecursortext()        return None            def updatecursortext(self):         txt = None        txt = LingoGlobal.concat("Prop depth: ",self.propplacelayer()," to ",LingoGlobal.op_add(self.propplacelayer(),_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv].depth))        if LingoGlobal.op_ne_b(_movieScript.propSettings, LingoGlobal.VOID):             if LingoGlobal.op_ne_b(_movieScript.propSettings.findpos(variation), LingoGlobal.VOID):                 txt += str(LingoGlobal.RETURN)                txt += str("Variation: ")                if LingoGlobal.op_eq_b(_movieScript.propSettings.variation, LingoNumber(0)):                     txt += str("Random")                                    else:                    txt += str(_movieScript.propSettings.variation)                                                        _global.member("Prop Depth Text").text = txt                return None            def propplacelayer(self):         return LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(_movieScript.gPEprops.worklayer,LingoNumber(1)),LingoNumber(10)),_movieScript.gPEprops.depth)                    def placeprop(self, qd):         prop = None        q = None        prop = LingoList(-self.propplacelayer(),_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv].nm,_movieScript.gPEprops.pmpos,qd,LingoPropertyList(dict(settings = _movieScript.propSettings.duplicate())))        if LingoGlobal.op_ne_b(prop[LingoNumber(5)].settings.findpos(color), LingoGlobal.VOID):             if _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv].tags.getpos("customColorRainBow") > LingoNumber(0):                 _movieScript.gPEprops.color = LingoNumber(1)                            prop[LingoNumber(5)].settings.color = _movieScript.gPEprops.color                    match _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv].tp.lower():             case "rope":                prop[LingoNumber(5)].addprop(points,LingoList())
                for tmp_q in LingoGlobal.pyrange(LingoNumber(1), _movieScript.ropeModel.segments.count):                     q = tmp_q                    prop[LingoNumber(5)].points.add(_global.script("ropeModel").smoothedpos(q))
                    tmp_q = q                                                case "long":                pass                            case "varieddecal" | "variedsoft" | "variedstandard":                if LingoGlobal.op_eq_b(prop[LingoNumber(5)].settings.variation, LingoNumber(0)):                     prop[LingoNumber(5)].settings.variation = _global.random(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv].vars)                                                        _movieScript.gPEprops.props.add(prop)
        _movieScript.gPEprops.props.sort()
        self.renderpropsimage()
        if ((LingoGlobal.op_eq_b(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv].tp, "variedDecal") or LingoGlobal.op_eq_b(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv].tp, "variedSoft")) or LingoGlobal.op_eq_b(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv].tp, "variedStandard")):             if LingoGlobal.op_eq_b(_movieScript.propSettings.variation, LingoNumber(0)):                 self.updatevariedpreview(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv],LingoNumber(0))                    self.applytransformationtags()        return None            def clearallprops(self):         _movieScript.gPEprops.props = LingoList()        self.renderpropsimage()        return None            def renderpropsimage(self):         camposquad = None        displaylayer = None        layer = None        p = None        prop = None        propdata = None        proplayer = None        mem = None        blnd = None        q = None        clr = None        adaptedpos = None        _global.member("propsImage").image = _global.image(LingoGlobal.op_mul(LingoNumber(52),LingoNumber(16)),LingoGlobal.op_mul(LingoNumber(40),LingoNumber(16)),LingoNumber(16))        _global.member("propsImage2").image = _global.image(LingoGlobal.op_mul(LingoNumber(52),LingoNumber(16)),LingoGlobal.op_mul(LingoNumber(40),LingoNumber(16)),LingoNumber(16))        camposquad = LingoList(LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)))        displaylayer = LingoGlobal.op_mul(LingoGlobal.op_sub(_movieScript.gPEprops.worklayer,LingoNumber(1)),LingoNumber(10))        layer = LingoNumber(29)        for tmp_p in LingoGlobal.pyrange(LingoNumber(1), _movieScript.gPEprops.props.count):             p = tmp_p            prop = _movieScript.gPEprops.props[p]            propdata = _movieScript.gProps[prop[LingoNumber(3)].loch].prps[prop[LingoNumber(3)].locv]            proplayer = -prop[LingoNumber(1)]            mem = self.proppreviewmember(propdata)            blnd = LingoGlobal.op_sub(LingoNumber(100),LingoGlobal.op_mul(self.isdecal(propdata),LingoNumber(40)))            if proplayer >= displaylayer:                 if proplayer < layer:                     for tmp_q in LingoGlobal.pyrange(LingoNumber(1), LingoGlobal.op_sub(layer,proplayer)):                         q = tmp_q                        _global.member("propsImage").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(LingoNumber(52),LingoNumber(16)),LingoGlobal.op_mul(LingoNumber(40),LingoNumber(16))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(blend = LingoNumber(10),color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))))
                        tmp_q = q                                            layer = proplayer                                    clr = _global.color(LingoNumber(0),LingoNumber(0),LingoNumber(0))                if LingoGlobal.op_ne_b(propdata.settings.findpos(color), LingoGlobal.VOID):                     if propdata.settings.color > LingoNumber(0):                         clr = _movieScript.gPEcolors[propdata.settings.color]                                                            match propdata.tp.lower():                     case "rope":                        _global.member("propsImage").image.copypixels(mem.image,LingoGlobal.op_sub(prop[LingoNumber(4)],camposquad),mem.image.rect,LingoPropertyList(dict(ink = LingoNumber(36),blend = blnd)))
                        q = LingoNumber(1)                        while LingoGlobal.ToBool(LingoGlobal.op_lt(q,prop[LingoNumber(5)].points.count)):                             adaptedpos = prop[LingoNumber(5)].points[q]                            adaptedpos = LingoGlobal.op_sub(adaptedpos,LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(20.0000)))                            adaptedpos = LingoGlobal.op_div(LingoGlobal.op_mul(adaptedpos,LingoNumber(16.0000)),LingoNumber(20.0000))                            _global.member("propsImage").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoGlobal.op_sub(adaptedpos,LingoGlobal.point(LingoNumber(1),LingoNumber(1))),LingoGlobal.op_add(adaptedpos,LingoGlobal.point(LingoNumber(2),LingoNumber(2)))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = propdata.previewcolor)))
                            q = LingoGlobal.op_add(q,propdata.previewevery)                                                                        case "varieddecal" | "variedsoft" | "variedstandard":                        self.updatevariedpreview(propdata,prop[LingoNumber(5)].settings.variation)
                        _global.member("propsImage").image.copypixels(mem.image,LingoGlobal.op_sub(prop[LingoNumber(4)],camposquad),mem.image.rect,LingoPropertyList(dict(ink = LingoNumber(36),blend = blnd,color = clr)))                    case _:                         _global.member("propsImage").image.copypixels(mem.image,LingoGlobal.op_sub(prop[LingoNumber(4)],camposquad),mem.image.rect,LingoPropertyList(dict(ink = LingoNumber(36),blend = blnd,color = clr)))                                                else:                match propdata.tp.lower():                     case "rope":                        _global.member("propsImage2").image.copypixels(mem.image,LingoGlobal.op_sub(prop[LingoNumber(4)],camposquad),mem.image.rect,LingoPropertyList(dict(ink = LingoNumber(36),blend = blnd,color = clr)))
                        q = LingoNumber(1)                        while LingoGlobal.ToBool(LingoGlobal.op_lt(q,prop[LingoNumber(5)].points.count)):                             adaptedpos = prop[LingoNumber(5)].points[q]                            adaptedpos = LingoGlobal.op_sub(adaptedpos,LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(20.0000)))                            adaptedpos = LingoGlobal.op_div(LingoGlobal.op_mul(adaptedpos,LingoNumber(16.0000)),LingoNumber(20.0000))                            _global.member("propsImage2").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoGlobal.op_sub(adaptedpos,LingoGlobal.point(LingoNumber(1),LingoNumber(1))),LingoGlobal.op_add(adaptedpos,LingoGlobal.point(LingoNumber(2),LingoNumber(2)))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = propdata.previewcolor)))
                            q = LingoGlobal.op_add(q,propdata.previewevery)                                                                        case "varieddecal" | "variedsoft" | "variedstandard":                        self.updatevariedpreview(propdata,prop[LingoNumber(5)].settings.variation)
                        _global.member("propsImage2").image.copypixels(mem.image,LingoGlobal.op_sub(prop[LingoNumber(4)],camposquad),mem.image.rect,LingoPropertyList(dict(ink = LingoNumber(36),blend = blnd,color = clr)))                    case _:                         _global.member("propsImage2").image.copypixels(mem.image,LingoGlobal.op_sub(prop[LingoNumber(4)],camposquad),mem.image.rect,LingoPropertyList(dict(ink = LingoNumber(36),blend = blnd,color = clr)))                                                tmp_p = p                    for tmp_q in LingoGlobal.pyrange(displaylayer, layer):             q = tmp_q            _global.member("propsImage").image.copypixels(LingoImage.Pxl,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoGlobal.op_mul(LingoNumber(52),LingoNumber(16)),LingoGlobal.op_mul(LingoNumber(40),LingoNumber(16))),LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(blend = LingoNumber(10),color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)))))
            tmp_q = q                    if LingoGlobal.op_ne_b(_movieScript.propSettings, LingoGlobal.VOID):             if LingoList("variedDecal","variedSoft","variedStandard").getpos(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv].tp) > LingoNumber(0):                 self.updatevariedpreview(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv],_movieScript.propSettings.variation)                            return None            def checkkey(self, key):         rtrn = None        rtrn = LingoNumber(0)        _movieScript.gPEprops.keys[LingoGlobal.symbol(key)] = LingoGlobal.op_and(_global._key.keypressed(key),LingoGlobal.op_ne(_global._movie.window.sizestate,minimized))        if (LingoGlobal.ToBool(_movieScript.gPEprops.keys[LingoGlobal.symbol(key)]) and LingoGlobal.op_eq_b(_movieScript.gPEprops.lastkeys[LingoGlobal.symbol(key)], LingoNumber(0))):             rtrn = LingoNumber(1)                    _movieScript.gPEprops.lastkeys[LingoGlobal.symbol(key)] = _movieScript.gPEprops.keys[LingoGlobal.symbol(key)]        return rtrn                    def isdecal(self, prop):         if (LingoGlobal.op_eq_b(prop.tp, "simpleDecal") or LingoGlobal.op_eq_b(prop.tp, "variedDecal")):             return LingoNumber(1)                    else:            return LingoNumber(0)                            return None            def updatepropmenu(self, mv):         txt = None        pr = None        prp = None        nt = None        if (LingoGlobal.op_eq_b(mv, LingoGlobal.VOID) or LingoGlobal.op_eq_b(mv, _global.script("propEditor"))):             mv = LingoGlobal.point(LingoNumber(0),LingoNumber(0))                    _movieScript.gPEprops.pmpos = LingoGlobal.op_add(_movieScript.gPEprops.pmpos,mv)        if LingoGlobal.op_ne_b(mv.loch, LingoNumber(0)):             if _movieScript.gPEprops.pmpos.loch < LingoNumber(1):                 _movieScript.gPEprops.pmpos.loch = _movieScript.gProps.count                            elif _movieScript.gPEprops.pmpos.loch > _movieScript.gProps.count:                 _movieScript.gPEprops.pmpos.loch = LingoNumber(1)                            _movieScript.gPEprops.pmpos.locv = _movieScript.gPEprops.pmsavposl[_movieScript.gPEprops.pmpos.loch]                    elif LingoGlobal.op_ne_b(mv.locv, LingoNumber(0)):             if _movieScript.gPEprops.pmpos.locv < LingoNumber(1):                 _movieScript.gPEprops.pmpos.locv = _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps.count                            elif _movieScript.gPEprops.pmpos.locv > _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps.count:                 _movieScript.gPEprops.pmpos.locv = LingoNumber(1)                            _movieScript.gPEprops.pmsavposl[_movieScript.gPEprops.pmpos.loch] = _movieScript.gPEprops.pmpos.locv                    if LingoGlobal.op_sub(_movieScript.gPEprops.pmpos.locv,LingoNumber(5)) < _movieScript.peScrollPos:             _movieScript.peScrollPos = LingoGlobal.op_sub(_movieScript.gPEprops.pmpos.locv,LingoNumber(5))                    elif LingoGlobal.op_sub(_movieScript.gPEprops.pmpos.locv,LingoNumber(15)) > _movieScript.peScrollPos:             _movieScript.peScrollPos = LingoGlobal.op_sub(_movieScript.gPEprops.pmpos.locv,LingoNumber(15))                    _movieScript.peScrollPos = _movieScript.restrict(_movieScript.peScrollPos,LingoNumber(0),_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps.count)        txt = ""        txt += str(LingoGlobal.concat_space("[",_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].nm,"]"))        txt += str(LingoGlobal.RETURN)        for tmp_pr in LingoGlobal.pyrange(LingoGlobal.op_add(LingoNumber(1),_movieScript.peScrollPos), LingoGlobal.op_add(LingoNumber(21),_movieScript.peScrollPos)):             pr = tmp_pr            if pr > _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps.count:                 break                            elif LingoGlobal.op_eq_b(pr, _movieScript.gPEprops.pmpos.locv):                 txt += str(LingoGlobal.concat_space("-",_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[pr].nm,"-",LingoGlobal.RETURN))                            else:                txt += str(LingoGlobal.concat_space(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[pr].nm,LingoGlobal.RETURN))                            tmp_pr = pr                    prp = LingoGlobal.VOID        if (((_movieScript.gPEprops.pmpos.loch <= _movieScript.gProps.count and _movieScript.gPEprops.pmpos.loch > LingoNumber(0)) and _movieScript.gPEprops.pmpos.locv > LingoNumber(0)) and _movieScript.gPEprops.pmpos.locv <= _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps.count):             prp = _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv]                    if (LingoGlobal.op_ne_b(prp, LingoGlobal.VOID) and prp.notes.count > LingoNumber(0)):             txt += str(LingoGlobal.RETURN)            txt += str(LingoGlobal.RETURN)            txt += str("NOTES")            txt += str(LingoGlobal.RETURN)            for tmp_nt in prp.notes:                 nt = tmp_nt                txt += str(nt)                txt += str(LingoGlobal.RETURN)                                    _global.member("propMenu").text = txt        self.newpropselected()        return None            def updatepropsettings(self, mv):         editedproptemplate = None        adress = None        mn = None        txt = None        st = None        nm = None        p = None        t = None        if LingoGlobal.op_eq_b(_movieScript.editSettingsProp, LingoNumber(0)):             editedproptemplate = _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv]                    else:            adress = _movieScript.gPEprops.props[_movieScript.editSettingsProp][LingoNumber(3)]            editedproptemplate = _movieScript.gProps[adress.loch].prps[adress.locv]                    if LingoGlobal.op_eq_b(_movieScript.propSettings, LingoGlobal.VOID):             self.duplicatepropsettings()        _movieScript.settingCursor = LingoGlobal.op_add(_movieScript.settingCursor,mv.locv)        if LingoGlobal.op_ne_b(mv.locv, LingoNumber(0)):             if _movieScript.settingCursor < LingoNumber(1):                 _movieScript.settingCursor = _movieScript.propSettings.count                            elif _movieScript.settingCursor > _movieScript.propSettings.count:                 _movieScript.settingCursor = LingoNumber(1)                                    if LingoGlobal.op_ne_b(mv.loch, LingoNumber(0)):             match _movieScript.propSettings.getpropat(_movieScript.settingCursor).str.lower():                 case "release":                    _movieScript.propSettings[_movieScript.settingCursor] = _movieScript.restrict(LingoGlobal.op_add(_movieScript.propSettings[_movieScript.settingCursor],mv.loch),-LingoNumber(1),LingoNumber(1))                                    case "renderorder":                    _movieScript.propSettings[_movieScript.settingCursor] = LingoGlobal.op_add(_movieScript.propSettings[_movieScript.settingCursor],mv.loch)                                    case "seed":                    _movieScript.propSettings[_movieScript.settingCursor] = LingoGlobal.op_mod(_global._system.milliseconds,LingoNumber(1000))                                    case "rendertime":                    if LingoGlobal.op_eq_b(_movieScript.propSettings[_movieScript.settingCursor], LingoNumber(0)):                         _movieScript.propSettings[_movieScript.settingCursor] = LingoNumber(1)                                            else:                        _movieScript.propSettings[_movieScript.settingCursor] = LingoNumber(0)                                                            case "thickness":                    _movieScript.propSettings[_movieScript.settingCursor] = _movieScript.restrict(LingoGlobal.op_add(_movieScript.propSettings[_movieScript.settingCursor],LingoGlobal.op_mul(mv.loch,LingoNumber(0.2500))),LingoNumber(1),LingoNumber(5))                                    case "variation":                    _movieScript.propSettings[_movieScript.settingCursor] = LingoGlobal.op_add(_movieScript.propSettings[_movieScript.settingCursor],mv.loch)                    mn = LingoGlobal.op_sub(LingoNumber(1),editedproptemplate.random)                    if _movieScript.propSettings[_movieScript.settingCursor] < mn:                         _movieScript.propSettings[_movieScript.settingCursor] = _movieScript.settingsPropType.vars                                            elif _movieScript.propSettings[_movieScript.settingCursor] > _movieScript.settingsPropType.vars:                         _movieScript.propSettings[_movieScript.settingCursor] = mn                                            self.updatevariedpreview(_movieScript.settingsPropType,_movieScript.propSettings[_movieScript.settingCursor])                case "customdepth":                    _movieScript.propSettings[_movieScript.settingCursor] = LingoGlobal.op_add(_movieScript.propSettings[_movieScript.settingCursor],mv.loch)                    if _movieScript.propSettings[_movieScript.settingCursor] < LingoNumber(1):                         _movieScript.propSettings[_movieScript.settingCursor] = LingoNumber(30)                                            elif _movieScript.propSettings[_movieScript.settingCursor] > LingoNumber(30):                         _movieScript.propSettings[_movieScript.settingCursor] = LingoNumber(1)                                                            case "applycolor":                    _movieScript.propSettings[_movieScript.settingCursor] = LingoGlobal.op_sub(LingoNumber(1),_movieScript.propSettings[_movieScript.settingCursor])                                    case "color":                    _movieScript.propSettings[_movieScript.settingCursor] = LingoGlobal.op_add(_movieScript.propSettings[_movieScript.settingCursor],mv.loch)                    if _movieScript.propSettings[_movieScript.settingCursor] < LingoNumber(0):                         _movieScript.propSettings[_movieScript.settingCursor] = _movieScript.gPEcolors.count                                            elif _movieScript.propSettings[_movieScript.settingCursor] > _movieScript.gPEcolors.count:                         _movieScript.propSettings[_movieScript.settingCursor] = LingoNumber(0)                                                                                txt = ""        txt += str(editedproptemplate.nm)        txt += str(LingoGlobal.RETURN)        txt += str("SETTINGS")        txt += str(LingoGlobal.RETURN)        txt += str("(press 'N' to exit)")        txt += str(LingoGlobal.RETURN)        for tmp_st in LingoGlobal.pyrange(LingoNumber(1), _movieScript.propSettings.count):             st = tmp_st            nm = _movieScript.propSettings.getpropat(st).str            txt += str(LingoGlobal.concat(nm," "))            txt += str(LingoGlobal.RETURN)            p = _movieScript.propSettings[st]            t = ""            match nm.lower():                 case "release":                    if LingoGlobal.op_eq_b(p, -LingoNumber(1)):                         t = "left"                                            elif LingoGlobal.op_eq_b(p, LingoNumber(1)):                         t = "right"                                            else:                        t = "none"                                                            case "rendertime":                    if LingoGlobal.op_eq_b(p, LingoNumber(0)):                         t = "Pre Effects"                                            else:                        t = "Post Effects"                                                            case "variation":                    if LingoGlobal.op_eq_b(_movieScript.propSettings[st], LingoNumber(0)):                         t = "random"                                            else:                        t = _movieScript.propSettings[st].str                                                            case "applycolor":                    if LingoGlobal.op_eq_b(_movieScript.propSettings[st], LingoNumber(0)):                         t = "NO"                                            else:                        t = "YES"                                                            case "color":                    if LingoGlobal.op_eq_b(_movieScript.propSettings[st], LingoNumber(0)):                         t = "NONE"                                            else:                        t = _movieScript.gPEcolors[_movieScript.propSettings[st]][LingoNumber(1)]                                                            case _:                     t = _movieScript.propSettings[st].str                                                if LingoGlobal.op_eq_b(st, _movieScript.settingCursor):                 txt += str(LingoGlobal.concat(">",t,"<   "))                            else:                txt += str(t)                            txt += str(LingoGlobal.RETURN)            txt += str(LingoGlobal.RETURN)            tmp_st = st                    _global.member("propMenu").text = txt                return None            def newpropselected(self):         prop = None        q = None        self.resettransformation()
        self.duplicatepropsettings()
        prop = LingoGlobal.VOID        if (((_movieScript.gPEprops.pmpos.loch <= _movieScript.gProps.count and _movieScript.gPEprops.pmpos.loch > LingoNumber(0)) and _movieScript.gPEprops.pmpos.locv > LingoNumber(0)) and _movieScript.gPEprops.pmpos.locv <= _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps.count):             prop = _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv]                    if LingoGlobal.op_ne_b(_movieScript.peSavedRotat, -LingoNumber(1)):             _movieScript.gPEprops.proprotation = _movieScript.peSavedRotat                    if LingoGlobal.op_ne_b(_movieScript.peSavedStretch.loch, LingoNumber(0)):             _movieScript.gPEprops.propstretchx = _movieScript.peSavedStretch.loch                    if LingoGlobal.op_ne_b(_movieScript.peSavedStretch.locv, LingoNumber(0)):             _movieScript.gPEprops.propstretchy = _movieScript.peSavedStretch.locv                    if LingoGlobal.op_ne_b(_movieScript.peSavedFlip.loch, LingoNumber(0)):             _movieScript.gPEprops.propflipx = _movieScript.peSavedFlip.loch                    if LingoGlobal.op_ne_b(_movieScript.peSavedFlip.locv, LingoNumber(0)):             _movieScript.gPEprops.propflipy = _movieScript.peSavedFlip.locv                    _movieScript.propSettings.rendertime = LingoNumber(0)        _movieScript.snapToGrid = LingoNumber(0)        _movieScript.preciseSnap = LingoNumber(0)        if LingoGlobal.op_eq_b(_movieScript.stg, LingoNumber(1)):             _movieScript.snapToGrid = LingoNumber(1)                    if LingoGlobal.op_eq_b(_movieScript.ps, LingoNumber(1)):             _movieScript.preciseSnap = LingoNumber(1)                    if LingoGlobal.op_ne_b(prop, LingoGlobal.VOID):             for tmp_q in LingoGlobal.pyrange(LingoNumber(1), prop.tags.count):                 q = tmp_q                match prop.tags[q].lower():                     case "posteffects":                        _movieScript.propSettings.rendertime = LingoNumber(1)                                            case "snaptogrid":                        _movieScript.snapToGrid = LingoNumber(1)                                            case "precisesnap":                        _movieScript.preciseSnap = LingoNumber(1)                                                            tmp_q = q                            _global.member("Drought Reserve text").text = ""            self.applytransformationtags()
            if LingoGlobal.op_eq_b(prop.tp, "rope"):                 self.resetropeprop()            if LingoList("variedDecal","variedSoft","variedStandard").getpos(prop.tp) > LingoNumber(0):                 self.updatevariedpreview(prop,_movieScript.propSettings.variation)            self.updateworklayertext()                return None            def applytransformationtags(self):         prop = None        q = None        self.resettransformation()
        _movieScript.peSavedRotat = -LingoNumber(1)        _movieScript.peSavedFlip = LingoGlobal.point(LingoNumber(0),LingoNumber(0))        _movieScript.peSavedStretch = LingoGlobal.point(LingoNumber(0),LingoNumber(0))        prop = _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv]        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), prop.tags.count):             q = tmp_q            match prop.tags[q].lower():                 case "randomrotat":                    _movieScript.peSavedRotat = _movieScript.gPEprops.proprotation                    _movieScript.gPEprops.proprotation = _global.random(LingoNumber(360))                                    case "randomflipx":                    if LingoGlobal.op_eq_b(_global.random(LingoNumber(2)), LingoNumber(1)):                         _movieScript.peSavedFlip.loch = _movieScript.gPEprops.propflipx                        _movieScript.gPEprops.propflipx = -_movieScript.gPEprops.propflipx                                                            case "randomflipy":                    if LingoGlobal.op_eq_b(_global.random(LingoNumber(2)), LingoNumber(1)):                         _movieScript.peSavedFlip.locv = _movieScript.gPEprops.propflipy                        _movieScript.gPEprops.propflipy = -_movieScript.gPEprops.propflipy                                                                        tmp_q = q                    match prop.tp.lower():             case "long":                _movieScript.peSavedStretch = LingoGlobal.point(_movieScript.gPEprops.propstretchx,_movieScript.gPEprops.propstretchy)                _movieScript.gPEprops.proprotation = LingoNumber(0)                _movieScript.gPEprops.propflipx = LingoNumber(1)                _movieScript.gPEprops.propflipy = LingoNumber(1)                _movieScript.gPEprops.propstretchx = LingoNumber(1)                _movieScript.gPEprops.propstretchy = LingoNumber(1)                                            return None            def resettransformation(self):         if LingoGlobal.op_ne_b(_movieScript.peSavedRotat, -LingoNumber(1)):             _movieScript.gPEprops.proprotation = _movieScript.peSavedRotat                    if LingoGlobal.op_ne_b(_movieScript.peSavedFlip.loch, LingoNumber(0)):             _movieScript.gPEprops.propflipx = _movieScript.peSavedFlip.loch                    if LingoGlobal.op_ne_b(_movieScript.peSavedFlip.locv, LingoNumber(0)):             _movieScript.gPEprops.propflipy = _movieScript.peSavedFlip.locv                    if LingoGlobal.op_ne_b(_movieScript.peSavedStretch.loch, LingoNumber(0)):             _movieScript.gPEprops.propstretchx = _movieScript.peSavedStretch.loch                    if LingoGlobal.op_ne_b(_movieScript.peSavedStretch.locv, LingoNumber(0)):             _movieScript.gPEprops.propstretchx = _movieScript.peSavedStretch.locv                            return None            def resetropeprop(self):         prop = None        dir = None        perp = None        mem = None        scalefac = None        qd = None        offsetpnt = None        pa = None        pb = None        colldep = None        cd = None        prop = _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv]        if LingoGlobal.op_eq_b(_movieScript.gPEprops.proprotation, LingoNumber(0)):             dir = LingoGlobal.point(LingoNumber(0),-LingoNumber(1))            perp = LingoGlobal.point(LingoNumber(1),LingoNumber(0))                    elif LingoGlobal.op_eq_b(_movieScript.gPEprops.proprotation, LingoNumber(90)):             dir = LingoGlobal.point(LingoNumber(1),LingoNumber(0))            perp = LingoGlobal.point(LingoNumber(0),LingoNumber(1))                    elif LingoGlobal.op_eq_b(_movieScript.gPEprops.proprotation, LingoNumber(180)):             dir = LingoGlobal.point(LingoNumber(0),LingoNumber(1))            perp = LingoGlobal.point(-LingoNumber(1),LingoNumber(0))                    elif LingoGlobal.op_eq_b(_movieScript.gPEprops.proprotation, LingoNumber(270)):             dir = LingoGlobal.point(-LingoNumber(1),LingoNumber(0))            perp = LingoGlobal.point(LingoNumber(0),-LingoNumber(1))                    else:            dir = _movieScript.degtovec(_movieScript.gPEprops.proprotation)            perp = _movieScript.givedirfor90degrtoline(-dir,dir)                    mem = self.proppreviewmember(_movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv])        scalefac = LingoGlobal.op_div(LingoNumber(16.0000),LingoNumber(20.0000))        qd = LingoList(_movieScript.peMousePos,_movieScript.peMousePos,_movieScript.peMousePos,_movieScript.peMousePos)        qd[LingoNumber(1)] = LingoGlobal.op_sub(LingoGlobal.op_add(qd[LingoNumber(1)],LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(dir,mem.rect.height),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchy),scalefac),_movieScript.gPEprops.propflipy)),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.rect.width),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchx),scalefac),_movieScript.gPEprops.propflipx))        qd[LingoNumber(2)] = LingoGlobal.op_add(LingoGlobal.op_add(qd[LingoNumber(2)],LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(dir,mem.rect.height),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchy),scalefac),_movieScript.gPEprops.propflipy)),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.rect.width),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchx),scalefac),_movieScript.gPEprops.propflipx))        qd[LingoNumber(3)] = LingoGlobal.op_add(LingoGlobal.op_sub(qd[LingoNumber(3)],LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(dir,mem.rect.height),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchy),scalefac),_movieScript.gPEprops.propflipy)),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.rect.width),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchx),scalefac),_movieScript.gPEprops.propflipx))        qd[LingoNumber(4)] = LingoGlobal.op_sub(LingoGlobal.op_sub(qd[LingoNumber(4)],LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(dir,mem.rect.height),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchy),scalefac),_movieScript.gPEprops.propflipy)),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_mul(perp,mem.rect.width),LingoNumber(0.5000)),_movieScript.gPEprops.propstretchx),scalefac),_movieScript.gPEprops.propflipx))        offsetpnt = LingoGlobal.op_add(LingoGlobal.point(-LingoNumber(16),-LingoNumber(16)),LingoGlobal.op_mul(_movieScript.gLEProps.campos,LingoNumber(16)))        qd = LingoGlobal.op_add(qd,LingoList(offsetpnt,offsetpnt,offsetpnt,offsetpnt))        qd = LingoGlobal.op_mul(qd,LingoGlobal.op_div(LingoNumber(20.0000),LingoNumber(16.0000)))        pa = LingoGlobal.op_div(LingoGlobal.op_add(qd[LingoNumber(1)],qd[LingoNumber(4)]),LingoNumber(2.0000))        pb = LingoGlobal.op_div(LingoGlobal.op_add(qd[LingoNumber(2)],qd[LingoNumber(3)]),LingoNumber(2.0000))        colldep = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_mul(LingoGlobal.op_sub(_movieScript.gPEprops.worklayer,LingoNumber(1)),LingoNumber(10)),_movieScript.gPEprops.depth),prop.collisiondepth)        if colldep < LingoNumber(10):             cd = LingoNumber(1)                    elif colldep < LingoNumber(20):             cd = LingoNumber(2)                    else:            cd = LingoNumber(3)                    _global.script("ropeModel").resetropemodel(pa,pb,prop,_movieScript.gPEprops.propstretchy,cd,_movieScript.propSettings.release)        return None            def updatevariedpreview(self, prop, var):         mem = None        tileasprop = None        q = None        imprtmem = None        sz = None        v2 = None        c = None        c2 = None        getrect = None        mem = self.proppreviewmember(prop)        tileasprop = LingoNumber(0)        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), prop.tags.count):             q = tmp_q            if LingoGlobal.op_eq_b(prop.tags[q], "Tile"):                 tileasprop = LingoNumber(1)                break                            tmp_q = q                    imprtmem = _global.member("previewImprt")        if LingoGlobal.ToBool(tileasprop):             _global.member("previewImprt").importfileinto(LingoGlobal.concat("Graphics",_global.the_dirSeparator,prop.nm,".png"))        else:            _global.member("previewImprt").importfileinto(LingoGlobal.concat("Props",_global.the_dirSeparator,prop.nm,".png"))        imprtmem.name = "previewImprt"        if LingoGlobal.ToBool(_movieScript.checkdrinternal(prop.nm)):             imprtmem.image = _global.member(prop.nm).image                    if LingoGlobal.op_eq_b(prop.tp, "variedStandard"):             sz = LingoGlobal.op_mul(prop.sz,LingoNumber(20.0000))                    else:            sz = prop.pxlsize                    mem.image = _global.image(sz.loch,sz.locv,LingoNumber(16))        if LingoGlobal.op_eq_b(prop.tp, "variedStandard"):             if LingoGlobal.op_eq_b(var, LingoNumber(0)):                 for tmp_v2 in LingoGlobal.pyrange(LingoNumber(1), prop.vars):                     v2 = tmp_v2                    for tmp_c in LingoGlobal.pyrange(LingoNumber(1), prop.repeatl.count):                         c = tmp_c                        c2 = LingoGlobal.op_sub(LingoGlobal.op_add(prop.repeatl.count,LingoNumber(1)),c)                        getrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),LingoGlobal.op_sub(v2,LingoNumber(1))),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_sub(c2,LingoNumber(1)),prop.sz.locv),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),v2),LingoGlobal.op_mul(LingoGlobal.op_mul(c2,prop.sz.locv),LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1)))                        mem.image.copypixels(LingoImage.Pxl,mem.image.rect,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),blend = LingoGlobal.op_div(LingoNumber(80.0000),prop.repeatl.count))))
                        mem.image.copypixels(imprtmem.image,mem.image.rect,getrect,LingoPropertyList(dict(ink = LingoNumber(36))))
                        tmp_c = c                                            tmp_v2 = v2                                                else:                for tmp_c in LingoGlobal.pyrange(LingoNumber(1), prop.repeatl.count):                     c = tmp_c                    c2 = LingoGlobal.op_sub(LingoGlobal.op_add(prop.repeatl.count,LingoNumber(1)),c)                    getrect = LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),LingoGlobal.op_sub(var,LingoNumber(1))),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_sub(c2,LingoNumber(1)),prop.sz.locv),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),var),LingoGlobal.op_mul(LingoGlobal.op_mul(c2,prop.sz.locv),LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1)))                    mem.image.copypixels(LingoImage.Pxl,mem.image.rect,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),blend = LingoGlobal.op_div(LingoNumber(80.0000),prop.repeatl.count))))
                    mem.image.copypixels(imprtmem.image,mem.image.rect,getrect,LingoPropertyList(dict(ink = LingoNumber(36))))
                    tmp_c = c                                                        elif LingoGlobal.op_eq_b(var, LingoNumber(0)):             for tmp_v2 in LingoGlobal.pyrange(LingoNumber(1), prop.vars):                 v2 = tmp_v2                mem.image.copypixels(imprtmem.image,mem.image.rect,LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(sz.loch,LingoGlobal.op_sub(v2,LingoNumber(1))),LingoNumber(0),LingoGlobal.op_mul(sz.loch,v2),sz.locv),LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1))),LingoPropertyList(dict(ink = LingoNumber(36))))
                tmp_v2 = v2                                    else:            mem.image.copypixels(imprtmem.image,mem.image.rect,LingoGlobal.op_add(LingoGlobal.rect(LingoGlobal.op_mul(sz.loch,LingoGlobal.op_sub(var,LingoNumber(1))),LingoNumber(0),LingoGlobal.op_mul(sz.loch,var),sz.locv),LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1))))                return None            def proppreviewmember(self, prop):         q = None        tileasprop = None        sav2 = None        newmem = None        c = None        c2 = None        getrect = None        if LingoGlobal.op_eq_b(_movieScript.loadedPropPreviews, LingoGlobal.VOID):             _movieScript.loadedPropPreviews = LingoList()                    for tmp_q in LingoGlobal.pyrange(LingoNumber(1), _movieScript.loadedPropPreviews.count):             q = tmp_q            if LingoGlobal.op_eq_b(_movieScript.loadedPropPreviews[q], prop.nm):                 return _global.member(LingoGlobal.concat_space("propPreview",prop.nm))                            tmp_q = q                    tileasprop = LingoNumber(0)        for tmp_q in LingoGlobal.pyrange(LingoNumber(1), prop.tags.count):             q = tmp_q            if LingoGlobal.op_eq_b(prop.tags[q], "Tile"):                 tileasprop = LingoNumber(1)                break                            tmp_q = q                    sav2 = _global.member("previewImprt")        if LingoGlobal.ToBool(tileasprop):             _global.member("previewImprt").importfileinto(LingoGlobal.concat("Graphics",_global.the_dirSeparator,prop.nm,".png"))        else:            _global.member("previewImprt").importfileinto(LingoGlobal.concat("Props",_global.the_dirSeparator,prop.nm,".png"))        sav2.name = "previewImprt"        if LingoGlobal.ToBool(_movieScript.checkdrinternal(prop.nm)):             sav2.image = _global.member(prop.nm).image            _global.member("previewImprt").image = _global.member(prop.nm).image                    newmem = _global.new_castlib(bitmap,"customMems")        match prop.tp.lower():             case "standard":                newmem.image = _global.image(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),LingoGlobal.op_mul(prop.sz.locv,LingoNumber(20)),LingoNumber(16))                for tmp_c in LingoGlobal.pyrange(LingoNumber(1), prop.repeatl.count):                     c = tmp_c                    c2 = LingoGlobal.op_sub(LingoGlobal.op_add(prop.repeatl.count,LingoNumber(1)),c)                    getrect = LingoGlobal.op_add(LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_sub(c2,LingoNumber(1)),prop.sz.locv),LingoNumber(20)),LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_mul(c2,prop.sz.locv),LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1)))                    newmem.image.copypixels(LingoImage.Pxl,newmem.image.rect,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),blend = LingoGlobal.op_div(LingoNumber(80.0000),prop.repeatl.count))))
                    newmem.image.copypixels(_global.member("previewImprt").image,newmem.image.rect,getrect,LingoPropertyList(dict(ink = LingoNumber(36))))
                    tmp_c = c                                                case "simpledecal" | "soft" | "softeffect" | "antimatter" | "coloredsoft":                newmem.image = _global.image(_global.member("previewImprt").image.width,_global.member("previewImprt").image.height,LingoNumber(16))                newmem.image.copypixels(_global.member("previewImprt").image,newmem.image.rect,_global.member("previewImprt").image.rect)            case "varieddecal" | "variedsoft":                newmem.image = _global.image(prop.pxlsize.loch,prop.pxlsize.locv,LingoNumber(16))                newmem.image.copypixels(_global.member("previewImprt").image,newmem.image.rect,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),prop.pxlsize.loch,prop.pxlsize.locv))            case "variedstandard":                newmem.image = _global.image(LingoGlobal.op_mul(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),prop.vars),LingoGlobal.op_mul(prop.sz.locv,LingoNumber(20)),LingoNumber(16))                for tmp_c in LingoGlobal.pyrange(LingoNumber(1), prop.repeatl.count):                     c = tmp_c                    c2 = LingoGlobal.op_sub(LingoGlobal.op_add(prop.repeatl.count,LingoNumber(1)),c)                    getrect = LingoGlobal.op_add(LingoGlobal.rect(LingoNumber(0),LingoGlobal.op_mul(LingoGlobal.op_mul(LingoGlobal.op_sub(c2,LingoNumber(1)),prop.sz.locv),LingoNumber(20)),LingoGlobal.op_mul(LingoGlobal.op_mul(prop.sz.loch,LingoNumber(20)),prop.vars),LingoGlobal.op_mul(LingoGlobal.op_mul(c2,prop.sz.locv),LingoNumber(20))),LingoGlobal.rect(LingoNumber(0),LingoNumber(1),LingoNumber(0),LingoNumber(1)))                    newmem.image.copypixels(LingoImage.Pxl,newmem.image.rect,LingoGlobal.rect(LingoNumber(0),LingoNumber(0),LingoNumber(1),LingoNumber(1)),LingoPropertyList(dict(color = _global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),blend = LingoGlobal.op_div(LingoNumber(80.0000),prop.repeatl.count))))
                    newmem.image.copypixels(_global.member("previewImprt").image,newmem.image.rect,getrect,LingoPropertyList(dict(ink = LingoNumber(36))))
                    tmp_c = c                                                case "rope" | "long":                newmem.image = _global.image(_global.member("previewImprt").image.width,_global.member("previewImprt").image.height,LingoNumber(16))                newmem.image.copypixels(_global.member("previewImprt").image,newmem.image.rect,_global.member("previewImprt").image.rect)                    newmem.name = LingoGlobal.concat_space("propPreview",prop.nm)        _movieScript.loadedPropPreviews.add(prop.nm)
        return newmem                    def duplicatepropsettings(self):         doit = None        prp = None        doit = LingoGlobal.op_eq(_movieScript.settingsPropType,LingoGlobal.VOID)        prp = LingoGlobal.VOID        if (((_movieScript.gPEprops.pmpos.loch <= _movieScript.gProps.count and _movieScript.gPEprops.pmpos.loch > LingoNumber(0)) and _movieScript.gPEprops.pmpos.locv > LingoNumber(0)) and _movieScript.gPEprops.pmpos.locv <= _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps.count):             prp = _movieScript.gProps[_movieScript.gPEprops.pmpos.loch].prps[_movieScript.gPEprops.pmpos.locv]                    if LingoGlobal.op_ne_b(prp, LingoGlobal.VOID):             if LingoGlobal.op_eq_b(doit, LingoNumber(0)):                 if LingoGlobal.op_ne_b(_movieScript.settingsPropType.nm, prp.nm):                     doit = LingoNumber(1)                                                if LingoGlobal.ToBool(doit):                 _movieScript.propSettings = prp.settings.duplicate()                _movieScript.propSettings.seed = _global.random(LingoNumber(1000))                _movieScript.settingsPropType = prp                                            return None            