from Drizzle.Runtime import *## Behavior script: levelOverview#class levelOverview(LingoBehaviorScript):     def __init__(self):         super().__init__()            def exitframe(self):         lc = None        if LingoGlobal.ToBool(self._movieScript.showControls):             self._global.sprite(LingoNumber(120)).blend = LingoNumber(100)            self._global.sprite(LingoNumber(121)).blend = LingoNumber(100)            self._global.sprite(LingoNumber(150)).blend = LingoNumber(100)            self._global.sprite(LingoNumber(151)).blend = LingoNumber(100)                    else:            self._global.sprite(LingoNumber(120)).blend = LingoNumber(0)            self._global.sprite(LingoNumber(121)).blend = LingoNumber(0)            self._global.sprite(LingoNumber(150)).blend = LingoNumber(0)            self._global.sprite(LingoNumber(151)).blend = LingoNumber(0)                    self._movieScript.gLOprops.lastmouse = self._movieScript.gLOprops.mouse        self._movieScript.gLOprops.mouse = self._global._mouse.mousedown        if LingoGlobal.ToBool(LingoGlobal.op_mul(self._movieScript.gLOprops.mouse,LingoGlobal.op_eq(self._movieScript.gLOprops.lastmouse,LingoNumber(0)))):             self._movieScript.gLOprops.mouseclick = LingoNumber(1)                    if LingoGlobal.op_eq_b(self._movieScript.gLOprops.mouse, LingoNumber(0)):             self._movieScript.gLOprops.mouseclick = LingoNumber(0)                    lc = LingoGlobal.op_add(self._global._mouse.mouseloc,LingoGlobal.point(LingoNumber(30),LingoNumber(30)))        if lc.loch > LingoGlobal.op_sub(LingoNumber(1366),LingoNumber(300)):             lc.loch = LingoGlobal.op_sub(LingoNumber(1366),LingoNumber(300))                    self.gotoeditor()
        self._global.go(self._global.the_frame)        return None            def buttonclicked(self, bttn):         l1 = None        curr = None        q = None        l = None        a = None        sav = None        cols = None        rows = None        maprect = None        cpos = None        match bttn.lower():             case "button geometry editor":                self._global._movie.go(LingoNumber(15))            case "button tile editor":                self._global._movie.go(LingoNumber(25))            case "button effects editor":                self._global._movie.go(LingoNumber(34))            case "button light editor":                self._global._movie.go(LingoNumber(38))            case "button render level":                self._movieScript.gViewRender = LingoNumber(1)                self._global._movie.go(LingoNumber(43))            case "button test render":                self._movieScript.newmakelevel(self._movieScript.gLoadedName)
                self._global._movie.go(LingoNumber(8))            case "button save project":                self._movieScript.levelName = self._movieScript.gLoadedName                self._global.member("projectNameInput").text = self._movieScript.gLoadedName                self._global._movie.go(LingoNumber(11))            case "button load project":                self._global._movie.go(LingoNumber(2))            case "button previous palette":                self._movieScript.gLOprops.pal = LingoGlobal.op_sub(self._movieScript.gLOprops.pal,LingoNumber(1))                if self._movieScript.gLOprops.pal < LingoNumber(1):                     self._movieScript.gLOprops.pal = self._movieScript.gLOprops.pals.count                                    self._global.sprite(LingoNumber(21)).member = self._global.member(LingoGlobal.concat("libPal",self._global.str(self._movieScript.gLOprops.pal)))                self._global.member("palName").text = self._movieScript.gLOprops.pals[self._movieScript.gLOprops.pal].name                self._movieScript.gBlurOptions = LingoPropertyList(LingoSymbol("blurlight"), self._movieScript.gLOprops.pals[self._movieScript.gLOprops.pal].blurlight,LingoSymbol("blursky"), self._movieScript.gLOprops.pals[self._movieScript.gLOprops.pal].blursky)                            case "button next palette":                self._movieScript.gLOprops.pal = LingoGlobal.op_add(self._movieScript.gLOprops.pal,LingoNumber(1))                if self._movieScript.gLOprops.pal > self._movieScript.gLOprops.pals.count:                     self._movieScript.gLOprops.pal = LingoNumber(1)                                    self._global.sprite(LingoNumber(21)).member = self._global.member(LingoGlobal.concat("libPal",self._global.str(self._movieScript.gLOprops.pal)))                self._global.member("palName").text = self._movieScript.gLOprops.pals[self._movieScript.gLOprops.pal].name                self._movieScript.gBlurOptions = LingoPropertyList(LingoSymbol("blurlight"), self._movieScript.gLOprops.pals[self._movieScript.gLOprops.pal].blurlight,LingoSymbol("blursky"), self._movieScript.gLOprops.pals[self._movieScript.gLOprops.pal].blursky)                            case "button previous ec1":                self._movieScript.gLOprops.ecol1 = LingoGlobal.op_sub(self._movieScript.gLOprops.ecol1,LingoNumber(1))                if self._movieScript.gLOprops.ecol1 < LingoNumber(1):                     self._movieScript.gLOprops.ecol1 = self._movieScript.gLOprops.totecols                                    self._global.sprite(LingoNumber(22)).member = self._global.member(LingoGlobal.concat("ecol",self._global.str(self._movieScript.gLOprops.ecol1)))                            case "button next ec1":                self._movieScript.gLOprops.ecol1 = LingoGlobal.op_add(self._movieScript.gLOprops.ecol1,LingoNumber(1))                if self._movieScript.gLOprops.ecol1 > self._movieScript.gLOprops.totecols:                     self._movieScript.gLOprops.ecol1 = LingoNumber(1)                                    self._global.sprite(LingoNumber(22)).member = self._global.member(LingoGlobal.concat("ecol",self._global.str(self._movieScript.gLOprops.ecol1)))                            case "button previous ec2":                self._movieScript.gLOprops.ecol2 = LingoGlobal.op_sub(self._movieScript.gLOprops.ecol2,LingoNumber(1))                if self._movieScript.gLOprops.ecol2 < LingoNumber(1):                     self._movieScript.gLOprops.ecol2 = self._movieScript.gLOprops.totecols                                    self._global.sprite(LingoNumber(23)).member = self._global.member(LingoGlobal.concat("ecol",self._global.str(self._movieScript.gLOprops.ecol2)))                            case "button next ec2":                self._movieScript.gLOprops.ecol2 = LingoGlobal.op_add(self._movieScript.gLOprops.ecol2,LingoNumber(1))                if self._movieScript.gLOprops.ecol2 > self._movieScript.gLOprops.totecols:                     self._movieScript.gLOprops.ecol2 = LingoNumber(1)                                    self._global.sprite(LingoNumber(23)).member = self._global.member(LingoGlobal.concat("ecol",self._global.str(self._movieScript.gLOprops.ecol2)))                            case "button more flies":                self._movieScript.gEditLizard[LingoNumber(2)] = self._movieScript.restrict(LingoGlobal.op_add(self._movieScript.gEditLizard[LingoNumber(2)],LingoNumber(1)),LingoNumber(0),LingoNumber(40))                self._global.member("addLizardFlies").text = self._global.str(self._movieScript.gEditLizard[LingoNumber(2)])                            case "button less flies":                self._movieScript.gEditLizard[LingoNumber(2)] = self._movieScript.restrict(LingoGlobal.op_sub(self._movieScript.gEditLizard[LingoNumber(2)],LingoNumber(1)),LingoNumber(0),LingoNumber(40))                self._global.member("addLizardFlies").text = self._global.str(self._movieScript.gEditLizard[LingoNumber(2)])                            case "button more time":                self._movieScript.gEditLizard[LingoNumber(3)] = self._movieScript.restrict(LingoGlobal.op_add(self._movieScript.gEditLizard[LingoNumber(3)],LingoNumber(1)),LingoNumber(0),LingoNumber(4000))                self._global.member("addLizardTime").text = self._global.str(self._movieScript.gEditLizard[LingoNumber(3)])                            case "button less time":                self._movieScript.gEditLizard[LingoNumber(3)] = self._movieScript.restrict(LingoGlobal.op_sub(self._movieScript.gEditLizard[LingoNumber(3)],LingoNumber(1)),LingoNumber(0),LingoNumber(4000))                self._global.member("addLizardTime").text = self._global.str(self._movieScript.gEditLizard[LingoNumber(3)])                            case "button super more time":                self._movieScript.gEditLizard[LingoNumber(3)] = self._movieScript.restrict(LingoGlobal.op_add(self._movieScript.gEditLizard[LingoNumber(3)],LingoNumber(100)),LingoNumber(0),LingoNumber(4000))                self._global.member("addLizardTime").text = self._global.str(self._movieScript.gEditLizard[LingoNumber(3)])                            case "button super less time":                self._movieScript.gEditLizard[LingoNumber(3)] = self._movieScript.restrict(LingoGlobal.op_sub(self._movieScript.gEditLizard[LingoNumber(3)],LingoNumber(100)),LingoNumber(0),LingoNumber(4000))                self._global.member("addLizardTime").text = self._global.str(self._movieScript.gEditLizard[LingoNumber(3)])                            case "button lizard hole":                self.nexthole()            case "button delete lizard":                if self._movieScript.gLevel.lizards.count > LingoNumber(0):                     self._movieScript.gLevel.lizards.deleteat(self._movieScript.gLevel.lizards.count)
                    self.updatelizardslist()                            case "button add lizard":                if self._movieScript.gEditLizard[LingoNumber(4)] > LingoNumber(0):                     if self._movieScript.gLevel.lizards.count < LingoNumber(4):                         self._movieScript.gLevel.lizards.add(self._movieScript.gEditLizard.duplicate())
                        self.updatelizardslist()                                    if LingoGlobal.op_ne_b(self._movieScript.gEditLizard[LingoNumber(1)], "yellow"):                     self.nexthole()                            case "button lizard color":                l1 = LingoList("pink","green","blue","white","red","yellow")                curr = LingoNumber(1)                tmp_q=int(LingoNumber(1))                while tmp_q < l1.count:                     q = tmp_q                    if LingoGlobal.op_eq_b(self._movieScript.gEditLizard[LingoNumber(1)], l1[q]):                         curr = q                        break                                            tmp_q = q                    tmp_q += 1                                    curr = LingoGlobal.op_add(curr,LingoNumber(1))                if curr > l1.count:                     curr = LingoNumber(1)                                    self._movieScript.gEditLizard[LingoNumber(1)] = l1[curr]                self._global.sprite(LingoNumber(43)).color = LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(255)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(100),LingoNumber(255)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(255),LingoNumber(200),LingoNumber(0)))[curr]                            case "button standard medium":                self._movieScript.gLevel.defaultterrain = LingoGlobal.op_sub(LingoNumber(1),self._movieScript.gLevel.defaultterrain)                self._global.sprite(LingoNumber(112)).loc = LingoGlobal.op_add(LingoGlobal.point(LingoNumber(312),LingoNumber(312)),LingoGlobal.point(LingoGlobal.op_add(-LingoNumber(1000),LingoGlobal.op_mul(LingoNumber(1000),self._movieScript.gLevel.defaultterrain)),LingoNumber(0)))                            case "button light type":                self._movieScript.gLOprops.light = LingoGlobal.op_sub(LingoNumber(1),self._movieScript.gLOprops.light)                            case "button next color glow 1":                self._movieScript.gLOprops.colglows[LingoNumber(1)] = LingoGlobal.op_add(self._movieScript.gLOprops.colglows[LingoNumber(1)],LingoNumber(1))                if self._movieScript.gLOprops.colglows[LingoNumber(1)] > LingoNumber(2):                     self._movieScript.gLOprops.colglows[LingoNumber(1)] = LingoNumber(0)                                    l = LingoList("Dull","Reflective","Superflourescent")                self._global.member("color glow effects").text = LingoGlobal.concat_space(l[LingoGlobal.op_add(self._movieScript.gLOprops.colglows[LingoNumber(1)],LingoNumber(1))],LingoGlobal.RETURN,l[LingoGlobal.op_add(self._movieScript.gLOprops.colglows[LingoNumber(2)],LingoNumber(1))])                            case "button next color glow 2":                self._movieScript.gLOprops.colglows[LingoNumber(2)] = LingoGlobal.op_add(self._movieScript.gLOprops.colglows[LingoNumber(2)],LingoNumber(1))                if self._movieScript.gLOprops.colglows[LingoNumber(2)] > LingoNumber(2):                     self._movieScript.gLOprops.colglows[LingoNumber(2)] = LingoNumber(0)                                    l = LingoList("Dull","Reflective","Superflourescent")                self._global.member("color glow effects").text = LingoGlobal.concat_space(l[LingoGlobal.op_add(self._movieScript.gLOprops.colglows[LingoNumber(1)],LingoNumber(1))],LingoGlobal.RETURN,l[LingoGlobal.op_add(self._movieScript.gLOprops.colglows[LingoNumber(2)],LingoNumber(1))])                            case "button sound editor":                self._global._movie.go(LingoNumber(18))            case "button mass render":                self._movieScript.massRenderSelectL = LingoList()                self._global._movie.go(LingoNumber(4))            case "button prop editor":                self._global._movie.go(LingoNumber(23))            case "button level size":                self._global._movie.go(LingoNumber(19))
                self._global.member("widthInput").text = self._movieScript.gLOprops.size.loch                self._global.member("heightInput").text = self._movieScript.gLOprops.size.locv                self._movieScript.newSize = LingoList(self._movieScript.gLOprops.size.loch,self._movieScript.gLOprops.size.locv,LingoNumber(0),LingoNumber(0))                self._movieScript.extraBufferTiles = self._movieScript.gLOprops.extratiles.duplicate()                self._global.member("extraTilesLeft").text = self._movieScript.extraBufferTiles[LingoNumber(1)]                self._global.member("extraTilesTop").text = self._movieScript.extraBufferTiles[LingoNumber(2)]                self._global.member("extraTilesRight").text = self._movieScript.extraBufferTiles[LingoNumber(3)]                self._global.member("extraTilesBottom").text = self._movieScript.extraBufferTiles[LingoNumber(4)]                self._global.member("addTilesTop").text = "0"                self._global.member("addTilesLeft").text = "0"                            case "button cameras":                self._global._movie.go(LingoNumber(32))            case "button environment editor":                self._global._movie.go(LingoNumber(30))            case "button exit lock":                if (LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized")) and LingoGlobal.op_eq_b(self._global._movie.exitlock, LingoGlobal.TRUE)):                     self._global._movie.exitlock = LingoGlobal.FALSE                                    else:                    self._global._movie.exitlock = LingoGlobal.TRUE                                                case "button grid snap":                if (LingoGlobal.op_eq_b(self._movieScript.snapToGrid, LingoNumber(0)) and LingoGlobal.op_eq_b(self._movieScript.preciseSnap, LingoNumber(0))):                     self._movieScript.snapToGrid = LingoNumber(1)                    self._movieScript.preciseSnap = LingoNumber(0)                    self._movieScript.stg = LingoNumber(1)                    self._movieScript.ps = LingoNumber(0)                                    elif (LingoGlobal.op_eq_b(self._movieScript.snapToGrid, LingoNumber(1)) and LingoGlobal.op_eq_b(self._movieScript.preciseSnap, LingoNumber(0))):                     self._movieScript.snapToGrid = LingoNumber(0)                    self._movieScript.preciseSnap = LingoNumber(1)                    self._movieScript.stg = LingoNumber(0)                    self._movieScript.ps = LingoNumber(1)                                    elif (LingoGlobal.op_eq_b(self._movieScript.preciseSnap, LingoNumber(1)) and LingoGlobal.op_eq_b(self._movieScript.snapToGrid, LingoNumber(0))):                     self._movieScript.snapToGrid = LingoNumber(0)                    self._movieScript.preciseSnap = LingoNumber(0)                    self._movieScript.stg = LingoNumber(0)                    self._movieScript.ps = LingoNumber(0)                                    elif (LingoGlobal.op_eq_b(self._movieScript.preciseSnap, LingoNumber(1)) and LingoGlobal.op_eq_b(self._movieScript.snapToGrid, LingoNumber(1))):                     self._movieScript.snapToGrid = LingoNumber(0)                    self._movieScript.preciseSnap = LingoNumber(0)                    self._movieScript.stg = LingoNumber(0)                    self._movieScript.ps = LingoNumber(0)                                                case "button update preview":                tmp_a=int(LingoNumber(1))                while tmp_a < LingoNumber(3):                     a = tmp_a                    self._movieScript.minilvleditdraw(a)
                    tmp_a = a                    tmp_a += 1                                    sav = self._movieScript.gLEProps.campos                self._movieScript.gLEProps.campos = LingoGlobal.point(LingoNumber(0),LingoNumber(0))                cols = self._movieScript.gLOprops.size.loch                rows = self._movieScript.gLOprops.size.locv                self._global.member("levelEditImageShortCuts").image = self._global.image(LingoGlobal.op_mul(cols,LingoNumber(5)),LingoGlobal.op_mul(rows,LingoNumber(5)),LingoNumber(1))                self._movieScript.drawshortcutsimg(LingoGlobal.rect(LingoNumber(1),LingoNumber(1),cols,rows),LingoNumber(5),LingoNumber(1))
                self._movieScript.gLEProps.campos = sav                            case "button prio cam":                self._movieScript.gPrioCam = LingoGlobal.op_add(self._movieScript.gPrioCam,LingoNumber(1))                if self._movieScript.gPrioCam > self._movieScript.gCameraProps.cameras.count:                     self._movieScript.gPrioCam = LingoNumber(0)                                    if LingoGlobal.op_eq_b(self._movieScript.gPrioCam, LingoNumber(0)):                     self._global.member("PrioCamText").text = "NONE"                    self._global.sprite(LingoNumber(123)).rect = LingoGlobal.rect(-LingoNumber(100),-LingoNumber(100),-LingoNumber(100),-LingoNumber(100))                                    else:                    self._global.member("PrioCamText").text = LingoGlobal.concat("Will render camera ",self._movieScript.gPrioCam," first")                    maprect = self._global.sprite(LingoNumber(115)).rect                    cpos = LingoGlobal.op_add(self._movieScript.gCameraProps.cameras[self._movieScript.gPrioCam],LingoGlobal.point(LingoNumber(0.0010),LingoNumber(0.0010)))                    self._global.sprite(LingoNumber(123)).rect = LingoGlobal.rect(self._movieScript.lerp(maprect.left,maprect.right,LingoGlobal.op_div(cpos.loch,LingoGlobal.op_mul(self._movieScript.gLOprops.size.loch,LingoNumber(20)))),self._movieScript.lerp(maprect.top,maprect.bottom,LingoGlobal.op_div(cpos.locv,LingoGlobal.op_mul(self._movieScript.gLOprops.size.locv,LingoNumber(20)))),self._movieScript.lerp(maprect.left,maprect.right,LingoGlobal.op_div(LingoGlobal.op_add(cpos.loch,LingoNumber(1366)),LingoGlobal.op_mul(self._movieScript.gLOprops.size.loch,LingoNumber(20)))),self._movieScript.lerp(maprect.top,maprect.bottom,LingoGlobal.op_div(LingoGlobal.op_add(cpos.locv,LingoNumber(768)),LingoGlobal.op_mul(self._movieScript.gLOprops.size.locv,LingoNumber(20)))))                                                case "button lvlpropoutput":                if LingoGlobal.op_eq_b(self._movieScript.lvlPropOutput, LingoGlobal.FALSE):                     self._movieScript.lvlPropOutput = LingoGlobal.TRUE                                    else:                    self._movieScript.lvlPropOutput = LingoGlobal.FALSE                                                                return None            def gotoeditor(self):         gofrm = None        q = None        gofrm = LingoNumber(0)        if (LingoGlobal.ToBool(self._global._key.keypressed("1")) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             gofrm = LingoNumber(9)                    elif (LingoGlobal.ToBool(self._global._key.keypressed("2")) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             gofrm = LingoNumber(15)                    elif (LingoGlobal.ToBool(self._global._key.keypressed("3")) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             gofrm = LingoNumber(25)                    elif (LingoGlobal.ToBool(self._global._key.keypressed("4")) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             gofrm = LingoNumber(32)                    elif (LingoGlobal.ToBool(self._global._key.keypressed("5")) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             gofrm = LingoNumber(38)                    elif (LingoGlobal.ToBool(self._global._key.keypressed("6")) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             gofrm = LingoNumber(19)            self._global.member("widthInput").text = self._movieScript.gLOprops.size.loch            self._global.member("heightInput").text = self._movieScript.gLOprops.size.locv            self._movieScript.newSize = LingoList(self._movieScript.gLOprops.size.loch,self._movieScript.gLOprops.size.locv,LingoNumber(0),LingoNumber(0))            self._movieScript.extraBufferTiles = self._movieScript.gLOprops.extratiles.duplicate()            self._global.member("extraTilesLeft").text = self._movieScript.extraBufferTiles[LingoNumber(1)]            self._global.member("extraTilesTop").text = self._movieScript.extraBufferTiles[LingoNumber(2)]            self._global.member("extraTilesRight").text = self._movieScript.extraBufferTiles[LingoNumber(3)]            self._global.member("extraTilesBottom").text = self._movieScript.extraBufferTiles[LingoNumber(4)]            self._global.member("addTilesTop").text = "0"            self._global.member("addTilesLeft").text = "0"                    elif (LingoGlobal.ToBool(self._global._key.keypressed("7")) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             gofrm = LingoNumber(34)                    elif (LingoGlobal.ToBool(self._global._key.keypressed("8")) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             gofrm = LingoNumber(23)                    elif (LingoGlobal.ToBool(self._global._key.keypressed("9")) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             gofrm = LingoNumber(30)                    elif ((LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(56))) and LingoGlobal.ToBool(self._global._key.keypressed(LingoNumber(48)))) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             self._global._player.appminimize()        elif LingoGlobal.ToBool(self._movieScript.checkexit()):             self._global._player.quit()        elif (LingoGlobal.ToBool(self._global._key.keypressed("0")) and LingoGlobal.op_ne_b(self._global._movie.window.sizestate, LingoSymbol("minimized"))):             self._movieScript.levelName = self._movieScript.gLoadedName            self._global.member("projectNameInput").text = self._movieScript.gLoadedName            gofrm = LingoNumber(13)                    if LingoGlobal.op_ne_b(gofrm, LingoNumber(0)):             tmp_q=int(LingoNumber(1))            while tmp_q < LingoNumber(5):                 q = tmp_q                self._global.sound(q).stop()
                tmp_q = q                tmp_q += 1                            if LingoGlobal.op_ne_b(self._movieScript.gSEprops.sounds, LingoGlobal.VOID):                 self._movieScript.gLevel.ambientsounds = LingoList()                tmp_q=int(LingoNumber(1))                while tmp_q < LingoNumber(4):                     q = tmp_q                    if (LingoGlobal.op_ne_b(self._movieScript.gSEprops.sounds[q].mem, "none") and self._movieScript.gSEprops.sounds[q].vol > LingoNumber(0)):                         self._movieScript.gLevel.ambientsounds.add(self._movieScript.gSEprops.sounds[q].duplicate())
                        self._movieScript.gSEprops.sounds[q].mem = "None"                                            tmp_q = q                    tmp_q += 1                                    self._movieScript.gSEprops.sounds = LingoGlobal.VOID                            tmp_q=int(LingoNumber(1))            while tmp_q < LingoNumber(22):                 q = tmp_q                self._global.sprite(q).visibility = LingoNumber(1)                tmp_q = q                tmp_q += 1                            tmp_q=int(LingoNumber(800))            while tmp_q < LingoNumber(820):                 q = tmp_q                self._global.sprite(q).visibility = LingoGlobal.op_eq(gofrm,LingoNumber(15))                tmp_q = q                tmp_q += 1                            self._global._movie.go(gofrm)                return None            def updatelizardslist(self):         l1 = None        l2 = None        lz = None        q = None        c = None        pnt1 = None        pnt2 = None        l1 = LingoList("pink","green","blue","white","red","yellow")        l2 = LingoList(self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(255)),self._global.color(LingoNumber(0),LingoNumber(255),LingoNumber(0)),self._global.color(LingoNumber(0),LingoNumber(100),LingoNumber(255)),self._global.color(LingoNumber(255),LingoNumber(255),LingoNumber(255)),self._global.color(LingoNumber(255),LingoNumber(0),LingoNumber(0)),self._global.color(LingoNumber(255),LingoNumber(200),LingoNumber(0)))        lz = LingoList()        tmp_q=int(LingoNumber(1))        while tmp_q < self._movieScript.gLOprops.size.loch:             q = tmp_q            tmp_c=int(LingoNumber(1))            while tmp_c < self._movieScript.gLOprops.size.locv:                 c = tmp_c                if self._movieScript.gLEProps.matrix[q][c][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(7)) > LingoNumber(0):                     lz.add(LingoGlobal.point(q,c))                tmp_c = c                tmp_c += 1                            tmp_q = q            tmp_q += 1                    if LingoGlobal.op_ne_b(lz, LingoList()):             tmp_q=int(LingoNumber(1))            while tmp_q < self._movieScript.gLevel.lizards.count:                 q = tmp_q                self._global.member(LingoGlobal.concat("lizard",q,"text")).text = LingoGlobal.concat_space(self._movieScript.gLevel.lizards[q][LingoNumber(1)],"- Flies:",self._movieScript.gLevel.lizards[q][LingoNumber(2)],"- Time:",self._movieScript.gLevel.lizards[q][LingoNumber(3)])                self._global.sprite(LingoGlobal.op_add(LingoNumber(51),q)).color = l2[l1.getpos(self._movieScript.gLevel.lizards[q][LingoNumber(1)])]                self._global.sprite(LingoGlobal.op_add(LingoNumber(55),q)).color = l2[l1.getpos(self._movieScript.gLevel.lizards[q][LingoNumber(1)])]                if self._movieScript.gLevel.lizards[q][LingoNumber(4)] > lz.count:                     self._movieScript.gLevel.lizards[q][LingoNumber(4)] = lz.count                                    pnt1 = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_mul(lz[self._movieScript.gLevel.lizards[q][LingoNumber(4)]],LingoNumber(10)),LingoGlobal.point(LingoNumber(52),LingoNumber(112))),LingoGlobal.point(-LingoNumber(5),-LingoNumber(5)))                pnt2 = LingoGlobal.point(self._global.sprite(LingoGlobal.op_add(LingoNumber(51),q)).rect.left,LingoGlobal.op_add(self._global.sprite(LingoGlobal.op_add(LingoNumber(51),q)).rect.top,LingoGlobal.op_mul(self._global.sprite(LingoGlobal.op_add(LingoNumber(51),q)).rect.height,LingoNumber(0.5000))))                self._global.sprite(LingoGlobal.op_add(LingoNumber(55),q)).rect = LingoGlobal.rect(pnt1,pnt2)                self._global.sprite(LingoGlobal.op_add(LingoNumber(55),q)).member = self._global.member(LingoGlobal.concat("line",LingoGlobal.op_add(LingoNumber(1),LingoGlobal.op_gt(pnt1.locv,pnt2.locv))))                tmp_q = q                tmp_q += 1                            tmp_q=int(LingoGlobal.op_add(self._movieScript.gLevel.lizards.count,LingoNumber(1)))            while tmp_q < LingoNumber(4):                 q = tmp_q                self._global.member(LingoGlobal.concat("lizard",q,"text")).text = ""                self._global.sprite(LingoGlobal.op_add(LingoNumber(55),q)).rect = LingoGlobal.rect(-LingoNumber(100),-LingoNumber(100),-LingoNumber(100),-LingoNumber(100))                tmp_q = q                tmp_q += 1                                    else:            tmp_q=int(LingoNumber(1))            while tmp_q < LingoNumber(4):                 q = tmp_q                self._global.member(LingoGlobal.concat("lizard",q,"text")).text = ""                self._global.sprite(LingoGlobal.op_add(LingoNumber(55),q)).rect = LingoGlobal.rect(-LingoNumber(100),-LingoNumber(100),-LingoNumber(100),-LingoNumber(100))                tmp_q = q                tmp_q += 1                                            return None            def nexthole(self):         lz = None        q = None        c = None        pnt = None        lz = LingoList()        tmp_q=int(LingoNumber(1))        while tmp_q < self._movieScript.gLOprops.size.loch:             q = tmp_q            tmp_c=int(LingoNumber(1))            while tmp_c < self._movieScript.gLOprops.size.locv:                 c = tmp_c                if self._movieScript.gLEProps.matrix[q][c][LingoNumber(1)][LingoNumber(2)].getpos(LingoNumber(7)) > LingoNumber(0):                     lz.add(LingoGlobal.point(q,c))                tmp_c = c                tmp_c += 1                            tmp_q = q            tmp_q += 1                    if LingoGlobal.op_ne_b(lz, LingoList()):             self._movieScript.gEditLizard[LingoNumber(4)] = LingoGlobal.op_add(self._movieScript.gEditLizard[LingoNumber(4)],LingoNumber(1))            if self._movieScript.gEditLizard[LingoNumber(4)] > lz.count:                 self._movieScript.gEditLizard[LingoNumber(4)] = LingoNumber(1)                            pnt = LingoGlobal.op_add(LingoGlobal.op_add(LingoGlobal.op_mul(lz[self._movieScript.gEditLizard[LingoNumber(4)]],LingoNumber(10)),LingoGlobal.point(LingoNumber(52),LingoNumber(112))),LingoGlobal.point(-LingoNumber(5),-LingoNumber(5)))            self._global.sprite(LingoNumber(60)).rect = LingoGlobal.op_add(LingoGlobal.rect(pnt,pnt),LingoGlobal.rect(-LingoNumber(5),-LingoNumber(5),LingoNumber(5),LingoNumber(5)))                    else:            self._global.sprite(LingoNumber(60)).rect = LingoGlobal.rect(-LingoNumber(5),-LingoNumber(5),-LingoNumber(5),-LingoNumber(5))                            return None            